(global["webpackJsonp"] = global["webpackJsonp"] || []).push([["common/vendor"],[
/* 0 */,
/* 1 */
/*!*********************************************************!*\
  !*** ./node_modules/@dcloudio/uni-mp-weixin/dist/wx.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var objectKeys = ['qy', 'env', 'error', 'version', 'lanDebug', 'cloud', 'serviceMarket', 'router', 'worklet', '__webpack_require_UNI_MP_PLUGIN__'];
var singlePageDisableKey = ['lanDebug', 'router', 'worklet'];
var target = typeof globalThis !== 'undefined' ? globalThis : function () {
  return this;
}();
var key = ['w', 'x'].join('');
var oldWx = target[key];
var launchOption = oldWx.getLaunchOptionsSync ? oldWx.getLaunchOptionsSync() : null;
function isWxKey(key) {
  if (launchOption && launchOption.scene === 1154 && singlePageDisableKey.includes(key)) {
    return false;
  }
  return objectKeys.indexOf(key) > -1 || typeof oldWx[key] === 'function';
}
function initWx() {
  var newWx = {};
  for (var _key in oldWx) {
    if (isWxKey(_key)) {
      // TODO wrapper function
      newWx[_key] = oldWx[_key];
    }
  }
  return newWx;
}
target[key] = initWx();
var _default = target[key];
exports.default = _default;

/***/ }),
/* 2 */
/*!************************************************************!*\
  !*** ./node_modules/@dcloudio/uni-mp-weixin/dist/index.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(wx, global) {

var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ 4);
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.createApp = createApp;
exports.createComponent = createComponent;
exports.createPage = createPage;
exports.createPlugin = createPlugin;
exports.createSubpackageApp = createSubpackageApp;
exports.default = void 0;
var _slicedToArray2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/slicedToArray */ 5));
var _defineProperty2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/defineProperty */ 11));
var _construct2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/construct */ 15));
var _toConsumableArray2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/toConsumableArray */ 18));
var _typeof2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/typeof */ 13));
var _uniI18n = __webpack_require__(/*! @dcloudio/uni-i18n */ 22);
var _vue = _interopRequireDefault(__webpack_require__(/*! vue */ 25));
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var realAtob;
var b64 = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';
var b64re = /^(?:[A-Za-z\d+/]{4})*?(?:[A-Za-z\d+/]{2}(?:==)?|[A-Za-z\d+/]{3}=?)?$/;
if (typeof atob !== 'function') {
  realAtob = function realAtob(str) {
    str = String(str).replace(/[\t\n\f\r ]+/g, '');
    if (!b64re.test(str)) {
      throw new Error("Failed to execute 'atob' on 'Window': The string to be decoded is not correctly encoded.");
    }

    // Adding the padding if missing, for semplicity
    str += '=='.slice(2 - (str.length & 3));
    var bitmap;
    var result = '';
    var r1;
    var r2;
    var i = 0;
    for (; i < str.length;) {
      bitmap = b64.indexOf(str.charAt(i++)) << 18 | b64.indexOf(str.charAt(i++)) << 12 | (r1 = b64.indexOf(str.charAt(i++))) << 6 | (r2 = b64.indexOf(str.charAt(i++)));
      result += r1 === 64 ? String.fromCharCode(bitmap >> 16 & 255) : r2 === 64 ? String.fromCharCode(bitmap >> 16 & 255, bitmap >> 8 & 255) : String.fromCharCode(bitmap >> 16 & 255, bitmap >> 8 & 255, bitmap & 255);
    }
    return result;
  };
} else {
  // 注意atob只能在全局对象上调用，例如：`const Base64 = {atob};Base64.atob('xxxx')`是错误的用法
  realAtob = atob;
}
function b64DecodeUnicode(str) {
  return decodeURIComponent(realAtob(str).split('').map(function (c) {
    return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);
  }).join(''));
}
function getCurrentUserInfo() {
  var token = wx.getStorageSync('uni_id_token') || '';
  var tokenArr = token.split('.');
  if (!token || tokenArr.length !== 3) {
    return {
      uid: null,
      role: [],
      permission: [],
      tokenExpired: 0
    };
  }
  var userInfo;
  try {
    userInfo = JSON.parse(b64DecodeUnicode(tokenArr[1]));
  } catch (error) {
    throw new Error('获取当前用户信息出错，详细错误信息为：' + error.message);
  }
  userInfo.tokenExpired = userInfo.exp * 1000;
  delete userInfo.exp;
  delete userInfo.iat;
  return userInfo;
}
function uniIdMixin(Vue) {
  Vue.prototype.uniIDHasRole = function (roleId) {
    var _getCurrentUserInfo = getCurrentUserInfo(),
      role = _getCurrentUserInfo.role;
    return role.indexOf(roleId) > -1;
  };
  Vue.prototype.uniIDHasPermission = function (permissionId) {
    var _getCurrentUserInfo2 = getCurrentUserInfo(),
      permission = _getCurrentUserInfo2.permission;
    return this.uniIDHasRole('admin') || permission.indexOf(permissionId) > -1;
  };
  Vue.prototype.uniIDTokenValid = function () {
    var _getCurrentUserInfo3 = getCurrentUserInfo(),
      tokenExpired = _getCurrentUserInfo3.tokenExpired;
    return tokenExpired > Date.now();
  };
}
var _toString = Object.prototype.toString;
var hasOwnProperty = Object.prototype.hasOwnProperty;
function isFn(fn) {
  return typeof fn === 'function';
}
function isStr(str) {
  return typeof str === 'string';
}
function isObject(obj) {
  return obj !== null && (0, _typeof2.default)(obj) === 'object';
}
function isPlainObject(obj) {
  return _toString.call(obj) === '[object Object]';
}
function hasOwn(obj, key) {
  return hasOwnProperty.call(obj, key);
}
function noop() {}

/**
 * Create a cached version of a pure function.
 */
function cached(fn) {
  var cache = Object.create(null);
  return function cachedFn(str) {
    var hit = cache[str];
    return hit || (cache[str] = fn(str));
  };
}

/**
 * Camelize a hyphen-delimited string.
 */
var camelizeRE = /-(\w)/g;
var camelize = cached(function (str) {
  return str.replace(camelizeRE, function (_, c) {
    return c ? c.toUpperCase() : '';
  });
});
function sortObject(obj) {
  var sortObj = {};
  if (isPlainObject(obj)) {
    Object.keys(obj).sort().forEach(function (key) {
      sortObj[key] = obj[key];
    });
  }
  return !Object.keys(sortObj) ? obj : sortObj;
}
var HOOKS = ['invoke', 'success', 'fail', 'complete', 'returnValue'];
var globalInterceptors = {};
var scopedInterceptors = {};
function mergeHook(parentVal, childVal) {
  var res = childVal ? parentVal ? parentVal.concat(childVal) : Array.isArray(childVal) ? childVal : [childVal] : parentVal;
  return res ? dedupeHooks(res) : res;
}
function dedupeHooks(hooks) {
  var res = [];
  for (var i = 0; i < hooks.length; i++) {
    if (res.indexOf(hooks[i]) === -1) {
      res.push(hooks[i]);
    }
  }
  return res;
}
function removeHook(hooks, hook) {
  var index = hooks.indexOf(hook);
  if (index !== -1) {
    hooks.splice(index, 1);
  }
}
function mergeInterceptorHook(interceptor, option) {
  Object.keys(option).forEach(function (hook) {
    if (HOOKS.indexOf(hook) !== -1 && isFn(option[hook])) {
      interceptor[hook] = mergeHook(interceptor[hook], option[hook]);
    }
  });
}
function removeInterceptorHook(interceptor, option) {
  if (!interceptor || !option) {
    return;
  }
  Object.keys(option).forEach(function (hook) {
    if (HOOKS.indexOf(hook) !== -1 && isFn(option[hook])) {
      removeHook(interceptor[hook], option[hook]);
    }
  });
}
function addInterceptor(method, option) {
  if (typeof method === 'string' && isPlainObject(option)) {
    mergeInterceptorHook(scopedInterceptors[method] || (scopedInterceptors[method] = {}), option);
  } else if (isPlainObject(method)) {
    mergeInterceptorHook(globalInterceptors, method);
  }
}
function removeInterceptor(method, option) {
  if (typeof method === 'string') {
    if (isPlainObject(option)) {
      removeInterceptorHook(scopedInterceptors[method], option);
    } else {
      delete scopedInterceptors[method];
    }
  } else if (isPlainObject(method)) {
    removeInterceptorHook(globalInterceptors, method);
  }
}
function wrapperHook(hook, params) {
  return function (data) {
    return hook(data, params) || data;
  };
}
function isPromise(obj) {
  return !!obj && ((0, _typeof2.default)(obj) === 'object' || typeof obj === 'function') && typeof obj.then === 'function';
}
function queue(hooks, data, params) {
  var promise = false;
  for (var i = 0; i < hooks.length; i++) {
    var hook = hooks[i];
    if (promise) {
      promise = Promise.resolve(wrapperHook(hook, params));
    } else {
      var res = hook(data, params);
      if (isPromise(res)) {
        promise = Promise.resolve(res);
      }
      if (res === false) {
        return {
          then: function then() {}
        };
      }
    }
  }
  return promise || {
    then: function then(callback) {
      return callback(data);
    }
  };
}
function wrapperOptions(interceptor) {
  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  ['success', 'fail', 'complete'].forEach(function (name) {
    if (Array.isArray(interceptor[name])) {
      var oldCallback = options[name];
      options[name] = function callbackInterceptor(res) {
        queue(interceptor[name], res, options).then(function (res) {
          /* eslint-disable no-mixed-operators */
          return isFn(oldCallback) && oldCallback(res) || res;
        });
      };
    }
  });
  return options;
}
function wrapperReturnValue(method, returnValue) {
  var returnValueHooks = [];
  if (Array.isArray(globalInterceptors.returnValue)) {
    returnValueHooks.push.apply(returnValueHooks, (0, _toConsumableArray2.default)(globalInterceptors.returnValue));
  }
  var interceptor = scopedInterceptors[method];
  if (interceptor && Array.isArray(interceptor.returnValue)) {
    returnValueHooks.push.apply(returnValueHooks, (0, _toConsumableArray2.default)(interceptor.returnValue));
  }
  returnValueHooks.forEach(function (hook) {
    returnValue = hook(returnValue) || returnValue;
  });
  return returnValue;
}
function getApiInterceptorHooks(method) {
  var interceptor = Object.create(null);
  Object.keys(globalInterceptors).forEach(function (hook) {
    if (hook !== 'returnValue') {
      interceptor[hook] = globalInterceptors[hook].slice();
    }
  });
  var scopedInterceptor = scopedInterceptors[method];
  if (scopedInterceptor) {
    Object.keys(scopedInterceptor).forEach(function (hook) {
      if (hook !== 'returnValue') {
        interceptor[hook] = (interceptor[hook] || []).concat(scopedInterceptor[hook]);
      }
    });
  }
  return interceptor;
}
function invokeApi(method, api, options) {
  for (var _len = arguments.length, params = new Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++) {
    params[_key - 3] = arguments[_key];
  }
  var interceptor = getApiInterceptorHooks(method);
  if (interceptor && Object.keys(interceptor).length) {
    if (Array.isArray(interceptor.invoke)) {
      var res = queue(interceptor.invoke, options);
      return res.then(function (options) {
        // 重新访问 getApiInterceptorHooks, 允许 invoke 中再次调用 addInterceptor,removeInterceptor
        return api.apply(void 0, [wrapperOptions(getApiInterceptorHooks(method), options)].concat(params));
      });
    } else {
      return api.apply(void 0, [wrapperOptions(interceptor, options)].concat(params));
    }
  }
  return api.apply(void 0, [options].concat(params));
}
var promiseInterceptor = {
  returnValue: function returnValue(res) {
    if (!isPromise(res)) {
      return res;
    }
    return new Promise(function (resolve, reject) {
      res.then(function (res) {
        if (res[0]) {
          reject(res[0]);
        } else {
          resolve(res[1]);
        }
      });
    });
  }
};
var SYNC_API_RE = /^\$|Window$|WindowStyle$|sendHostEvent|sendNativeEvent|restoreGlobal|requireGlobal|getCurrentSubNVue|getMenuButtonBoundingClientRect|^report|interceptors|Interceptor$|getSubNVueById|requireNativePlugin|upx2px|hideKeyboard|canIUse|^create|Sync$|Manager$|base64ToArrayBuffer|arrayBufferToBase64|getLocale|setLocale|invokePushCallback|getWindowInfo|getDeviceInfo|getAppBaseInfo|getSystemSetting|getAppAuthorizeSetting|initUTS|requireUTS|registerUTS/;
var CONTEXT_API_RE = /^create|Manager$/;

// Context例外情况
var CONTEXT_API_RE_EXC = ['createBLEConnection'];

// 同步例外情况
var ASYNC_API = ['createBLEConnection', 'createPushMessage'];
var CALLBACK_API_RE = /^on|^off/;
function isContextApi(name) {
  return CONTEXT_API_RE.test(name) && CONTEXT_API_RE_EXC.indexOf(name) === -1;
}
function isSyncApi(name) {
  return SYNC_API_RE.test(name) && ASYNC_API.indexOf(name) === -1;
}
function isCallbackApi(name) {
  return CALLBACK_API_RE.test(name) && name !== 'onPush';
}
function handlePromise(promise) {
  return promise.then(function (data) {
    return [null, data];
  }).catch(function (err) {
    return [err];
  });
}
function shouldPromise(name) {
  if (isContextApi(name) || isSyncApi(name) || isCallbackApi(name)) {
    return false;
  }
  return true;
}

/* eslint-disable no-extend-native */
if (!Promise.prototype.finally) {
  Promise.prototype.finally = function (callback) {
    var promise = this.constructor;
    return this.then(function (value) {
      return promise.resolve(callback()).then(function () {
        return value;
      });
    }, function (reason) {
      return promise.resolve(callback()).then(function () {
        throw reason;
      });
    });
  };
}
function promisify(name, api) {
  if (!shouldPromise(name) || !isFn(api)) {
    return api;
  }
  return function promiseApi() {
    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    for (var _len2 = arguments.length, params = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
      params[_key2 - 1] = arguments[_key2];
    }
    if (isFn(options.success) || isFn(options.fail) || isFn(options.complete)) {
      return wrapperReturnValue(name, invokeApi.apply(void 0, [name, api, options].concat(params)));
    }
    return wrapperReturnValue(name, handlePromise(new Promise(function (resolve, reject) {
      invokeApi.apply(void 0, [name, api, Object.assign({}, options, {
        success: resolve,
        fail: reject
      })].concat(params));
    })));
  };
}
var EPS = 1e-4;
var BASE_DEVICE_WIDTH = 750;
var isIOS = false;
var deviceWidth = 0;
var deviceDPR = 0;
function checkDeviceWidth() {
  var _wx$getSystemInfoSync = wx.getSystemInfoSync(),
    platform = _wx$getSystemInfoSync.platform,
    pixelRatio = _wx$getSystemInfoSync.pixelRatio,
    windowWidth = _wx$getSystemInfoSync.windowWidth; // uni=>wx runtime 编译目标是 uni 对象，内部不允许直接使用 uni

  deviceWidth = windowWidth;
  deviceDPR = pixelRatio;
  isIOS = platform === 'ios';
}
function upx2px(number, newDeviceWidth) {
  if (deviceWidth === 0) {
    checkDeviceWidth();
  }
  number = Number(number);
  if (number === 0) {
    return 0;
  }
  var result = number / BASE_DEVICE_WIDTH * (newDeviceWidth || deviceWidth);
  if (result < 0) {
    result = -result;
  }
  result = Math.floor(result + EPS);
  if (result === 0) {
    if (deviceDPR === 1 || !isIOS) {
      result = 1;
    } else {
      result = 0.5;
    }
  }
  return number < 0 ? -result : result;
}
var LOCALE_ZH_HANS = 'zh-Hans';
var LOCALE_ZH_HANT = 'zh-Hant';
var LOCALE_EN = 'en';
var LOCALE_FR = 'fr';
var LOCALE_ES = 'es';
var messages = {};
var locale;
{
  locale = normalizeLocale(wx.getSystemInfoSync().language) || LOCALE_EN;
}
function initI18nMessages() {
  if (!isEnableLocale()) {
    return;
  }
  var localeKeys = Object.keys(__uniConfig.locales);
  if (localeKeys.length) {
    localeKeys.forEach(function (locale) {
      var curMessages = messages[locale];
      var userMessages = __uniConfig.locales[locale];
      if (curMessages) {
        Object.assign(curMessages, userMessages);
      } else {
        messages[locale] = userMessages;
      }
    });
  }
}
initI18nMessages();
var i18n = (0, _uniI18n.initVueI18n)(locale, {});
var t = i18n.t;
var i18nMixin = i18n.mixin = {
  beforeCreate: function beforeCreate() {
    var _this = this;
    var unwatch = i18n.i18n.watchLocale(function () {
      _this.$forceUpdate();
    });
    this.$once('hook:beforeDestroy', function () {
      unwatch();
    });
  },
  methods: {
    $$t: function $$t(key, values) {
      return t(key, values);
    }
  }
};
var setLocale = i18n.setLocale;
var getLocale = i18n.getLocale;
function initAppLocale(Vue, appVm, locale) {
  var state = Vue.observable({
    locale: locale || i18n.getLocale()
  });
  var localeWatchers = [];
  appVm.$watchLocale = function (fn) {
    localeWatchers.push(fn);
  };
  Object.defineProperty(appVm, '$locale', {
    get: function get() {
      return state.locale;
    },
    set: function set(v) {
      state.locale = v;
      localeWatchers.forEach(function (watch) {
        return watch(v);
      });
    }
  });
}
function isEnableLocale() {
  return typeof __uniConfig !== 'undefined' && __uniConfig.locales && !!Object.keys(__uniConfig.locales).length;
}
function include(str, parts) {
  return !!parts.find(function (part) {
    return str.indexOf(part) !== -1;
  });
}
function startsWith(str, parts) {
  return parts.find(function (part) {
    return str.indexOf(part) === 0;
  });
}
function normalizeLocale(locale, messages) {
  if (!locale) {
    return;
  }
  locale = locale.trim().replace(/_/g, '-');
  if (messages && messages[locale]) {
    return locale;
  }
  locale = locale.toLowerCase();
  if (locale === 'chinese') {
    // 支付宝
    return LOCALE_ZH_HANS;
  }
  if (locale.indexOf('zh') === 0) {
    if (locale.indexOf('-hans') > -1) {
      return LOCALE_ZH_HANS;
    }
    if (locale.indexOf('-hant') > -1) {
      return LOCALE_ZH_HANT;
    }
    if (include(locale, ['-tw', '-hk', '-mo', '-cht'])) {
      return LOCALE_ZH_HANT;
    }
    return LOCALE_ZH_HANS;
  }
  var lang = startsWith(locale, [LOCALE_EN, LOCALE_FR, LOCALE_ES]);
  if (lang) {
    return lang;
  }
}
// export function initI18n() {
//   const localeKeys = Object.keys(__uniConfig.locales || {})
//   if (localeKeys.length) {
//     localeKeys.forEach((locale) =>
//       i18n.add(locale, __uniConfig.locales[locale])
//     )
//   }
// }

function getLocale$1() {
  // 优先使用 $locale
  if (isFn(getApp)) {
    var app = getApp({
      allowDefault: true
    });
    if (app && app.$vm) {
      return app.$vm.$locale;
    }
  }
  return normalizeLocale(wx.getSystemInfoSync().language) || LOCALE_EN;
}
function setLocale$1(locale) {
  var app = isFn(getApp) ? getApp() : false;
  if (!app) {
    return false;
  }
  var oldLocale = app.$vm.$locale;
  if (oldLocale !== locale) {
    app.$vm.$locale = locale;
    onLocaleChangeCallbacks.forEach(function (fn) {
      return fn({
        locale: locale
      });
    });
    return true;
  }
  return false;
}
var onLocaleChangeCallbacks = [];
function onLocaleChange(fn) {
  if (onLocaleChangeCallbacks.indexOf(fn) === -1) {
    onLocaleChangeCallbacks.push(fn);
  }
}
if (typeof global !== 'undefined') {
  global.getLocale = getLocale$1;
}
var interceptors = {
  promiseInterceptor: promiseInterceptor
};
var baseApi = /*#__PURE__*/Object.freeze({
  __proto__: null,
  upx2px: upx2px,
  getLocale: getLocale$1,
  setLocale: setLocale$1,
  onLocaleChange: onLocaleChange,
  addInterceptor: addInterceptor,
  removeInterceptor: removeInterceptor,
  interceptors: interceptors
});
function findExistsPageIndex(url) {
  var pages = getCurrentPages();
  var len = pages.length;
  while (len--) {
    var page = pages[len];
    if (page.$page && page.$page.fullPath === url) {
      return len;
    }
  }
  return -1;
}
var redirectTo = {
  name: function name(fromArgs) {
    if (fromArgs.exists === 'back' && fromArgs.delta) {
      return 'navigateBack';
    }
    return 'redirectTo';
  },
  args: function args(fromArgs) {
    if (fromArgs.exists === 'back' && fromArgs.url) {
      var existsPageIndex = findExistsPageIndex(fromArgs.url);
      if (existsPageIndex !== -1) {
        var delta = getCurrentPages().length - 1 - existsPageIndex;
        if (delta > 0) {
          fromArgs.delta = delta;
        }
      }
    }
  }
};
var previewImage = {
  args: function args(fromArgs) {
    var currentIndex = parseInt(fromArgs.current);
    if (isNaN(currentIndex)) {
      return;
    }
    var urls = fromArgs.urls;
    if (!Array.isArray(urls)) {
      return;
    }
    var len = urls.length;
    if (!len) {
      return;
    }
    if (currentIndex < 0) {
      currentIndex = 0;
    } else if (currentIndex >= len) {
      currentIndex = len - 1;
    }
    if (currentIndex > 0) {
      fromArgs.current = urls[currentIndex];
      fromArgs.urls = urls.filter(function (item, index) {
        return index < currentIndex ? item !== urls[currentIndex] : true;
      });
    } else {
      fromArgs.current = urls[0];
    }
    return {
      indicator: false,
      loop: false
    };
  }
};
var UUID_KEY = '__DC_STAT_UUID';
var deviceId;
function useDeviceId(result) {
  deviceId = deviceId || wx.getStorageSync(UUID_KEY);
  if (!deviceId) {
    deviceId = Date.now() + '' + Math.floor(Math.random() * 1e7);
    wx.setStorage({
      key: UUID_KEY,
      data: deviceId
    });
  }
  result.deviceId = deviceId;
}
function addSafeAreaInsets(result) {
  if (result.safeArea) {
    var safeArea = result.safeArea;
    result.safeAreaInsets = {
      top: safeArea.top,
      left: safeArea.left,
      right: result.windowWidth - safeArea.right,
      bottom: result.screenHeight - safeArea.bottom
    };
  }
}
function populateParameters(result) {
  var _result$brand = result.brand,
    brand = _result$brand === void 0 ? '' : _result$brand,
    _result$model = result.model,
    model = _result$model === void 0 ? '' : _result$model,
    _result$system = result.system,
    system = _result$system === void 0 ? '' : _result$system,
    _result$language = result.language,
    language = _result$language === void 0 ? '' : _result$language,
    theme = result.theme,
    version = result.version,
    platform = result.platform,
    fontSizeSetting = result.fontSizeSetting,
    SDKVersion = result.SDKVersion,
    pixelRatio = result.pixelRatio,
    deviceOrientation = result.deviceOrientation;
  // const isQuickApp = "mp-weixin".indexOf('quickapp-webview') !== -1

  var extraParam = {};

  // osName osVersion
  var osName = '';
  var osVersion = '';
  {
    osName = system.split(' ')[0] || '';
    osVersion = system.split(' ')[1] || '';
  }
  var hostVersion = version;

  // deviceType
  var deviceType = getGetDeviceType(result, model);

  // deviceModel
  var deviceBrand = getDeviceBrand(brand);

  // hostName
  var _hostName = getHostName(result);

  // deviceOrientation
  var _deviceOrientation = deviceOrientation; // 仅 微信 百度 支持

  // devicePixelRatio
  var _devicePixelRatio = pixelRatio;

  // SDKVersion
  var _SDKVersion = SDKVersion;

  // hostLanguage
  var hostLanguage = language.replace(/_/g, '-');

  // wx.getAccountInfoSync

  var parameters = {
    appId: "__UNI__3BAEC09",
    appName: "预报名",
    appVersion: "1.0.0",
    appVersionCode: "100",
    appLanguage: getAppLanguage(hostLanguage),
    uniCompileVersion: "4.08",
    uniRuntimeVersion: "4.08",
    uniPlatform: undefined || "mp-weixin",
    deviceBrand: deviceBrand,
    deviceModel: model,
    deviceType: deviceType,
    devicePixelRatio: _devicePixelRatio,
    deviceOrientation: _deviceOrientation,
    osName: osName.toLocaleLowerCase(),
    osVersion: osVersion,
    hostTheme: theme,
    hostVersion: hostVersion,
    hostLanguage: hostLanguage,
    hostName: _hostName,
    hostSDKVersion: _SDKVersion,
    hostFontSizeSetting: fontSizeSetting,
    windowTop: 0,
    windowBottom: 0,
    // TODO
    osLanguage: undefined,
    osTheme: undefined,
    ua: undefined,
    hostPackageName: undefined,
    browserName: undefined,
    browserVersion: undefined
  };
  Object.assign(result, parameters, extraParam);
}
function getGetDeviceType(result, model) {
  var deviceType = result.deviceType || 'phone';
  {
    var deviceTypeMaps = {
      ipad: 'pad',
      windows: 'pc',
      mac: 'pc'
    };
    var deviceTypeMapsKeys = Object.keys(deviceTypeMaps);
    var _model = model.toLocaleLowerCase();
    for (var index = 0; index < deviceTypeMapsKeys.length; index++) {
      var _m = deviceTypeMapsKeys[index];
      if (_model.indexOf(_m) !== -1) {
        deviceType = deviceTypeMaps[_m];
        break;
      }
    }
  }
  return deviceType;
}
function getDeviceBrand(brand) {
  var deviceBrand = brand;
  if (deviceBrand) {
    deviceBrand = brand.toLocaleLowerCase();
  }
  return deviceBrand;
}
function getAppLanguage(defaultLanguage) {
  return getLocale$1 ? getLocale$1() : defaultLanguage;
}
function getHostName(result) {
  var _platform = 'WeChat';
  var _hostName = result.hostName || _platform; // mp-jd
  {
    if (result.environment) {
      _hostName = result.environment;
    } else if (result.host && result.host.env) {
      _hostName = result.host.env;
    }
  }
  return _hostName;
}
var getSystemInfo = {
  returnValue: function returnValue(result) {
    useDeviceId(result);
    addSafeAreaInsets(result);
    populateParameters(result);
  }
};
var showActionSheet = {
  args: function args(fromArgs) {
    if ((0, _typeof2.default)(fromArgs) === 'object') {
      fromArgs.alertText = fromArgs.title;
    }
  }
};
var getAppBaseInfo = {
  returnValue: function returnValue(result) {
    var _result = result,
      version = _result.version,
      language = _result.language,
      SDKVersion = _result.SDKVersion,
      theme = _result.theme;
    var _hostName = getHostName(result);
    var hostLanguage = language.replace('_', '-');
    result = sortObject(Object.assign(result, {
      appId: "__UNI__3BAEC09",
      appName: "预报名",
      appVersion: "1.0.0",
      appVersionCode: "100",
      appLanguage: getAppLanguage(hostLanguage),
      hostVersion: version,
      hostLanguage: hostLanguage,
      hostName: _hostName,
      hostSDKVersion: SDKVersion,
      hostTheme: theme
    }));
  }
};
var getDeviceInfo = {
  returnValue: function returnValue(result) {
    var _result2 = result,
      brand = _result2.brand,
      model = _result2.model;
    var deviceType = getGetDeviceType(result, model);
    var deviceBrand = getDeviceBrand(brand);
    useDeviceId(result);
    result = sortObject(Object.assign(result, {
      deviceType: deviceType,
      deviceBrand: deviceBrand,
      deviceModel: model
    }));
  }
};
var getWindowInfo = {
  returnValue: function returnValue(result) {
    addSafeAreaInsets(result);
    result = sortObject(Object.assign(result, {
      windowTop: 0,
      windowBottom: 0
    }));
  }
};
var getAppAuthorizeSetting = {
  returnValue: function returnValue(result) {
    var locationReducedAccuracy = result.locationReducedAccuracy;
    result.locationAccuracy = 'unsupported';
    if (locationReducedAccuracy === true) {
      result.locationAccuracy = 'reduced';
    } else if (locationReducedAccuracy === false) {
      result.locationAccuracy = 'full';
    }
  }
};

// import navigateTo from 'uni-helpers/navigate-to'

var compressImage = {
  args: function args(fromArgs) {
    // https://developers.weixin.qq.com/community/develop/doc/000c08940c865011298e0a43256800?highLine=compressHeight
    if (fromArgs.compressedHeight && !fromArgs.compressHeight) {
      fromArgs.compressHeight = fromArgs.compressedHeight;
    }
    if (fromArgs.compressedWidth && !fromArgs.compressWidth) {
      fromArgs.compressWidth = fromArgs.compressedWidth;
    }
  }
};
var protocols = {
  redirectTo: redirectTo,
  // navigateTo,  // 由于在微信开发者工具的页面参数，会显示__id__参数，因此暂时关闭mp-weixin对于navigateTo的AOP
  previewImage: previewImage,
  getSystemInfo: getSystemInfo,
  getSystemInfoSync: getSystemInfo,
  showActionSheet: showActionSheet,
  getAppBaseInfo: getAppBaseInfo,
  getDeviceInfo: getDeviceInfo,
  getWindowInfo: getWindowInfo,
  getAppAuthorizeSetting: getAppAuthorizeSetting,
  compressImage: compressImage
};
var todos = ['vibrate', 'preloadPage', 'unPreloadPage', 'loadSubPackage'];
var canIUses = [];
var CALLBACKS = ['success', 'fail', 'cancel', 'complete'];
function processCallback(methodName, method, returnValue) {
  return function (res) {
    return method(processReturnValue(methodName, res, returnValue));
  };
}
function processArgs(methodName, fromArgs) {
  var argsOption = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  var returnValue = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};
  var keepFromArgs = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;
  if (isPlainObject(fromArgs)) {
    // 一般 api 的参数解析
    var toArgs = keepFromArgs === true ? fromArgs : {}; // returnValue 为 false 时，说明是格式化返回值，直接在返回值对象上修改赋值
    if (isFn(argsOption)) {
      argsOption = argsOption(fromArgs, toArgs) || {};
    }
    for (var key in fromArgs) {
      if (hasOwn(argsOption, key)) {
        var keyOption = argsOption[key];
        if (isFn(keyOption)) {
          keyOption = keyOption(fromArgs[key], fromArgs, toArgs);
        }
        if (!keyOption) {
          // 不支持的参数
          console.warn("The '".concat(methodName, "' method of platform '\u5FAE\u4FE1\u5C0F\u7A0B\u5E8F' does not support option '").concat(key, "'"));
        } else if (isStr(keyOption)) {
          // 重写参数 key
          toArgs[keyOption] = fromArgs[key];
        } else if (isPlainObject(keyOption)) {
          // {name:newName,value:value}可重新指定参数 key:value
          toArgs[keyOption.name ? keyOption.name : key] = keyOption.value;
        }
      } else if (CALLBACKS.indexOf(key) !== -1) {
        if (isFn(fromArgs[key])) {
          toArgs[key] = processCallback(methodName, fromArgs[key], returnValue);
        }
      } else {
        if (!keepFromArgs) {
          toArgs[key] = fromArgs[key];
        }
      }
    }
    return toArgs;
  } else if (isFn(fromArgs)) {
    fromArgs = processCallback(methodName, fromArgs, returnValue);
  }
  return fromArgs;
}
function processReturnValue(methodName, res, returnValue) {
  var keepReturnValue = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;
  if (isFn(protocols.returnValue)) {
    // 处理通用 returnValue
    res = protocols.returnValue(methodName, res);
  }
  return processArgs(methodName, res, returnValue, {}, keepReturnValue);
}
function wrapper(methodName, method) {
  if (hasOwn(protocols, methodName)) {
    var protocol = protocols[methodName];
    if (!protocol) {
      // 暂不支持的 api
      return function () {
        console.error("Platform '\u5FAE\u4FE1\u5C0F\u7A0B\u5E8F' does not support '".concat(methodName, "'."));
      };
    }
    return function (arg1, arg2) {
      // 目前 api 最多两个参数
      var options = protocol;
      if (isFn(protocol)) {
        options = protocol(arg1);
      }
      arg1 = processArgs(methodName, arg1, options.args, options.returnValue);
      var args = [arg1];
      if (typeof arg2 !== 'undefined') {
        args.push(arg2);
      }
      if (isFn(options.name)) {
        methodName = options.name(arg1);
      } else if (isStr(options.name)) {
        methodName = options.name;
      }
      var returnValue = wx[methodName].apply(wx, args);
      if (isSyncApi(methodName)) {
        // 同步 api
        return processReturnValue(methodName, returnValue, options.returnValue, isContextApi(methodName));
      }
      return returnValue;
    };
  }
  return method;
}
var todoApis = Object.create(null);
var TODOS = ['onTabBarMidButtonTap', 'subscribePush', 'unsubscribePush', 'onPush', 'offPush', 'share'];
function createTodoApi(name) {
  return function todoApi(_ref) {
    var fail = _ref.fail,
      complete = _ref.complete;
    var res = {
      errMsg: "".concat(name, ":fail method '").concat(name, "' not supported")
    };
    isFn(fail) && fail(res);
    isFn(complete) && complete(res);
  };
}
TODOS.forEach(function (name) {
  todoApis[name] = createTodoApi(name);
});
var providers = {
  oauth: ['weixin'],
  share: ['weixin'],
  payment: ['wxpay'],
  push: ['weixin']
};
function getProvider(_ref2) {
  var service = _ref2.service,
    success = _ref2.success,
    fail = _ref2.fail,
    complete = _ref2.complete;
  var res = false;
  if (providers[service]) {
    res = {
      errMsg: 'getProvider:ok',
      service: service,
      provider: providers[service]
    };
    isFn(success) && success(res);
  } else {
    res = {
      errMsg: 'getProvider:fail service not found'
    };
    isFn(fail) && fail(res);
  }
  isFn(complete) && complete(res);
}
var extraApi = /*#__PURE__*/Object.freeze({
  __proto__: null,
  getProvider: getProvider
});
var getEmitter = function () {
  var Emitter;
  return function getUniEmitter() {
    if (!Emitter) {
      Emitter = new _vue.default();
    }
    return Emitter;
  };
}();
function apply(ctx, method, args) {
  return ctx[method].apply(ctx, args);
}
function $on() {
  return apply(getEmitter(), '$on', Array.prototype.slice.call(arguments));
}
function $off() {
  return apply(getEmitter(), '$off', Array.prototype.slice.call(arguments));
}
function $once() {
  return apply(getEmitter(), '$once', Array.prototype.slice.call(arguments));
}
function $emit() {
  return apply(getEmitter(), '$emit', Array.prototype.slice.call(arguments));
}
var eventApi = /*#__PURE__*/Object.freeze({
  __proto__: null,
  $on: $on,
  $off: $off,
  $once: $once,
  $emit: $emit
});

/**
 * 框架内 try-catch
 */
/**
 * 开发者 try-catch
 */
function tryCatch(fn) {
  return function () {
    try {
      return fn.apply(fn, arguments);
    } catch (e) {
      // TODO
      console.error(e);
    }
  };
}
function getApiCallbacks(params) {
  var apiCallbacks = {};
  for (var name in params) {
    var param = params[name];
    if (isFn(param)) {
      apiCallbacks[name] = tryCatch(param);
      delete params[name];
    }
  }
  return apiCallbacks;
}
var cid;
var cidErrMsg;
var enabled;
function normalizePushMessage(message) {
  try {
    return JSON.parse(message);
  } catch (e) {}
  return message;
}
function invokePushCallback(args) {
  if (args.type === 'enabled') {
    enabled = true;
  } else if (args.type === 'clientId') {
    cid = args.cid;
    cidErrMsg = args.errMsg;
    invokeGetPushCidCallbacks(cid, args.errMsg);
  } else if (args.type === 'pushMsg') {
    var message = {
      type: 'receive',
      data: normalizePushMessage(args.message)
    };
    for (var i = 0; i < onPushMessageCallbacks.length; i++) {
      var callback = onPushMessageCallbacks[i];
      callback(message);
      // 该消息已被阻止
      if (message.stopped) {
        break;
      }
    }
  } else if (args.type === 'click') {
    onPushMessageCallbacks.forEach(function (callback) {
      callback({
        type: 'click',
        data: normalizePushMessage(args.message)
      });
    });
  }
}
var getPushCidCallbacks = [];
function invokeGetPushCidCallbacks(cid, errMsg) {
  getPushCidCallbacks.forEach(function (callback) {
    callback(cid, errMsg);
  });
  getPushCidCallbacks.length = 0;
}
function getPushClientId(args) {
  if (!isPlainObject(args)) {
    args = {};
  }
  var _getApiCallbacks = getApiCallbacks(args),
    success = _getApiCallbacks.success,
    fail = _getApiCallbacks.fail,
    complete = _getApiCallbacks.complete;
  var hasSuccess = isFn(success);
  var hasFail = isFn(fail);
  var hasComplete = isFn(complete);
  Promise.resolve().then(function () {
    if (typeof enabled === 'undefined') {
      enabled = false;
      cid = '';
      cidErrMsg = 'uniPush is not enabled';
    }
    getPushCidCallbacks.push(function (cid, errMsg) {
      var res;
      if (cid) {
        res = {
          errMsg: 'getPushClientId:ok',
          cid: cid
        };
        hasSuccess && success(res);
      } else {
        res = {
          errMsg: 'getPushClientId:fail' + (errMsg ? ' ' + errMsg : '')
        };
        hasFail && fail(res);
      }
      hasComplete && complete(res);
    });
    if (typeof cid !== 'undefined') {
      invokeGetPushCidCallbacks(cid, cidErrMsg);
    }
  });
}
var onPushMessageCallbacks = [];
// 不使用 defineOnApi 实现，是因为 defineOnApi 依赖 UniServiceJSBridge ，该对象目前在小程序上未提供，故简单实现
var onPushMessage = function onPushMessage(fn) {
  if (onPushMessageCallbacks.indexOf(fn) === -1) {
    onPushMessageCallbacks.push(fn);
  }
};
var offPushMessage = function offPushMessage(fn) {
  if (!fn) {
    onPushMessageCallbacks.length = 0;
  } else {
    var index = onPushMessageCallbacks.indexOf(fn);
    if (index > -1) {
      onPushMessageCallbacks.splice(index, 1);
    }
  }
};
var baseInfo = wx.getAppBaseInfo && wx.getAppBaseInfo();
if (!baseInfo) {
  baseInfo = wx.getSystemInfoSync();
}
var host = baseInfo ? baseInfo.host : null;
var shareVideoMessage = host && host.env === 'SAAASDK' ? wx.miniapp.shareVideoMessage : wx.shareVideoMessage;
var api = /*#__PURE__*/Object.freeze({
  __proto__: null,
  shareVideoMessage: shareVideoMessage,
  getPushClientId: getPushClientId,
  onPushMessage: onPushMessage,
  offPushMessage: offPushMessage,
  invokePushCallback: invokePushCallback
});
var mocks = ['__route__', '__wxExparserNodeId__', '__wxWebviewId__'];
function findVmByVueId(vm, vuePid) {
  var $children = vm.$children;
  // 优先查找直属(反向查找:https://github.com/dcloudio/uni-app/issues/1200)
  for (var i = $children.length - 1; i >= 0; i--) {
    var childVm = $children[i];
    if (childVm.$scope._$vueId === vuePid) {
      return childVm;
    }
  }
  // 反向递归查找
  var parentVm;
  for (var _i = $children.length - 1; _i >= 0; _i--) {
    parentVm = findVmByVueId($children[_i], vuePid);
    if (parentVm) {
      return parentVm;
    }
  }
}
function initBehavior(options) {
  return Behavior(options);
}
function isPage() {
  return !!this.route;
}
function initRelation(detail) {
  this.triggerEvent('__l', detail);
}
function selectAllComponents(mpInstance, selector, $refs) {
  var components = mpInstance.selectAllComponents(selector) || [];
  components.forEach(function (component) {
    var ref = component.dataset.ref;
    $refs[ref] = component.$vm || toSkip(component);
    {
      if (component.dataset.vueGeneric === 'scoped') {
        component.selectAllComponents('.scoped-ref').forEach(function (scopedComponent) {
          selectAllComponents(scopedComponent, selector, $refs);
        });
      }
    }
  });
}
function syncRefs(refs, newRefs) {
  var oldKeys = (0, _construct2.default)(Set, (0, _toConsumableArray2.default)(Object.keys(refs)));
  var newKeys = Object.keys(newRefs);
  newKeys.forEach(function (key) {
    var oldValue = refs[key];
    var newValue = newRefs[key];
    if (Array.isArray(oldValue) && Array.isArray(newValue) && oldValue.length === newValue.length && newValue.every(function (value) {
      return oldValue.includes(value);
    })) {
      return;
    }
    refs[key] = newValue;
    oldKeys.delete(key);
  });
  oldKeys.forEach(function (key) {
    delete refs[key];
  });
  return refs;
}
function initRefs(vm) {
  var mpInstance = vm.$scope;
  var refs = {};
  Object.defineProperty(vm, '$refs', {
    get: function get() {
      var $refs = {};
      selectAllComponents(mpInstance, '.vue-ref', $refs);
      // TODO 暂不考虑 for 中的 scoped
      var forComponents = mpInstance.selectAllComponents('.vue-ref-in-for') || [];
      forComponents.forEach(function (component) {
        var ref = component.dataset.ref;
        if (!$refs[ref]) {
          $refs[ref] = [];
        }
        $refs[ref].push(component.$vm || toSkip(component));
      });
      return syncRefs(refs, $refs);
    }
  });
}
function handleLink(event) {
  var _ref3 = event.detail || event.value,
    vuePid = _ref3.vuePid,
    vueOptions = _ref3.vueOptions; // detail 是微信,value 是百度(dipatch)

  var parentVm;
  if (vuePid) {
    parentVm = findVmByVueId(this.$vm, vuePid);
  }
  if (!parentVm) {
    parentVm = this.$vm;
  }
  vueOptions.parent = parentVm;
}
function markMPComponent(component) {
  // 在 Vue 中标记为小程序组件
  var IS_MP = '__v_isMPComponent';
  Object.defineProperty(component, IS_MP, {
    configurable: true,
    enumerable: false,
    value: true
  });
  return component;
}
function toSkip(obj) {
  var OB = '__ob__';
  var SKIP = '__v_skip';
  if (isObject(obj) && Object.isExtensible(obj)) {
    // 避免被 @vue/composition-api 观测
    Object.defineProperty(obj, OB, {
      configurable: true,
      enumerable: false,
      value: (0, _defineProperty2.default)({}, SKIP, true)
    });
  }
  return obj;
}
var WORKLET_RE = /_(.*)_worklet_factory_/;
function initWorkletMethods(mpMethods, vueMethods) {
  if (vueMethods) {
    Object.keys(vueMethods).forEach(function (name) {
      var matches = name.match(WORKLET_RE);
      if (matches) {
        var workletName = matches[1];
        mpMethods[name] = vueMethods[name];
        mpMethods[workletName] = vueMethods[workletName];
      }
    });
  }
}
var MPPage = Page;
var MPComponent = Component;
var customizeRE = /:/g;
var customize = cached(function (str) {
  return camelize(str.replace(customizeRE, '-'));
});
function initTriggerEvent(mpInstance) {
  var oldTriggerEvent = mpInstance.triggerEvent;
  var newTriggerEvent = function newTriggerEvent(event) {
    for (var _len3 = arguments.length, args = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {
      args[_key3 - 1] = arguments[_key3];
    }
    // 事件名统一转驼峰格式，仅处理：当前组件为 vue 组件、当前组件为 vue 组件子组件
    if (this.$vm || this.dataset && this.dataset.comType) {
      event = customize(event);
    } else {
      // 针对微信/QQ小程序单独补充驼峰格式事件，以兼容历史项目
      var newEvent = customize(event);
      if (newEvent !== event) {
        oldTriggerEvent.apply(this, [newEvent].concat(args));
      }
    }
    return oldTriggerEvent.apply(this, [event].concat(args));
  };
  try {
    // 京东小程序 triggerEvent 为只读
    mpInstance.triggerEvent = newTriggerEvent;
  } catch (error) {
    mpInstance._triggerEvent = newTriggerEvent;
  }
}
function initHook(name, options, isComponent) {
  var oldHook = options[name];
  options[name] = function () {
    markMPComponent(this);
    initTriggerEvent(this);
    if (oldHook) {
      for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {
        args[_key4] = arguments[_key4];
      }
      return oldHook.apply(this, args);
    }
  };
}
if (!MPPage.__$wrappered) {
  MPPage.__$wrappered = true;
  Page = function Page() {
    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    initHook('onLoad', options);
    return MPPage(options);
  };
  Page.after = MPPage.after;
  Component = function Component() {
    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    initHook('created', options);
    return MPComponent(options);
  };
}
var PAGE_EVENT_HOOKS = ['onPullDownRefresh', 'onReachBottom', 'onAddToFavorites', 'onShareTimeline', 'onShareAppMessage', 'onPageScroll', 'onResize', 'onTabItemTap'];
function initMocks(vm, mocks) {
  var mpInstance = vm.$mp[vm.mpType];
  mocks.forEach(function (mock) {
    if (hasOwn(mpInstance, mock)) {
      vm[mock] = mpInstance[mock];
    }
  });
}
function hasHook(hook, vueOptions) {
  if (!vueOptions) {
    return true;
  }
  if (_vue.default.options && Array.isArray(_vue.default.options[hook])) {
    return true;
  }
  vueOptions = vueOptions.default || vueOptions;
  if (isFn(vueOptions)) {
    if (isFn(vueOptions.extendOptions[hook])) {
      return true;
    }
    if (vueOptions.super && vueOptions.super.options && Array.isArray(vueOptions.super.options[hook])) {
      return true;
    }
    return false;
  }
  if (isFn(vueOptions[hook]) || Array.isArray(vueOptions[hook])) {
    return true;
  }
  var mixins = vueOptions.mixins;
  if (Array.isArray(mixins)) {
    return !!mixins.find(function (mixin) {
      return hasHook(hook, mixin);
    });
  }
}
function initHooks(mpOptions, hooks, vueOptions) {
  hooks.forEach(function (hook) {
    if (hasHook(hook, vueOptions)) {
      mpOptions[hook] = function (args) {
        return this.$vm && this.$vm.__call_hook(hook, args);
      };
    }
  });
}
function initUnknownHooks(mpOptions, vueOptions) {
  var excludes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];
  findHooks(vueOptions).forEach(function (hook) {
    return initHook$1(mpOptions, hook, excludes);
  });
}
function findHooks(vueOptions) {
  var hooks = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];
  if (vueOptions) {
    Object.keys(vueOptions).forEach(function (name) {
      if (name.indexOf('on') === 0 && isFn(vueOptions[name])) {
        hooks.push(name);
      }
    });
  }
  return hooks;
}
function initHook$1(mpOptions, hook, excludes) {
  if (excludes.indexOf(hook) === -1 && !hasOwn(mpOptions, hook)) {
    mpOptions[hook] = function (args) {
      return this.$vm && this.$vm.__call_hook(hook, args);
    };
  }
}
function initVueComponent(Vue, vueOptions) {
  vueOptions = vueOptions.default || vueOptions;
  var VueComponent;
  if (isFn(vueOptions)) {
    VueComponent = vueOptions;
  } else {
    VueComponent = Vue.extend(vueOptions);
  }
  vueOptions = VueComponent.options;
  return [VueComponent, vueOptions];
}
function initSlots(vm, vueSlots) {
  if (Array.isArray(vueSlots) && vueSlots.length) {
    var $slots = Object.create(null);
    vueSlots.forEach(function (slotName) {
      $slots[slotName] = true;
    });
    vm.$scopedSlots = vm.$slots = $slots;
  }
}
function initVueIds(vueIds, mpInstance) {
  vueIds = (vueIds || '').split(',');
  var len = vueIds.length;
  if (len === 1) {
    mpInstance._$vueId = vueIds[0];
  } else if (len === 2) {
    mpInstance._$vueId = vueIds[0];
    mpInstance._$vuePid = vueIds[1];
  }
}
function initData(vueOptions, context) {
  var data = vueOptions.data || {};
  var methods = vueOptions.methods || {};
  if (typeof data === 'function') {
    try {
      data = data.call(context); // 支持 Vue.prototype 上挂的数据
    } catch (e) {
      if (Object({"VUE_APP_DARK_MODE":"false","VUE_APP_NAME":"预报名","VUE_APP_PLATFORM":"mp-weixin","NODE_ENV":"development","BASE_URL":"/"}).VUE_APP_DEBUG) {
        console.warn('根据 Vue 的 data 函数初始化小程序 data 失败，请尽量确保 data 函数中不访问 vm 对象，否则可能影响首次数据渲染速度。', data);
      }
    }
  } else {
    try {
      // 对 data 格式化
      data = JSON.parse(JSON.stringify(data));
    } catch (e) {}
  }
  if (!isPlainObject(data)) {
    data = {};
  }
  Object.keys(methods).forEach(function (methodName) {
    if (context.__lifecycle_hooks__.indexOf(methodName) === -1 && !hasOwn(data, methodName)) {
      data[methodName] = methods[methodName];
    }
  });
  return data;
}
var PROP_TYPES = [String, Number, Boolean, Object, Array, null];
function createObserver(name) {
  return function observer(newVal, oldVal) {
    if (this.$vm) {
      this.$vm[name] = newVal; // 为了触发其他非 render watcher
    }
  };
}

function initBehaviors(vueOptions, initBehavior) {
  var vueBehaviors = vueOptions.behaviors;
  var vueExtends = vueOptions.extends;
  var vueMixins = vueOptions.mixins;
  var vueProps = vueOptions.props;
  if (!vueProps) {
    vueOptions.props = vueProps = [];
  }
  var behaviors = [];
  if (Array.isArray(vueBehaviors)) {
    vueBehaviors.forEach(function (behavior) {
      behaviors.push(behavior.replace('uni://', "wx".concat("://")));
      if (behavior === 'uni://form-field') {
        if (Array.isArray(vueProps)) {
          vueProps.push('name');
          vueProps.push('value');
        } else {
          vueProps.name = {
            type: String,
            default: ''
          };
          vueProps.value = {
            type: [String, Number, Boolean, Array, Object, Date],
            default: ''
          };
        }
      }
    });
  }
  if (isPlainObject(vueExtends) && vueExtends.props) {
    behaviors.push(initBehavior({
      properties: initProperties(vueExtends.props, true)
    }));
  }
  if (Array.isArray(vueMixins)) {
    vueMixins.forEach(function (vueMixin) {
      if (isPlainObject(vueMixin) && vueMixin.props) {
        behaviors.push(initBehavior({
          properties: initProperties(vueMixin.props, true)
        }));
      }
    });
  }
  return behaviors;
}
function parsePropType(key, type, defaultValue, file) {
  // [String]=>String
  if (Array.isArray(type) && type.length === 1) {
    return type[0];
  }
  return type;
}
function initProperties(props) {
  var isBehavior = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
  var file = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';
  var options = arguments.length > 3 ? arguments[3] : undefined;
  var properties = {};
  if (!isBehavior) {
    properties.vueId = {
      type: String,
      value: ''
    };
    {
      if (options.virtualHost) {
        properties.virtualHostStyle = {
          type: null,
          value: ''
        };
        properties.virtualHostClass = {
          type: null,
          value: ''
        };
      }
    }
    // scopedSlotsCompiler auto
    properties.scopedSlotsCompiler = {
      type: String,
      value: ''
    };
    properties.vueSlots = {
      // 小程序不能直接定义 $slots 的 props，所以通过 vueSlots 转换到 $slots
      type: null,
      value: [],
      observer: function observer(newVal, oldVal) {
        var $slots = Object.create(null);
        newVal.forEach(function (slotName) {
          $slots[slotName] = true;
        });
        this.setData({
          $slots: $slots
        });
      }
    };
  }
  if (Array.isArray(props)) {
    // ['title']
    props.forEach(function (key) {
      properties[key] = {
        type: null,
        observer: createObserver(key)
      };
    });
  } else if (isPlainObject(props)) {
    // {title:{type:String,default:''},content:String}
    Object.keys(props).forEach(function (key) {
      var opts = props[key];
      if (isPlainObject(opts)) {
        // title:{type:String,default:''}
        var value = opts.default;
        if (isFn(value)) {
          value = value();
        }
        opts.type = parsePropType(key, opts.type);
        properties[key] = {
          type: PROP_TYPES.indexOf(opts.type) !== -1 ? opts.type : null,
          value: value,
          observer: createObserver(key)
        };
      } else {
        // content:String
        var type = parsePropType(key, opts);
        properties[key] = {
          type: PROP_TYPES.indexOf(type) !== -1 ? type : null,
          observer: createObserver(key)
        };
      }
    });
  }
  return properties;
}
function wrapper$1(event) {
  // TODO 又得兼容 mpvue 的 mp 对象
  try {
    event.mp = JSON.parse(JSON.stringify(event));
  } catch (e) {}
  event.stopPropagation = noop;
  event.preventDefault = noop;
  event.target = event.target || {};
  if (!hasOwn(event, 'detail')) {
    event.detail = {};
  }
  if (hasOwn(event, 'markerId')) {
    event.detail = (0, _typeof2.default)(event.detail) === 'object' ? event.detail : {};
    event.detail.markerId = event.markerId;
  }
  if (isPlainObject(event.detail)) {
    event.target = Object.assign({}, event.target, event.detail);
  }
  return event;
}
function getExtraValue(vm, dataPathsArray) {
  var context = vm;
  dataPathsArray.forEach(function (dataPathArray) {
    var dataPath = dataPathArray[0];
    var value = dataPathArray[2];
    if (dataPath || typeof value !== 'undefined') {
      // ['','',index,'disable']
      var propPath = dataPathArray[1];
      var valuePath = dataPathArray[3];
      var vFor;
      if (Number.isInteger(dataPath)) {
        vFor = dataPath;
      } else if (!dataPath) {
        vFor = context;
      } else if (typeof dataPath === 'string' && dataPath) {
        if (dataPath.indexOf('#s#') === 0) {
          vFor = dataPath.substr(3);
        } else {
          vFor = vm.__get_value(dataPath, context);
        }
      }
      if (Number.isInteger(vFor)) {
        context = value;
      } else if (!propPath) {
        context = vFor[value];
      } else {
        if (Array.isArray(vFor)) {
          context = vFor.find(function (vForItem) {
            return vm.__get_value(propPath, vForItem) === value;
          });
        } else if (isPlainObject(vFor)) {
          context = Object.keys(vFor).find(function (vForKey) {
            return vm.__get_value(propPath, vFor[vForKey]) === value;
          });
        } else {
          console.error('v-for 暂不支持循环数据：', vFor);
        }
      }
      if (valuePath) {
        context = vm.__get_value(valuePath, context);
      }
    }
  });
  return context;
}
function processEventExtra(vm, extra, event, __args__) {
  var extraObj = {};
  if (Array.isArray(extra) && extra.length) {
    /**
     *[
     *    ['data.items', 'data.id', item.data.id],
     *    ['metas', 'id', meta.id]
     *],
     *[
     *    ['data.items', 'data.id', item.data.id],
     *    ['metas', 'id', meta.id]
     *],
     *'test'
     */
    extra.forEach(function (dataPath, index) {
      if (typeof dataPath === 'string') {
        if (!dataPath) {
          // model,prop.sync
          extraObj['$' + index] = vm;
        } else {
          if (dataPath === '$event') {
            // $event
            extraObj['$' + index] = event;
          } else if (dataPath === 'arguments') {
            extraObj['$' + index] = event.detail ? event.detail.__args__ || __args__ : __args__;
          } else if (dataPath.indexOf('$event.') === 0) {
            // $event.target.value
            extraObj['$' + index] = vm.__get_value(dataPath.replace('$event.', ''), event);
          } else {
            extraObj['$' + index] = vm.__get_value(dataPath);
          }
        }
      } else {
        extraObj['$' + index] = getExtraValue(vm, dataPath);
      }
    });
  }
  return extraObj;
}
function getObjByArray(arr) {
  var obj = {};
  for (var i = 1; i < arr.length; i++) {
    var element = arr[i];
    obj[element[0]] = element[1];
  }
  return obj;
}
function processEventArgs(vm, event) {
  var args = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];
  var extra = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];
  var isCustom = arguments.length > 4 ? arguments[4] : undefined;
  var methodName = arguments.length > 5 ? arguments[5] : undefined;
  var isCustomMPEvent = false; // wxcomponent 组件，传递原始 event 对象

  // fixed 用户直接触发 mpInstance.triggerEvent
  var __args__ = isPlainObject(event.detail) ? event.detail.__args__ || [event.detail] : [event.detail];
  if (isCustom) {
    // 自定义事件
    isCustomMPEvent = event.currentTarget && event.currentTarget.dataset && event.currentTarget.dataset.comType === 'wx';
    if (!args.length) {
      // 无参数，直接传入 event 或 detail 数组
      if (isCustomMPEvent) {
        return [event];
      }
      return __args__;
    }
  }
  var extraObj = processEventExtra(vm, extra, event, __args__);
  var ret = [];
  args.forEach(function (arg) {
    if (arg === '$event') {
      if (methodName === '__set_model' && !isCustom) {
        // input v-model value
        ret.push(event.target.value);
      } else {
        if (isCustom && !isCustomMPEvent) {
          ret.push(__args__[0]);
        } else {
          // wxcomponent 组件或内置组件
          ret.push(event);
        }
      }
    } else {
      if (Array.isArray(arg) && arg[0] === 'o') {
        ret.push(getObjByArray(arg));
      } else if (typeof arg === 'string' && hasOwn(extraObj, arg)) {
        ret.push(extraObj[arg]);
      } else {
        ret.push(arg);
      }
    }
  });
  return ret;
}
var ONCE = '~';
var CUSTOM = '^';
function isMatchEventType(eventType, optType) {
  return eventType === optType || optType === 'regionchange' && (eventType === 'begin' || eventType === 'end');
}
function getContextVm(vm) {
  var $parent = vm.$parent;
  // 父组件是 scoped slots 或者其他自定义组件时继续查找
  while ($parent && $parent.$parent && ($parent.$options.generic || $parent.$parent.$options.generic || $parent.$scope._$vuePid)) {
    $parent = $parent.$parent;
  }
  return $parent && $parent.$parent;
}
function handleEvent(event) {
  var _this2 = this;
  event = wrapper$1(event);

  // [['tap',[['handle',[1,2,a]],['handle1',[1,2,a]]]]]
  var dataset = (event.currentTarget || event.target).dataset;
  if (!dataset) {
    return console.warn('事件信息不存在');
  }
  var eventOpts = dataset.eventOpts || dataset['event-opts']; // 支付宝 web-view 组件 dataset 非驼峰
  if (!eventOpts) {
    return console.warn('事件信息不存在');
  }

  // [['handle',[1,2,a]],['handle1',[1,2,a]]]
  var eventType = event.type;
  var ret = [];
  eventOpts.forEach(function (eventOpt) {
    var type = eventOpt[0];
    var eventsArray = eventOpt[1];
    var isCustom = type.charAt(0) === CUSTOM;
    type = isCustom ? type.slice(1) : type;
    var isOnce = type.charAt(0) === ONCE;
    type = isOnce ? type.slice(1) : type;
    if (eventsArray && isMatchEventType(eventType, type)) {
      eventsArray.forEach(function (eventArray) {
        var methodName = eventArray[0];
        if (methodName) {
          var handlerCtx = _this2.$vm;
          if (handlerCtx.$options.generic) {
            // mp-weixin,mp-toutiao 抽象节点模拟 scoped slots
            handlerCtx = getContextVm(handlerCtx) || handlerCtx;
          }
          if (methodName === '$emit') {
            handlerCtx.$emit.apply(handlerCtx, processEventArgs(_this2.$vm, event, eventArray[1], eventArray[2], isCustom, methodName));
            return;
          }
          var handler = handlerCtx[methodName];
          if (!isFn(handler)) {
            var _type = _this2.$vm.mpType === 'page' ? 'Page' : 'Component';
            var path = _this2.route || _this2.is;
            throw new Error("".concat(_type, " \"").concat(path, "\" does not have a method \"").concat(methodName, "\""));
          }
          if (isOnce) {
            if (handler.once) {
              return;
            }
            handler.once = true;
          }
          var params = processEventArgs(_this2.$vm, event, eventArray[1], eventArray[2], isCustom, methodName);
          params = Array.isArray(params) ? params : [];
          // 参数尾部增加原始事件对象用于复杂表达式内获取额外数据
          if (/=\s*\S+\.eventParams\s*\|\|\s*\S+\[['"]event-params['"]\]/.test(handler.toString())) {
            // eslint-disable-next-line no-sparse-arrays
            params = params.concat([,,,,,,,,,, event]);
          }
          ret.push(handler.apply(handlerCtx, params));
        }
      });
    }
  });
  if (eventType === 'input' && ret.length === 1 && typeof ret[0] !== 'undefined') {
    return ret[0];
  }
}
var eventChannels = {};
function getEventChannel(id) {
  var eventChannel = eventChannels[id];
  delete eventChannels[id];
  return eventChannel;
}
var hooks = ['onShow', 'onHide', 'onError', 'onPageNotFound', 'onThemeChange', 'onUnhandledRejection'];
function initEventChannel() {
  _vue.default.prototype.getOpenerEventChannel = function () {
    // 微信小程序使用自身getOpenerEventChannel
    {
      return this.$scope.getOpenerEventChannel();
    }
  };
  var callHook = _vue.default.prototype.__call_hook;
  _vue.default.prototype.__call_hook = function (hook, args) {
    if (hook === 'onLoad' && args && args.__id__) {
      this.__eventChannel__ = getEventChannel(args.__id__);
      delete args.__id__;
    }
    return callHook.call(this, hook, args);
  };
}
function initScopedSlotsParams() {
  var center = {};
  var parents = {};
  function currentId(fn) {
    var vueIds = this.$options.propsData.vueId;
    if (vueIds) {
      var vueId = vueIds.split(',')[0];
      fn(vueId);
    }
  }
  _vue.default.prototype.$hasSSP = function (vueId) {
    var slot = center[vueId];
    if (!slot) {
      parents[vueId] = this;
      this.$on('hook:destroyed', function () {
        delete parents[vueId];
      });
    }
    return slot;
  };
  _vue.default.prototype.$getSSP = function (vueId, name, needAll) {
    var slot = center[vueId];
    if (slot) {
      var params = slot[name] || [];
      if (needAll) {
        return params;
      }
      return params[0];
    }
  };
  _vue.default.prototype.$setSSP = function (name, value) {
    var index = 0;
    currentId.call(this, function (vueId) {
      var slot = center[vueId];
      var params = slot[name] = slot[name] || [];
      params.push(value);
      index = params.length - 1;
    });
    return index;
  };
  _vue.default.prototype.$initSSP = function () {
    currentId.call(this, function (vueId) {
      center[vueId] = {};
    });
  };
  _vue.default.prototype.$callSSP = function () {
    currentId.call(this, function (vueId) {
      if (parents[vueId]) {
        parents[vueId].$forceUpdate();
      }
    });
  };
  _vue.default.mixin({
    destroyed: function destroyed() {
      var propsData = this.$options.propsData;
      var vueId = propsData && propsData.vueId;
      if (vueId) {
        delete center[vueId];
        delete parents[vueId];
      }
    }
  });
}
function parseBaseApp(vm, _ref4) {
  var mocks = _ref4.mocks,
    initRefs = _ref4.initRefs;
  initEventChannel();
  {
    initScopedSlotsParams();
  }
  if (vm.$options.store) {
    _vue.default.prototype.$store = vm.$options.store;
  }
  uniIdMixin(_vue.default);
  _vue.default.prototype.mpHost = "mp-weixin";
  _vue.default.mixin({
    beforeCreate: function beforeCreate() {
      if (!this.$options.mpType) {
        return;
      }
      this.mpType = this.$options.mpType;
      this.$mp = (0, _defineProperty2.default)({
        data: {}
      }, this.mpType, this.$options.mpInstance);
      this.$scope = this.$options.mpInstance;
      delete this.$options.mpType;
      delete this.$options.mpInstance;
      if (this.mpType === 'page' && typeof getApp === 'function') {
        // hack vue-i18n
        var app = getApp();
        if (app.$vm && app.$vm.$i18n) {
          this._i18n = app.$vm.$i18n;
        }
      }
      if (this.mpType !== 'app') {
        initRefs(this);
        initMocks(this, mocks);
      }
    }
  });
  var appOptions = {
    onLaunch: function onLaunch(args) {
      if (this.$vm) {
        // 已经初始化过了，主要是为了百度，百度 onShow 在 onLaunch 之前
        return;
      }
      {
        if (wx.canIUse && !wx.canIUse('nextTick')) {
          // 事实 上2.2.3 即可，简单使用 2.3.0 的 nextTick 判断
          console.error('当前微信基础库版本过低，请将 微信开发者工具-详情-项目设置-调试基础库版本 更换为`2.3.0`以上');
        }
      }
      this.$vm = vm;
      this.$vm.$mp = {
        app: this
      };
      this.$vm.$scope = this;
      // vm 上也挂载 globalData
      this.$vm.globalData = this.globalData;
      this.$vm._isMounted = true;
      this.$vm.__call_hook('mounted', args);
      this.$vm.__call_hook('onLaunch', args);
    }
  };

  // 兼容旧版本 globalData
  appOptions.globalData = vm.$options.globalData || {};
  // 将 methods 中的方法挂在 getApp() 中
  var methods = vm.$options.methods;
  if (methods) {
    Object.keys(methods).forEach(function (name) {
      appOptions[name] = methods[name];
    });
  }
  initAppLocale(_vue.default, vm, normalizeLocale(wx.getSystemInfoSync().language) || LOCALE_EN);
  initHooks(appOptions, hooks);
  initUnknownHooks(appOptions, vm.$options);
  return appOptions;
}
function parseApp(vm) {
  return parseBaseApp(vm, {
    mocks: mocks,
    initRefs: initRefs
  });
}
function createApp(vm) {
  App(parseApp(vm));
  return vm;
}
var encodeReserveRE = /[!'()*]/g;
var encodeReserveReplacer = function encodeReserveReplacer(c) {
  return '%' + c.charCodeAt(0).toString(16);
};
var commaRE = /%2C/g;

// fixed encodeURIComponent which is more conformant to RFC3986:
// - escapes [!'()*]
// - preserve commas
var encode = function encode(str) {
  return encodeURIComponent(str).replace(encodeReserveRE, encodeReserveReplacer).replace(commaRE, ',');
};
function stringifyQuery(obj) {
  var encodeStr = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : encode;
  var res = obj ? Object.keys(obj).map(function (key) {
    var val = obj[key];
    if (val === undefined) {
      return '';
    }
    if (val === null) {
      return encodeStr(key);
    }
    if (Array.isArray(val)) {
      var result = [];
      val.forEach(function (val2) {
        if (val2 === undefined) {
          return;
        }
        if (val2 === null) {
          result.push(encodeStr(key));
        } else {
          result.push(encodeStr(key) + '=' + encodeStr(val2));
        }
      });
      return result.join('&');
    }
    return encodeStr(key) + '=' + encodeStr(val);
  }).filter(function (x) {
    return x.length > 0;
  }).join('&') : null;
  return res ? "?".concat(res) : '';
}
function parseBaseComponent(vueComponentOptions) {
  var _ref5 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
    isPage = _ref5.isPage,
    initRelation = _ref5.initRelation;
  var needVueOptions = arguments.length > 2 ? arguments[2] : undefined;
  var _initVueComponent = initVueComponent(_vue.default, vueComponentOptions),
    _initVueComponent2 = (0, _slicedToArray2.default)(_initVueComponent, 2),
    VueComponent = _initVueComponent2[0],
    vueOptions = _initVueComponent2[1];
  var options = _objectSpread({
    multipleSlots: true,
    // styleIsolation: 'apply-shared',
    addGlobalClass: true
  }, vueOptions.options || {});
  {
    // 微信 multipleSlots 部分情况有 bug，导致内容顺序错乱 如 u-list，提供覆盖选项
    if (vueOptions['mp-weixin'] && vueOptions['mp-weixin'].options) {
      Object.assign(options, vueOptions['mp-weixin'].options);
    }
  }
  var componentOptions = {
    options: options,
    data: initData(vueOptions, _vue.default.prototype),
    behaviors: initBehaviors(vueOptions, initBehavior),
    properties: initProperties(vueOptions.props, false, vueOptions.__file, options),
    lifetimes: {
      attached: function attached() {
        var properties = this.properties;
        var options = {
          mpType: isPage.call(this) ? 'page' : 'component',
          mpInstance: this,
          propsData: properties
        };
        initVueIds(properties.vueId, this);

        // 处理父子关系
        initRelation.call(this, {
          vuePid: this._$vuePid,
          vueOptions: options
        });

        // 初始化 vue 实例
        this.$vm = new VueComponent(options);

        // 处理$slots,$scopedSlots（暂不支持动态变化$slots）
        initSlots(this.$vm, properties.vueSlots);

        // 触发首次 setData
        this.$vm.$mount();
      },
      ready: function ready() {
        // 当组件 props 默认值为 true，初始化时传入 false 会导致 created,ready 触发, 但 attached 不触发
        // https://developers.weixin.qq.com/community/develop/doc/00066ae2844cc0f8eb883e2a557800
        if (this.$vm) {
          this.$vm._isMounted = true;
          this.$vm.__call_hook('mounted');
          this.$vm.__call_hook('onReady');
        }
      },
      detached: function detached() {
        this.$vm && this.$vm.$destroy();
      }
    },
    pageLifetimes: {
      show: function show(args) {
        this.$vm && this.$vm.__call_hook('onPageShow', args);
      },
      hide: function hide() {
        this.$vm && this.$vm.__call_hook('onPageHide');
      },
      resize: function resize(size) {
        this.$vm && this.$vm.__call_hook('onPageResize', size);
      }
    },
    methods: {
      __l: handleLink,
      __e: handleEvent
    }
  };
  // externalClasses
  if (vueOptions.externalClasses) {
    componentOptions.externalClasses = vueOptions.externalClasses;
  }
  if (Array.isArray(vueOptions.wxsCallMethods)) {
    vueOptions.wxsCallMethods.forEach(function (callMethod) {
      componentOptions.methods[callMethod] = function (args) {
        return this.$vm[callMethod](args);
      };
    });
  }
  if (needVueOptions) {
    return [componentOptions, vueOptions, VueComponent];
  }
  if (isPage) {
    return componentOptions;
  }
  return [componentOptions, VueComponent];
}
function parseComponent(vueComponentOptions, needVueOptions) {
  return parseBaseComponent(vueComponentOptions, {
    isPage: isPage,
    initRelation: initRelation
  }, needVueOptions);
}
var hooks$1 = ['onShow', 'onHide', 'onUnload'];
hooks$1.push.apply(hooks$1, PAGE_EVENT_HOOKS);
function parseBasePage(vuePageOptions) {
  var _parseComponent = parseComponent(vuePageOptions, true),
    _parseComponent2 = (0, _slicedToArray2.default)(_parseComponent, 2),
    pageOptions = _parseComponent2[0],
    vueOptions = _parseComponent2[1];
  initHooks(pageOptions.methods, hooks$1, vueOptions);
  pageOptions.methods.onLoad = function (query) {
    this.options = query;
    var copyQuery = Object.assign({}, query);
    delete copyQuery.__id__;
    this.$page = {
      fullPath: '/' + (this.route || this.is) + stringifyQuery(copyQuery)
    };
    this.$vm.$mp.query = query; // 兼容 mpvue
    this.$vm.__call_hook('onLoad', query);
  };
  {
    initUnknownHooks(pageOptions.methods, vuePageOptions, ['onReady']);
  }
  {
    initWorkletMethods(pageOptions.methods, vueOptions.methods);
  }
  return pageOptions;
}
function parsePage(vuePageOptions) {
  return parseBasePage(vuePageOptions);
}
function createPage(vuePageOptions) {
  {
    return Component(parsePage(vuePageOptions));
  }
}
function createComponent(vueOptions) {
  {
    return Component(parseComponent(vueOptions));
  }
}
function createSubpackageApp(vm) {
  var appOptions = parseApp(vm);
  var app = getApp({
    allowDefault: true
  });
  vm.$scope = app;
  var globalData = app.globalData;
  if (globalData) {
    Object.keys(appOptions.globalData).forEach(function (name) {
      if (!hasOwn(globalData, name)) {
        globalData[name] = appOptions.globalData[name];
      }
    });
  }
  Object.keys(appOptions).forEach(function (name) {
    if (!hasOwn(app, name)) {
      app[name] = appOptions[name];
    }
  });
  if (isFn(appOptions.onShow) && wx.onAppShow) {
    wx.onAppShow(function () {
      for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {
        args[_key5] = arguments[_key5];
      }
      vm.__call_hook('onShow', args);
    });
  }
  if (isFn(appOptions.onHide) && wx.onAppHide) {
    wx.onAppHide(function () {
      for (var _len6 = arguments.length, args = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {
        args[_key6] = arguments[_key6];
      }
      vm.__call_hook('onHide', args);
    });
  }
  if (isFn(appOptions.onLaunch)) {
    var args = wx.getLaunchOptionsSync && wx.getLaunchOptionsSync();
    vm.__call_hook('onLaunch', args);
  }
  return vm;
}
function createPlugin(vm) {
  var appOptions = parseApp(vm);
  if (isFn(appOptions.onShow) && wx.onAppShow) {
    wx.onAppShow(function () {
      for (var _len7 = arguments.length, args = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {
        args[_key7] = arguments[_key7];
      }
      vm.__call_hook('onShow', args);
    });
  }
  if (isFn(appOptions.onHide) && wx.onAppHide) {
    wx.onAppHide(function () {
      for (var _len8 = arguments.length, args = new Array(_len8), _key8 = 0; _key8 < _len8; _key8++) {
        args[_key8] = arguments[_key8];
      }
      vm.__call_hook('onHide', args);
    });
  }
  if (isFn(appOptions.onLaunch)) {
    var args = wx.getLaunchOptionsSync && wx.getLaunchOptionsSync();
    vm.__call_hook('onLaunch', args);
  }
  return vm;
}
todos.forEach(function (todoApi) {
  protocols[todoApi] = false;
});
canIUses.forEach(function (canIUseApi) {
  var apiName = protocols[canIUseApi] && protocols[canIUseApi].name ? protocols[canIUseApi].name : canIUseApi;
  if (!wx.canIUse(apiName)) {
    protocols[canIUseApi] = false;
  }
});
var uni = {};
if (typeof Proxy !== 'undefined' && "mp-weixin" !== 'app-plus') {
  uni = new Proxy({}, {
    get: function get(target, name) {
      if (hasOwn(target, name)) {
        return target[name];
      }
      if (baseApi[name]) {
        return baseApi[name];
      }
      if (api[name]) {
        return promisify(name, api[name]);
      }
      {
        if (extraApi[name]) {
          return promisify(name, extraApi[name]);
        }
        if (todoApis[name]) {
          return promisify(name, todoApis[name]);
        }
      }
      if (eventApi[name]) {
        return eventApi[name];
      }
      return promisify(name, wrapper(name, wx[name]));
    },
    set: function set(target, name, value) {
      target[name] = value;
      return true;
    }
  });
} else {
  Object.keys(baseApi).forEach(function (name) {
    uni[name] = baseApi[name];
  });
  {
    Object.keys(todoApis).forEach(function (name) {
      uni[name] = promisify(name, todoApis[name]);
    });
    Object.keys(extraApi).forEach(function (name) {
      uni[name] = promisify(name, extraApi[name]);
    });
  }
  Object.keys(eventApi).forEach(function (name) {
    uni[name] = eventApi[name];
  });
  Object.keys(api).forEach(function (name) {
    uni[name] = promisify(name, api[name]);
  });
  Object.keys(wx).forEach(function (name) {
    if (hasOwn(wx, name) || hasOwn(protocols, name)) {
      uni[name] = promisify(name, wrapper(name, wx[name]));
    }
  });
}
wx.createApp = createApp;
wx.createPage = createPage;
wx.createComponent = createComponent;
wx.createSubpackageApp = createSubpackageApp;
wx.createPlugin = createPlugin;
var uni$1 = uni;
var _default = uni$1;
exports.default = _default;
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/uni-mp-weixin/dist/wx.js */ 1)["default"], __webpack_require__(/*! ./../../../webpack/buildin/global.js */ 3)))

/***/ }),
/* 3 */
/*!***********************************!*\
  !*** (webpack)/buildin/global.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

var g;

// This works in non-strict mode
g = (function() {
	return this;
})();

try {
	// This works if eval is allowed (see CSP)
	g = g || new Function("return this")();
} catch (e) {
	// This works if the window reference is available
	if (typeof window === "object") g = window;
}

// g can still be undefined, but nothing to do about it...
// We return undefined, instead of nothing here, so it's
// easier to handle this case. if(!global) { ...}

module.exports = g;


/***/ }),
/* 4 */
/*!**********************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/interopRequireDefault.js ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    "default": obj
  };
}
module.exports = _interopRequireDefault, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),
/* 5 */
/*!**************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/slicedToArray.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var arrayWithHoles = __webpack_require__(/*! ./arrayWithHoles.js */ 6);
var iterableToArrayLimit = __webpack_require__(/*! ./iterableToArrayLimit.js */ 7);
var unsupportedIterableToArray = __webpack_require__(/*! ./unsupportedIterableToArray.js */ 8);
var nonIterableRest = __webpack_require__(/*! ./nonIterableRest.js */ 10);
function _slicedToArray(arr, i) {
  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();
}
module.exports = _slicedToArray, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),
/* 6 */
/*!***************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/arrayWithHoles.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _arrayWithHoles(arr) {
  if (Array.isArray(arr)) return arr;
}
module.exports = _arrayWithHoles, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),
/* 7 */
/*!*********************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/iterableToArrayLimit.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _iterableToArrayLimit(r, l) {
  var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (null != t) {
    var e,
      n,
      i,
      u,
      a = [],
      f = !0,
      o = !1;
    try {
      if (i = (t = t.call(r)).next, 0 === l) {
        if (Object(t) !== t) return;
        f = !1;
      } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0) {
        ;
      }
    } catch (r) {
      o = !0, n = r;
    } finally {
      try {
        if (!f && null != t["return"] && (u = t["return"](), Object(u) !== u)) return;
      } finally {
        if (o) throw n;
      }
    }
    return a;
  }
}
module.exports = _iterableToArrayLimit, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),
/* 8 */
/*!***************************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js ***!
  \***************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var arrayLikeToArray = __webpack_require__(/*! ./arrayLikeToArray.js */ 9);
function _unsupportedIterableToArray(o, minLen) {
  if (!o) return;
  if (typeof o === "string") return arrayLikeToArray(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor) n = o.constructor.name;
  if (n === "Map" || n === "Set") return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);
}
module.exports = _unsupportedIterableToArray, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),
/* 9 */
/*!*****************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/arrayLikeToArray.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _arrayLikeToArray(arr, len) {
  if (len == null || len > arr.length) len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) {
    arr2[i] = arr[i];
  }
  return arr2;
}
module.exports = _arrayLikeToArray, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),
/* 10 */
/*!****************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/nonIterableRest.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _nonIterableRest() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
module.exports = _nonIterableRest, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),
/* 11 */
/*!***************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/defineProperty.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var toPropertyKey = __webpack_require__(/*! ./toPropertyKey.js */ 12);
function _defineProperty(obj, key, value) {
  key = toPropertyKey(key);
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }
  return obj;
}
module.exports = _defineProperty, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),
/* 12 */
/*!**************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/toPropertyKey.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _typeof = __webpack_require__(/*! ./typeof.js */ 13)["default"];
var toPrimitive = __webpack_require__(/*! ./toPrimitive.js */ 14);
function toPropertyKey(t) {
  var i = toPrimitive(t, "string");
  return "symbol" == _typeof(i) ? i : String(i);
}
module.exports = toPropertyKey, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),
/* 13 */
/*!*******************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/typeof.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _typeof(o) {
  "@babel/helpers - typeof";

  return (module.exports = _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) {
    return typeof o;
  } : function (o) {
    return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o;
  }, module.exports.__esModule = true, module.exports["default"] = module.exports), _typeof(o);
}
module.exports = _typeof, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),
/* 14 */
/*!************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/toPrimitive.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _typeof = __webpack_require__(/*! ./typeof.js */ 13)["default"];
function toPrimitive(t, r) {
  if ("object" != _typeof(t) || !t) return t;
  var e = t[Symbol.toPrimitive];
  if (void 0 !== e) {
    var i = e.call(t, r || "default");
    if ("object" != _typeof(i)) return i;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return ("string" === r ? String : Number)(t);
}
module.exports = toPrimitive, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),
/* 15 */
/*!**********************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/construct.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var setPrototypeOf = __webpack_require__(/*! ./setPrototypeOf.js */ 16);
var isNativeReflectConstruct = __webpack_require__(/*! ./isNativeReflectConstruct.js */ 17);
function _construct(t, e, r) {
  if (isNativeReflectConstruct()) return Reflect.construct.apply(null, arguments);
  var o = [null];
  o.push.apply(o, e);
  var p = new (t.bind.apply(t, o))();
  return r && setPrototypeOf(p, r.prototype), p;
}
module.exports = _construct, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),
/* 16 */
/*!***************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/setPrototypeOf.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _setPrototypeOf(o, p) {
  module.exports = _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  }, module.exports.__esModule = true, module.exports["default"] = module.exports;
  return _setPrototypeOf(o, p);
}
module.exports = _setPrototypeOf, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),
/* 17 */
/*!*************************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/isNativeReflectConstruct.js ***!
  \*************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _isNativeReflectConstruct() {
  try {
    var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));
  } catch (t) {}
  return (module.exports = _isNativeReflectConstruct = function _isNativeReflectConstruct() {
    return !!t;
  }, module.exports.__esModule = true, module.exports["default"] = module.exports)();
}
module.exports = _isNativeReflectConstruct, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),
/* 18 */
/*!******************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/toConsumableArray.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var arrayWithoutHoles = __webpack_require__(/*! ./arrayWithoutHoles.js */ 19);
var iterableToArray = __webpack_require__(/*! ./iterableToArray.js */ 20);
var unsupportedIterableToArray = __webpack_require__(/*! ./unsupportedIterableToArray.js */ 8);
var nonIterableSpread = __webpack_require__(/*! ./nonIterableSpread.js */ 21);
function _toConsumableArray(arr) {
  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();
}
module.exports = _toConsumableArray, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),
/* 19 */
/*!******************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/arrayWithoutHoles.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var arrayLikeToArray = __webpack_require__(/*! ./arrayLikeToArray.js */ 9);
function _arrayWithoutHoles(arr) {
  if (Array.isArray(arr)) return arrayLikeToArray(arr);
}
module.exports = _arrayWithoutHoles, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),
/* 20 */
/*!****************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/iterableToArray.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _iterableToArray(iter) {
  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter);
}
module.exports = _iterableToArray, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),
/* 21 */
/*!******************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/nonIterableSpread.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _nonIterableSpread() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
module.exports = _nonIterableSpread, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),
/* 22 */
/*!*************************************************************!*\
  !*** ./node_modules/@dcloudio/uni-i18n/dist/uni-i18n.es.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(uni, global) {

var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ 4);
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.LOCALE_ZH_HANT = exports.LOCALE_ZH_HANS = exports.LOCALE_FR = exports.LOCALE_ES = exports.LOCALE_EN = exports.I18n = exports.Formatter = void 0;
exports.compileI18nJsonStr = compileI18nJsonStr;
exports.hasI18nJson = hasI18nJson;
exports.initVueI18n = initVueI18n;
exports.isI18nStr = isI18nStr;
exports.isString = void 0;
exports.normalizeLocale = normalizeLocale;
exports.parseI18nJson = parseI18nJson;
exports.resolveLocale = resolveLocale;
var _slicedToArray2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/slicedToArray */ 5));
var _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ 23));
var _createClass2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/createClass */ 24));
var _typeof2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/typeof */ 13));
var isObject = function isObject(val) {
  return val !== null && (0, _typeof2.default)(val) === 'object';
};
var defaultDelimiters = ['{', '}'];
var BaseFormatter = /*#__PURE__*/function () {
  function BaseFormatter() {
    (0, _classCallCheck2.default)(this, BaseFormatter);
    this._caches = Object.create(null);
  }
  (0, _createClass2.default)(BaseFormatter, [{
    key: "interpolate",
    value: function interpolate(message, values) {
      var delimiters = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : defaultDelimiters;
      if (!values) {
        return [message];
      }
      var tokens = this._caches[message];
      if (!tokens) {
        tokens = parse(message, delimiters);
        this._caches[message] = tokens;
      }
      return compile(tokens, values);
    }
  }]);
  return BaseFormatter;
}();
exports.Formatter = BaseFormatter;
var RE_TOKEN_LIST_VALUE = /^(?:\d)+/;
var RE_TOKEN_NAMED_VALUE = /^(?:\w)+/;
function parse(format, _ref) {
  var _ref2 = (0, _slicedToArray2.default)(_ref, 2),
    startDelimiter = _ref2[0],
    endDelimiter = _ref2[1];
  var tokens = [];
  var position = 0;
  var text = '';
  while (position < format.length) {
    var char = format[position++];
    if (char === startDelimiter) {
      if (text) {
        tokens.push({
          type: 'text',
          value: text
        });
      }
      text = '';
      var sub = '';
      char = format[position++];
      while (char !== undefined && char !== endDelimiter) {
        sub += char;
        char = format[position++];
      }
      var isClosed = char === endDelimiter;
      var type = RE_TOKEN_LIST_VALUE.test(sub) ? 'list' : isClosed && RE_TOKEN_NAMED_VALUE.test(sub) ? 'named' : 'unknown';
      tokens.push({
        value: sub,
        type: type
      });
    }
    //  else if (char === '%') {
    //   // when found rails i18n syntax, skip text capture
    //   if (format[position] !== '{') {
    //     text += char
    //   }
    // }
    else {
      text += char;
    }
  }
  text && tokens.push({
    type: 'text',
    value: text
  });
  return tokens;
}
function compile(tokens, values) {
  var compiled = [];
  var index = 0;
  var mode = Array.isArray(values) ? 'list' : isObject(values) ? 'named' : 'unknown';
  if (mode === 'unknown') {
    return compiled;
  }
  while (index < tokens.length) {
    var token = tokens[index];
    switch (token.type) {
      case 'text':
        compiled.push(token.value);
        break;
      case 'list':
        compiled.push(values[parseInt(token.value, 10)]);
        break;
      case 'named':
        if (mode === 'named') {
          compiled.push(values[token.value]);
        } else {
          if (true) {
            console.warn("Type of token '".concat(token.type, "' and format of value '").concat(mode, "' don't match!"));
          }
        }
        break;
      case 'unknown':
        if (true) {
          console.warn("Detect 'unknown' type of token!");
        }
        break;
    }
    index++;
  }
  return compiled;
}
var LOCALE_ZH_HANS = 'zh-Hans';
exports.LOCALE_ZH_HANS = LOCALE_ZH_HANS;
var LOCALE_ZH_HANT = 'zh-Hant';
exports.LOCALE_ZH_HANT = LOCALE_ZH_HANT;
var LOCALE_EN = 'en';
exports.LOCALE_EN = LOCALE_EN;
var LOCALE_FR = 'fr';
exports.LOCALE_FR = LOCALE_FR;
var LOCALE_ES = 'es';
exports.LOCALE_ES = LOCALE_ES;
var hasOwnProperty = Object.prototype.hasOwnProperty;
var hasOwn = function hasOwn(val, key) {
  return hasOwnProperty.call(val, key);
};
var defaultFormatter = new BaseFormatter();
function include(str, parts) {
  return !!parts.find(function (part) {
    return str.indexOf(part) !== -1;
  });
}
function startsWith(str, parts) {
  return parts.find(function (part) {
    return str.indexOf(part) === 0;
  });
}
function normalizeLocale(locale, messages) {
  if (!locale) {
    return;
  }
  locale = locale.trim().replace(/_/g, '-');
  if (messages && messages[locale]) {
    return locale;
  }
  locale = locale.toLowerCase();
  if (locale === 'chinese') {
    // 支付宝
    return LOCALE_ZH_HANS;
  }
  if (locale.indexOf('zh') === 0) {
    if (locale.indexOf('-hans') > -1) {
      return LOCALE_ZH_HANS;
    }
    if (locale.indexOf('-hant') > -1) {
      return LOCALE_ZH_HANT;
    }
    if (include(locale, ['-tw', '-hk', '-mo', '-cht'])) {
      return LOCALE_ZH_HANT;
    }
    return LOCALE_ZH_HANS;
  }
  var locales = [LOCALE_EN, LOCALE_FR, LOCALE_ES];
  if (messages && Object.keys(messages).length > 0) {
    locales = Object.keys(messages);
  }
  var lang = startsWith(locale, locales);
  if (lang) {
    return lang;
  }
}
var I18n = /*#__PURE__*/function () {
  function I18n(_ref3) {
    var locale = _ref3.locale,
      fallbackLocale = _ref3.fallbackLocale,
      messages = _ref3.messages,
      watcher = _ref3.watcher,
      formater = _ref3.formater;
    (0, _classCallCheck2.default)(this, I18n);
    this.locale = LOCALE_EN;
    this.fallbackLocale = LOCALE_EN;
    this.message = {};
    this.messages = {};
    this.watchers = [];
    if (fallbackLocale) {
      this.fallbackLocale = fallbackLocale;
    }
    this.formater = formater || defaultFormatter;
    this.messages = messages || {};
    this.setLocale(locale || LOCALE_EN);
    if (watcher) {
      this.watchLocale(watcher);
    }
  }
  (0, _createClass2.default)(I18n, [{
    key: "setLocale",
    value: function setLocale(locale) {
      var _this = this;
      var oldLocale = this.locale;
      this.locale = normalizeLocale(locale, this.messages) || this.fallbackLocale;
      if (!this.messages[this.locale]) {
        // 可能初始化时不存在
        this.messages[this.locale] = {};
      }
      this.message = this.messages[this.locale];
      // 仅发生变化时，通知
      if (oldLocale !== this.locale) {
        this.watchers.forEach(function (watcher) {
          watcher(_this.locale, oldLocale);
        });
      }
    }
  }, {
    key: "getLocale",
    value: function getLocale() {
      return this.locale;
    }
  }, {
    key: "watchLocale",
    value: function watchLocale(fn) {
      var _this2 = this;
      var index = this.watchers.push(fn) - 1;
      return function () {
        _this2.watchers.splice(index, 1);
      };
    }
  }, {
    key: "add",
    value: function add(locale, message) {
      var override = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;
      var curMessages = this.messages[locale];
      if (curMessages) {
        if (override) {
          Object.assign(curMessages, message);
        } else {
          Object.keys(message).forEach(function (key) {
            if (!hasOwn(curMessages, key)) {
              curMessages[key] = message[key];
            }
          });
        }
      } else {
        this.messages[locale] = message;
      }
    }
  }, {
    key: "f",
    value: function f(message, values, delimiters) {
      return this.formater.interpolate(message, values, delimiters).join('');
    }
  }, {
    key: "t",
    value: function t(key, locale, values) {
      var message = this.message;
      if (typeof locale === 'string') {
        locale = normalizeLocale(locale, this.messages);
        locale && (message = this.messages[locale]);
      } else {
        values = locale;
      }
      if (!hasOwn(message, key)) {
        console.warn("Cannot translate the value of keypath ".concat(key, ". Use the value of keypath as default."));
        return key;
      }
      return this.formater.interpolate(message[key], values).join('');
    }
  }]);
  return I18n;
}();
exports.I18n = I18n;
function watchAppLocale(appVm, i18n) {
  // 需要保证 watch 的触发在组件渲染之前
  if (appVm.$watchLocale) {
    // vue2
    appVm.$watchLocale(function (newLocale) {
      i18n.setLocale(newLocale);
    });
  } else {
    appVm.$watch(function () {
      return appVm.$locale;
    }, function (newLocale) {
      i18n.setLocale(newLocale);
    });
  }
}
function getDefaultLocale() {
  if (typeof uni !== 'undefined' && uni.getLocale) {
    return uni.getLocale();
  }
  // 小程序平台，uni 和 uni-i18n 互相引用，导致访问不到 uni，故在 global 上挂了 getLocale
  if (typeof global !== 'undefined' && global.getLocale) {
    return global.getLocale();
  }
  return LOCALE_EN;
}
function initVueI18n(locale) {
  var messages = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  var fallbackLocale = arguments.length > 2 ? arguments[2] : undefined;
  var watcher = arguments.length > 3 ? arguments[3] : undefined;
  // 兼容旧版本入参
  if (typeof locale !== 'string') {
    var _ref4 = [messages, locale];
    locale = _ref4[0];
    messages = _ref4[1];
  }
  if (typeof locale !== 'string') {
    // 因为小程序平台，uni-i18n 和 uni 互相引用，导致此时访问 uni 时，为 undefined
    locale = getDefaultLocale();
  }
  if (typeof fallbackLocale !== 'string') {
    fallbackLocale = typeof __uniConfig !== 'undefined' && __uniConfig.fallbackLocale || LOCALE_EN;
  }
  var i18n = new I18n({
    locale: locale,
    fallbackLocale: fallbackLocale,
    messages: messages,
    watcher: watcher
  });
  var _t = function t(key, values) {
    if (typeof getApp !== 'function') {
      // app view
      /* eslint-disable no-func-assign */
      _t = function t(key, values) {
        return i18n.t(key, values);
      };
    } else {
      var isWatchedAppLocale = false;
      _t = function t(key, values) {
        var appVm = getApp().$vm;
        // 可能$vm还不存在，比如在支付宝小程序中，组件定义较早，在props的default里使用了t()函数（如uni-goods-nav），此时app还未初始化
        // options: {
        // 	type: Array,
        // 	default () {
        // 		return [{
        // 			icon: 'shop',
        // 			text: t("uni-goods-nav.options.shop"),
        // 		}, {
        // 			icon: 'cart',
        // 			text: t("uni-goods-nav.options.cart")
        // 		}]
        // 	}
        // },
        if (appVm) {
          // 触发响应式
          appVm.$locale;
          if (!isWatchedAppLocale) {
            isWatchedAppLocale = true;
            watchAppLocale(appVm, i18n);
          }
        }
        return i18n.t(key, values);
      };
    }
    return _t(key, values);
  };
  return {
    i18n: i18n,
    f: function f(message, values, delimiters) {
      return i18n.f(message, values, delimiters);
    },
    t: function t(key, values) {
      return _t(key, values);
    },
    add: function add(locale, message) {
      var override = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;
      return i18n.add(locale, message, override);
    },
    watch: function watch(fn) {
      return i18n.watchLocale(fn);
    },
    getLocale: function getLocale() {
      return i18n.getLocale();
    },
    setLocale: function setLocale(newLocale) {
      return i18n.setLocale(newLocale);
    }
  };
}
var isString = function isString(val) {
  return typeof val === 'string';
};
exports.isString = isString;
var formater;
function hasI18nJson(jsonObj, delimiters) {
  if (!formater) {
    formater = new BaseFormatter();
  }
  return walkJsonObj(jsonObj, function (jsonObj, key) {
    var value = jsonObj[key];
    if (isString(value)) {
      if (isI18nStr(value, delimiters)) {
        return true;
      }
    } else {
      return hasI18nJson(value, delimiters);
    }
  });
}
function parseI18nJson(jsonObj, values, delimiters) {
  if (!formater) {
    formater = new BaseFormatter();
  }
  walkJsonObj(jsonObj, function (jsonObj, key) {
    var value = jsonObj[key];
    if (isString(value)) {
      if (isI18nStr(value, delimiters)) {
        jsonObj[key] = compileStr(value, values, delimiters);
      }
    } else {
      parseI18nJson(value, values, delimiters);
    }
  });
  return jsonObj;
}
function compileI18nJsonStr(jsonStr, _ref5) {
  var locale = _ref5.locale,
    locales = _ref5.locales,
    delimiters = _ref5.delimiters;
  if (!isI18nStr(jsonStr, delimiters)) {
    return jsonStr;
  }
  if (!formater) {
    formater = new BaseFormatter();
  }
  var localeValues = [];
  Object.keys(locales).forEach(function (name) {
    if (name !== locale) {
      localeValues.push({
        locale: name,
        values: locales[name]
      });
    }
  });
  localeValues.unshift({
    locale: locale,
    values: locales[locale]
  });
  try {
    return JSON.stringify(compileJsonObj(JSON.parse(jsonStr), localeValues, delimiters), null, 2);
  } catch (e) {}
  return jsonStr;
}
function isI18nStr(value, delimiters) {
  return value.indexOf(delimiters[0]) > -1;
}
function compileStr(value, values, delimiters) {
  return formater.interpolate(value, values, delimiters).join('');
}
function compileValue(jsonObj, key, localeValues, delimiters) {
  var value = jsonObj[key];
  if (isString(value)) {
    // 存在国际化
    if (isI18nStr(value, delimiters)) {
      jsonObj[key] = compileStr(value, localeValues[0].values, delimiters);
      if (localeValues.length > 1) {
        // 格式化国际化语言
        var valueLocales = jsonObj[key + 'Locales'] = {};
        localeValues.forEach(function (localValue) {
          valueLocales[localValue.locale] = compileStr(value, localValue.values, delimiters);
        });
      }
    }
  } else {
    compileJsonObj(value, localeValues, delimiters);
  }
}
function compileJsonObj(jsonObj, localeValues, delimiters) {
  walkJsonObj(jsonObj, function (jsonObj, key) {
    compileValue(jsonObj, key, localeValues, delimiters);
  });
  return jsonObj;
}
function walkJsonObj(jsonObj, walk) {
  if (Array.isArray(jsonObj)) {
    for (var i = 0; i < jsonObj.length; i++) {
      if (walk(jsonObj, i)) {
        return true;
      }
    }
  } else if (isObject(jsonObj)) {
    for (var key in jsonObj) {
      if (walk(jsonObj, key)) {
        return true;
      }
    }
  }
  return false;
}
function resolveLocale(locales) {
  return function (locale) {
    if (!locale) {
      return locale;
    }
    locale = normalizeLocale(locale) || locale;
    return resolveLocaleChain(locale).find(function (locale) {
      return locales.indexOf(locale) > -1;
    });
  };
}
function resolveLocaleChain(locale) {
  var chain = [];
  var tokens = locale.split('-');
  while (tokens.length) {
    chain.push(tokens.join('-'));
    tokens.pop();
  }
  return chain;
}
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/uni-mp-weixin/dist/index.js */ 2)["default"], __webpack_require__(/*! ./../../../webpack/buildin/global.js */ 3)))

/***/ }),
/* 23 */
/*!***************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/classCallCheck.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
module.exports = _classCallCheck, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),
/* 24 */
/*!************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/createClass.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var toPropertyKey = __webpack_require__(/*! ./toPropertyKey.js */ 12);
function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, toPropertyKey(descriptor.key), descriptor);
  }
}
function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties(Constructor, staticProps);
  Object.defineProperty(Constructor, "prototype", {
    writable: false
  });
  return Constructor;
}
module.exports = _createClass, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),
/* 25 */
/*!******************************************************************************************!*\
  !*** ./node_modules/@dcloudio/vue-cli-plugin-uni/packages/mp-vue/dist/mp.runtime.esm.js ***!
  \******************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* WEBPACK VAR INJECTION */(function(global) {/*!
 * Vue.js v2.6.11
 * (c) 2014-2023 Evan You
 * Released under the MIT License.
 */
/*  */

var emptyObject = Object.freeze({});

// These helpers produce better VM code in JS engines due to their
// explicitness and function inlining.
function isUndef (v) {
  return v === undefined || v === null
}

function isDef (v) {
  return v !== undefined && v !== null
}

function isTrue (v) {
  return v === true
}

function isFalse (v) {
  return v === false
}

/**
 * Check if value is primitive.
 */
function isPrimitive (value) {
  return (
    typeof value === 'string' ||
    typeof value === 'number' ||
    // $flow-disable-line
    typeof value === 'symbol' ||
    typeof value === 'boolean'
  )
}

/**
 * Quick object check - this is primarily used to tell
 * Objects from primitive values when we know the value
 * is a JSON-compliant type.
 */
function isObject (obj) {
  return obj !== null && typeof obj === 'object'
}

/**
 * Get the raw type string of a value, e.g., [object Object].
 */
var _toString = Object.prototype.toString;

function toRawType (value) {
  return _toString.call(value).slice(8, -1)
}

/**
 * Strict object type check. Only returns true
 * for plain JavaScript objects.
 */
function isPlainObject (obj) {
  return _toString.call(obj) === '[object Object]'
}

function isRegExp (v) {
  return _toString.call(v) === '[object RegExp]'
}

/**
 * Check if val is a valid array index.
 */
function isValidArrayIndex (val) {
  var n = parseFloat(String(val));
  return n >= 0 && Math.floor(n) === n && isFinite(val)
}

function isPromise (val) {
  return (
    isDef(val) &&
    typeof val.then === 'function' &&
    typeof val.catch === 'function'
  )
}

/**
 * Convert a value to a string that is actually rendered.
 */
function toString (val) {
  return val == null
    ? ''
    : Array.isArray(val) || (isPlainObject(val) && val.toString === _toString)
      ? JSON.stringify(val, null, 2)
      : String(val)
}

/**
 * Convert an input value to a number for persistence.
 * If the conversion fails, return original string.
 */
function toNumber (val) {
  var n = parseFloat(val);
  return isNaN(n) ? val : n
}

/**
 * Make a map and return a function for checking if a key
 * is in that map.
 */
function makeMap (
  str,
  expectsLowerCase
) {
  var map = Object.create(null);
  var list = str.split(',');
  for (var i = 0; i < list.length; i++) {
    map[list[i]] = true;
  }
  return expectsLowerCase
    ? function (val) { return map[val.toLowerCase()]; }
    : function (val) { return map[val]; }
}

/**
 * Check if a tag is a built-in tag.
 */
var isBuiltInTag = makeMap('slot,component', true);

/**
 * Check if an attribute is a reserved attribute.
 */
var isReservedAttribute = makeMap('key,ref,slot,slot-scope,is');

/**
 * Remove an item from an array.
 */
function remove (arr, item) {
  if (arr.length) {
    var index = arr.indexOf(item);
    if (index > -1) {
      return arr.splice(index, 1)
    }
  }
}

/**
 * Check whether an object has the property.
 */
var hasOwnProperty = Object.prototype.hasOwnProperty;
function hasOwn (obj, key) {
  return hasOwnProperty.call(obj, key)
}

/**
 * Create a cached version of a pure function.
 */
function cached (fn) {
  var cache = Object.create(null);
  return (function cachedFn (str) {
    var hit = cache[str];
    return hit || (cache[str] = fn(str))
  })
}

/**
 * Camelize a hyphen-delimited string.
 */
var camelizeRE = /-(\w)/g;
var camelize = cached(function (str) {
  return str.replace(camelizeRE, function (_, c) { return c ? c.toUpperCase() : ''; })
});

/**
 * Capitalize a string.
 */
var capitalize = cached(function (str) {
  return str.charAt(0).toUpperCase() + str.slice(1)
});

/**
 * Hyphenate a camelCase string.
 */
var hyphenateRE = /\B([A-Z])/g;
var hyphenate = cached(function (str) {
  return str.replace(hyphenateRE, '-$1').toLowerCase()
});

/**
 * Simple bind polyfill for environments that do not support it,
 * e.g., PhantomJS 1.x. Technically, we don't need this anymore
 * since native bind is now performant enough in most browsers.
 * But removing it would mean breaking code that was able to run in
 * PhantomJS 1.x, so this must be kept for backward compatibility.
 */

/* istanbul ignore next */
function polyfillBind (fn, ctx) {
  function boundFn (a) {
    var l = arguments.length;
    return l
      ? l > 1
        ? fn.apply(ctx, arguments)
        : fn.call(ctx, a)
      : fn.call(ctx)
  }

  boundFn._length = fn.length;
  return boundFn
}

function nativeBind (fn, ctx) {
  return fn.bind(ctx)
}

var bind = Function.prototype.bind
  ? nativeBind
  : polyfillBind;

/**
 * Convert an Array-like object to a real Array.
 */
function toArray (list, start) {
  start = start || 0;
  var i = list.length - start;
  var ret = new Array(i);
  while (i--) {
    ret[i] = list[i + start];
  }
  return ret
}

/**
 * Mix properties into target object.
 */
function extend (to, _from) {
  for (var key in _from) {
    to[key] = _from[key];
  }
  return to
}

/**
 * Merge an Array of Objects into a single Object.
 */
function toObject (arr) {
  var res = {};
  for (var i = 0; i < arr.length; i++) {
    if (arr[i]) {
      extend(res, arr[i]);
    }
  }
  return res
}

/* eslint-disable no-unused-vars */

/**
 * Perform no operation.
 * Stubbing args to make Flow happy without leaving useless transpiled code
 * with ...rest (https://flow.org/blog/2017/05/07/Strict-Function-Call-Arity/).
 */
function noop (a, b, c) {}

/**
 * Always return false.
 */
var no = function (a, b, c) { return false; };

/* eslint-enable no-unused-vars */

/**
 * Return the same value.
 */
var identity = function (_) { return _; };

/**
 * Check if two values are loosely equal - that is,
 * if they are plain objects, do they have the same shape?
 */
function looseEqual (a, b) {
  if (a === b) { return true }
  var isObjectA = isObject(a);
  var isObjectB = isObject(b);
  if (isObjectA && isObjectB) {
    try {
      var isArrayA = Array.isArray(a);
      var isArrayB = Array.isArray(b);
      if (isArrayA && isArrayB) {
        return a.length === b.length && a.every(function (e, i) {
          return looseEqual(e, b[i])
        })
      } else if (a instanceof Date && b instanceof Date) {
        return a.getTime() === b.getTime()
      } else if (!isArrayA && !isArrayB) {
        var keysA = Object.keys(a);
        var keysB = Object.keys(b);
        return keysA.length === keysB.length && keysA.every(function (key) {
          return looseEqual(a[key], b[key])
        })
      } else {
        /* istanbul ignore next */
        return false
      }
    } catch (e) {
      /* istanbul ignore next */
      return false
    }
  } else if (!isObjectA && !isObjectB) {
    return String(a) === String(b)
  } else {
    return false
  }
}

/**
 * Return the first index at which a loosely equal value can be
 * found in the array (if value is a plain object, the array must
 * contain an object of the same shape), or -1 if it is not present.
 */
function looseIndexOf (arr, val) {
  for (var i = 0; i < arr.length; i++) {
    if (looseEqual(arr[i], val)) { return i }
  }
  return -1
}

/**
 * Ensure a function is called only once.
 */
function once (fn) {
  var called = false;
  return function () {
    if (!called) {
      called = true;
      fn.apply(this, arguments);
    }
  }
}

var ASSET_TYPES = [
  'component',
  'directive',
  'filter'
];

var LIFECYCLE_HOOKS = [
  'beforeCreate',
  'created',
  'beforeMount',
  'mounted',
  'beforeUpdate',
  'updated',
  'beforeDestroy',
  'destroyed',
  'activated',
  'deactivated',
  'errorCaptured',
  'serverPrefetch'
];

/*  */



var config = ({
  /**
   * Option merge strategies (used in core/util/options)
   */
  // $flow-disable-line
  optionMergeStrategies: Object.create(null),

  /**
   * Whether to suppress warnings.
   */
  silent: false,

  /**
   * Show production mode tip message on boot?
   */
  productionTip: "development" !== 'production',

  /**
   * Whether to enable devtools
   */
  devtools: "development" !== 'production',

  /**
   * Whether to record perf
   */
  performance: false,

  /**
   * Error handler for watcher errors
   */
  errorHandler: null,

  /**
   * Warn handler for watcher warns
   */
  warnHandler: null,

  /**
   * Ignore certain custom elements
   */
  ignoredElements: [],

  /**
   * Custom user key aliases for v-on
   */
  // $flow-disable-line
  keyCodes: Object.create(null),

  /**
   * Check if a tag is reserved so that it cannot be registered as a
   * component. This is platform-dependent and may be overwritten.
   */
  isReservedTag: no,

  /**
   * Check if an attribute is reserved so that it cannot be used as a component
   * prop. This is platform-dependent and may be overwritten.
   */
  isReservedAttr: no,

  /**
   * Check if a tag is an unknown element.
   * Platform-dependent.
   */
  isUnknownElement: no,

  /**
   * Get the namespace of an element
   */
  getTagNamespace: noop,

  /**
   * Parse the real tag name for the specific platform.
   */
  parsePlatformTagName: identity,

  /**
   * Check if an attribute must be bound using property, e.g. value
   * Platform-dependent.
   */
  mustUseProp: no,

  /**
   * Perform updates asynchronously. Intended to be used by Vue Test Utils
   * This will significantly reduce performance if set to false.
   */
  async: true,

  /**
   * Exposed for legacy reasons
   */
  _lifecycleHooks: LIFECYCLE_HOOKS
});

/*  */

/**
 * unicode letters used for parsing html tags, component names and property paths.
 * using https://www.w3.org/TR/html53/semantics-scripting.html#potentialcustomelementname
 * skipping \u10000-\uEFFFF due to it freezing up PhantomJS
 */
var unicodeRegExp = /a-zA-Z\u00B7\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u037D\u037F-\u1FFF\u200C-\u200D\u203F-\u2040\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD/;

/**
 * Check if a string starts with $ or _
 */
function isReserved (str) {
  var c = (str + '').charCodeAt(0);
  return c === 0x24 || c === 0x5F
}

/**
 * Define a property.
 */
function def (obj, key, val, enumerable) {
  Object.defineProperty(obj, key, {
    value: val,
    enumerable: !!enumerable,
    writable: true,
    configurable: true
  });
}

/**
 * Parse simple path.
 */
var bailRE = new RegExp(("[^" + (unicodeRegExp.source) + ".$_\\d]"));
function parsePath (path) {
  if (bailRE.test(path)) {
    return
  }
  var segments = path.split('.');
  return function (obj) {
    for (var i = 0; i < segments.length; i++) {
      if (!obj) { return }
      obj = obj[segments[i]];
    }
    return obj
  }
}

/*  */

// can we use __proto__?
var hasProto = '__proto__' in {};

// Browser environment sniffing
var inBrowser = typeof window !== 'undefined';
var inWeex = typeof WXEnvironment !== 'undefined' && !!WXEnvironment.platform;
var weexPlatform = inWeex && WXEnvironment.platform.toLowerCase();
var UA = inBrowser && window.navigator.userAgent.toLowerCase();
var isIE = UA && /msie|trident/.test(UA);
var isIE9 = UA && UA.indexOf('msie 9.0') > 0;
var isEdge = UA && UA.indexOf('edge/') > 0;
var isAndroid = (UA && UA.indexOf('android') > 0) || (weexPlatform === 'android');
var isIOS = (UA && /iphone|ipad|ipod|ios/.test(UA)) || (weexPlatform === 'ios');
var isChrome = UA && /chrome\/\d+/.test(UA) && !isEdge;
var isPhantomJS = UA && /phantomjs/.test(UA);
var isFF = UA && UA.match(/firefox\/(\d+)/);

// Firefox has a "watch" function on Object.prototype...
var nativeWatch = ({}).watch;
if (inBrowser) {
  try {
    var opts = {};
    Object.defineProperty(opts, 'passive', ({
      get: function get () {
      }
    })); // https://github.com/facebook/flow/issues/285
    window.addEventListener('test-passive', null, opts);
  } catch (e) {}
}

// this needs to be lazy-evaled because vue may be required before
// vue-server-renderer can set VUE_ENV
var _isServer;
var isServerRendering = function () {
  if (_isServer === undefined) {
    /* istanbul ignore if */
    if (!inBrowser && !inWeex && typeof global !== 'undefined') {
      // detect presence of vue-server-renderer and avoid
      // Webpack shimming the process
      _isServer = global['process'] && global['process'].env.VUE_ENV === 'server';
    } else {
      _isServer = false;
    }
  }
  return _isServer
};

// detect devtools
var devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;

/* istanbul ignore next */
function isNative (Ctor) {
  return typeof Ctor === 'function' && /native code/.test(Ctor.toString())
}

var hasSymbol =
  typeof Symbol !== 'undefined' && isNative(Symbol) &&
  typeof Reflect !== 'undefined' && isNative(Reflect.ownKeys);

var _Set;
/* istanbul ignore if */ // $flow-disable-line
if (typeof Set !== 'undefined' && isNative(Set)) {
  // use native Set when available.
  _Set = Set;
} else {
  // a non-standard Set polyfill that only works with primitive keys.
  _Set = /*@__PURE__*/(function () {
    function Set () {
      this.set = Object.create(null);
    }
    Set.prototype.has = function has (key) {
      return this.set[key] === true
    };
    Set.prototype.add = function add (key) {
      this.set[key] = true;
    };
    Set.prototype.clear = function clear () {
      this.set = Object.create(null);
    };

    return Set;
  }());
}

/*  */

var warn = noop;
var tip = noop;
var generateComponentTrace = (noop); // work around flow check
var formatComponentName = (noop);

if (true) {
  var hasConsole = typeof console !== 'undefined';
  var classifyRE = /(?:^|[-_])(\w)/g;
  var classify = function (str) { return str
    .replace(classifyRE, function (c) { return c.toUpperCase(); })
    .replace(/[-_]/g, ''); };

  warn = function (msg, vm) {
    var trace = vm ? generateComponentTrace(vm) : '';

    if (config.warnHandler) {
      config.warnHandler.call(null, msg, vm, trace);
    } else if (hasConsole && (!config.silent)) {
      console.error(("[Vue warn]: " + msg + trace));
    }
  };

  tip = function (msg, vm) {
    if (hasConsole && (!config.silent)) {
      console.warn("[Vue tip]: " + msg + (
        vm ? generateComponentTrace(vm) : ''
      ));
    }
  };

  formatComponentName = function (vm, includeFile) {
    if (vm.$root === vm) {
      if (vm.$options && vm.$options.__file) { // fixed by xxxxxx
        return ('') + vm.$options.__file
      }
      return '<Root>'
    }
    var options = typeof vm === 'function' && vm.cid != null
      ? vm.options
      : vm._isVue
        ? vm.$options || vm.constructor.options
        : vm;
    var name = options.name || options._componentTag;
    var file = options.__file;
    if (!name && file) {
      var match = file.match(/([^/\\]+)\.vue$/);
      name = match && match[1];
    }

    return (
      (name ? ("<" + (classify(name)) + ">") : "<Anonymous>") +
      (file && includeFile !== false ? (" at " + file) : '')
    )
  };

  var repeat = function (str, n) {
    var res = '';
    while (n) {
      if (n % 2 === 1) { res += str; }
      if (n > 1) { str += str; }
      n >>= 1;
    }
    return res
  };

  generateComponentTrace = function (vm) {
    if (vm._isVue && vm.$parent) {
      var tree = [];
      var currentRecursiveSequence = 0;
      while (vm && vm.$options.name !== 'PageBody') {
        if (tree.length > 0) {
          var last = tree[tree.length - 1];
          if (last.constructor === vm.constructor) {
            currentRecursiveSequence++;
            vm = vm.$parent;
            continue
          } else if (currentRecursiveSequence > 0) {
            tree[tree.length - 1] = [last, currentRecursiveSequence];
            currentRecursiveSequence = 0;
          }
        }
        !vm.$options.isReserved && tree.push(vm);
        vm = vm.$parent;
      }
      return '\n\nfound in\n\n' + tree
        .map(function (vm, i) { return ("" + (i === 0 ? '---> ' : repeat(' ', 5 + i * 2)) + (Array.isArray(vm)
            ? ((formatComponentName(vm[0])) + "... (" + (vm[1]) + " recursive calls)")
            : formatComponentName(vm))); })
        .join('\n')
    } else {
      return ("\n\n(found in " + (formatComponentName(vm)) + ")")
    }
  };
}

/*  */

var uid = 0;

/**
 * A dep is an observable that can have multiple
 * directives subscribing to it.
 */
var Dep = function Dep () {
  this.id = uid++;
  this.subs = [];
};

Dep.prototype.addSub = function addSub (sub) {
  this.subs.push(sub);
};

Dep.prototype.removeSub = function removeSub (sub) {
  remove(this.subs, sub);
};

Dep.prototype.depend = function depend () {
  if (Dep.SharedObject.target) {
    Dep.SharedObject.target.addDep(this);
  }
};

Dep.prototype.notify = function notify () {
  // stabilize the subscriber list first
  var subs = this.subs.slice();
  if ( true && !config.async) {
    // subs aren't sorted in scheduler if not running async
    // we need to sort them now to make sure they fire in correct
    // order
    subs.sort(function (a, b) { return a.id - b.id; });
  }
  for (var i = 0, l = subs.length; i < l; i++) {
    subs[i].update();
  }
};

// The current target watcher being evaluated.
// This is globally unique because only one watcher
// can be evaluated at a time.
// fixed by xxxxxx (nvue shared vuex)
/* eslint-disable no-undef */
Dep.SharedObject = {};
Dep.SharedObject.target = null;
Dep.SharedObject.targetStack = [];

function pushTarget (target) {
  Dep.SharedObject.targetStack.push(target);
  Dep.SharedObject.target = target;
  Dep.target = target;
}

function popTarget () {
  Dep.SharedObject.targetStack.pop();
  Dep.SharedObject.target = Dep.SharedObject.targetStack[Dep.SharedObject.targetStack.length - 1];
  Dep.target = Dep.SharedObject.target;
}

/*  */

var VNode = function VNode (
  tag,
  data,
  children,
  text,
  elm,
  context,
  componentOptions,
  asyncFactory
) {
  this.tag = tag;
  this.data = data;
  this.children = children;
  this.text = text;
  this.elm = elm;
  this.ns = undefined;
  this.context = context;
  this.fnContext = undefined;
  this.fnOptions = undefined;
  this.fnScopeId = undefined;
  this.key = data && data.key;
  this.componentOptions = componentOptions;
  this.componentInstance = undefined;
  this.parent = undefined;
  this.raw = false;
  this.isStatic = false;
  this.isRootInsert = true;
  this.isComment = false;
  this.isCloned = false;
  this.isOnce = false;
  this.asyncFactory = asyncFactory;
  this.asyncMeta = undefined;
  this.isAsyncPlaceholder = false;
};

var prototypeAccessors = { child: { configurable: true } };

// DEPRECATED: alias for componentInstance for backwards compat.
/* istanbul ignore next */
prototypeAccessors.child.get = function () {
  return this.componentInstance
};

Object.defineProperties( VNode.prototype, prototypeAccessors );

var createEmptyVNode = function (text) {
  if ( text === void 0 ) text = '';

  var node = new VNode();
  node.text = text;
  node.isComment = true;
  return node
};

function createTextVNode (val) {
  return new VNode(undefined, undefined, undefined, String(val))
}

// optimized shallow clone
// used for static nodes and slot nodes because they may be reused across
// multiple renders, cloning them avoids errors when DOM manipulations rely
// on their elm reference.
function cloneVNode (vnode) {
  var cloned = new VNode(
    vnode.tag,
    vnode.data,
    // #7975
    // clone children array to avoid mutating original in case of cloning
    // a child.
    vnode.children && vnode.children.slice(),
    vnode.text,
    vnode.elm,
    vnode.context,
    vnode.componentOptions,
    vnode.asyncFactory
  );
  cloned.ns = vnode.ns;
  cloned.isStatic = vnode.isStatic;
  cloned.key = vnode.key;
  cloned.isComment = vnode.isComment;
  cloned.fnContext = vnode.fnContext;
  cloned.fnOptions = vnode.fnOptions;
  cloned.fnScopeId = vnode.fnScopeId;
  cloned.asyncMeta = vnode.asyncMeta;
  cloned.isCloned = true;
  return cloned
}

/*
 * not type checking this file because flow doesn't play well with
 * dynamically accessing methods on Array prototype
 */

var arrayProto = Array.prototype;
var arrayMethods = Object.create(arrayProto);

var methodsToPatch = [
  'push',
  'pop',
  'shift',
  'unshift',
  'splice',
  'sort',
  'reverse'
];

/**
 * Intercept mutating methods and emit events
 */
methodsToPatch.forEach(function (method) {
  // cache original method
  var original = arrayProto[method];
  def(arrayMethods, method, function mutator () {
    var args = [], len = arguments.length;
    while ( len-- ) args[ len ] = arguments[ len ];

    var result = original.apply(this, args);
    var ob = this.__ob__;
    var inserted;
    switch (method) {
      case 'push':
      case 'unshift':
        inserted = args;
        break
      case 'splice':
        inserted = args.slice(2);
        break
    }
    if (inserted) { ob.observeArray(inserted); }
    // notify change
    ob.dep.notify();
    return result
  });
});

/*  */

var arrayKeys = Object.getOwnPropertyNames(arrayMethods);

/**
 * In some cases we may want to disable observation inside a component's
 * update computation.
 */
var shouldObserve = true;

function toggleObserving (value) {
  shouldObserve = value;
}

/**
 * Observer class that is attached to each observed
 * object. Once attached, the observer converts the target
 * object's property keys into getter/setters that
 * collect dependencies and dispatch updates.
 */
var Observer = function Observer (value) {
  this.value = value;
  this.dep = new Dep();
  this.vmCount = 0;
  def(value, '__ob__', this);
  if (Array.isArray(value)) {
    if (hasProto) {
      {// fixed by xxxxxx 微信小程序使用 plugins 之后，数组方法被直接挂载到了数组对象上，需要执行 copyAugment 逻辑
        if(value.push !== value.__proto__.push){
          copyAugment(value, arrayMethods, arrayKeys);
        } else {
          protoAugment(value, arrayMethods);
        }
      }
    } else {
      copyAugment(value, arrayMethods, arrayKeys);
    }
    this.observeArray(value);
  } else {
    this.walk(value);
  }
};

/**
 * Walk through all properties and convert them into
 * getter/setters. This method should only be called when
 * value type is Object.
 */
Observer.prototype.walk = function walk (obj) {
  var keys = Object.keys(obj);
  for (var i = 0; i < keys.length; i++) {
    defineReactive$$1(obj, keys[i]);
  }
};

/**
 * Observe a list of Array items.
 */
Observer.prototype.observeArray = function observeArray (items) {
  for (var i = 0, l = items.length; i < l; i++) {
    observe(items[i]);
  }
};

// helpers

/**
 * Augment a target Object or Array by intercepting
 * the prototype chain using __proto__
 */
function protoAugment (target, src) {
  /* eslint-disable no-proto */
  target.__proto__ = src;
  /* eslint-enable no-proto */
}

/**
 * Augment a target Object or Array by defining
 * hidden properties.
 */
/* istanbul ignore next */
function copyAugment (target, src, keys) {
  for (var i = 0, l = keys.length; i < l; i++) {
    var key = keys[i];
    def(target, key, src[key]);
  }
}

/**
 * Attempt to create an observer instance for a value,
 * returns the new observer if successfully observed,
 * or the existing observer if the value already has one.
 */
function observe (value, asRootData) {
  if (!isObject(value) || value instanceof VNode) {
    return
  }
  var ob;
  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {
    ob = value.__ob__;
  } else if (
    shouldObserve &&
    !isServerRendering() &&
    (Array.isArray(value) || isPlainObject(value)) &&
    Object.isExtensible(value) &&
    !value._isVue &&
    !value.__v_isMPComponent
  ) {
    ob = new Observer(value);
  }
  if (asRootData && ob) {
    ob.vmCount++;
  }
  return ob
}

/**
 * Define a reactive property on an Object.
 */
function defineReactive$$1 (
  obj,
  key,
  val,
  customSetter,
  shallow
) {
  var dep = new Dep();

  var property = Object.getOwnPropertyDescriptor(obj, key);
  if (property && property.configurable === false) {
    return
  }

  // cater for pre-defined getter/setters
  var getter = property && property.get;
  var setter = property && property.set;
  if ((!getter || setter) && arguments.length === 2) {
    val = obj[key];
  }

  var childOb = !shallow && observe(val);
  Object.defineProperty(obj, key, {
    enumerable: true,
    configurable: true,
    get: function reactiveGetter () {
      var value = getter ? getter.call(obj) : val;
      if (Dep.SharedObject.target) { // fixed by xxxxxx
        dep.depend();
        if (childOb) {
          childOb.dep.depend();
          if (Array.isArray(value)) {
            dependArray(value);
          }
        }
      }
      return value
    },
    set: function reactiveSetter (newVal) {
      var value = getter ? getter.call(obj) : val;
      /* eslint-disable no-self-compare */
      if (newVal === value || (newVal !== newVal && value !== value)) {
        return
      }
      /* eslint-enable no-self-compare */
      if ( true && customSetter) {
        customSetter();
      }
      // #7981: for accessor properties without setter
      if (getter && !setter) { return }
      if (setter) {
        setter.call(obj, newVal);
      } else {
        val = newVal;
      }
      childOb = !shallow && observe(newVal);
      dep.notify();
    }
  });
}

/**
 * Set a property on an object. Adds the new property and
 * triggers change notification if the property doesn't
 * already exist.
 */
function set (target, key, val) {
  if ( true &&
    (isUndef(target) || isPrimitive(target))
  ) {
    warn(("Cannot set reactive property on undefined, null, or primitive value: " + ((target))));
  }
  if (Array.isArray(target) && isValidArrayIndex(key)) {
    target.length = Math.max(target.length, key);
    target.splice(key, 1, val);
    return val
  }
  if (key in target && !(key in Object.prototype)) {
    target[key] = val;
    return val
  }
  var ob = (target).__ob__;
  if (target._isVue || (ob && ob.vmCount)) {
     true && warn(
      'Avoid adding reactive properties to a Vue instance or its root $data ' +
      'at runtime - declare it upfront in the data option.'
    );
    return val
  }
  if (!ob) {
    target[key] = val;
    return val
  }
  defineReactive$$1(ob.value, key, val);
  ob.dep.notify();
  return val
}

/**
 * Delete a property and trigger change if necessary.
 */
function del (target, key) {
  if ( true &&
    (isUndef(target) || isPrimitive(target))
  ) {
    warn(("Cannot delete reactive property on undefined, null, or primitive value: " + ((target))));
  }
  if (Array.isArray(target) && isValidArrayIndex(key)) {
    target.splice(key, 1);
    return
  }
  var ob = (target).__ob__;
  if (target._isVue || (ob && ob.vmCount)) {
     true && warn(
      'Avoid deleting properties on a Vue instance or its root $data ' +
      '- just set it to null.'
    );
    return
  }
  if (!hasOwn(target, key)) {
    return
  }
  delete target[key];
  if (!ob) {
    return
  }
  ob.dep.notify();
}

/**
 * Collect dependencies on array elements when the array is touched, since
 * we cannot intercept array element access like property getters.
 */
function dependArray (value) {
  for (var e = (void 0), i = 0, l = value.length; i < l; i++) {
    e = value[i];
    e && e.__ob__ && e.__ob__.dep.depend();
    if (Array.isArray(e)) {
      dependArray(e);
    }
  }
}

/*  */

/**
 * Option overwriting strategies are functions that handle
 * how to merge a parent option value and a child option
 * value into the final value.
 */
var strats = config.optionMergeStrategies;

/**
 * Options with restrictions
 */
if (true) {
  strats.el = strats.propsData = function (parent, child, vm, key) {
    if (!vm) {
      warn(
        "option \"" + key + "\" can only be used during instance " +
        'creation with the `new` keyword.'
      );
    }
    return defaultStrat(parent, child)
  };
}

/**
 * Helper that recursively merges two data objects together.
 */
function mergeData (to, from) {
  if (!from) { return to }
  var key, toVal, fromVal;

  var keys = hasSymbol
    ? Reflect.ownKeys(from)
    : Object.keys(from);

  for (var i = 0; i < keys.length; i++) {
    key = keys[i];
    // in case the object is already observed...
    if (key === '__ob__') { continue }
    toVal = to[key];
    fromVal = from[key];
    if (!hasOwn(to, key)) {
      set(to, key, fromVal);
    } else if (
      toVal !== fromVal &&
      isPlainObject(toVal) &&
      isPlainObject(fromVal)
    ) {
      mergeData(toVal, fromVal);
    }
  }
  return to
}

/**
 * Data
 */
function mergeDataOrFn (
  parentVal,
  childVal,
  vm
) {
  if (!vm) {
    // in a Vue.extend merge, both should be functions
    if (!childVal) {
      return parentVal
    }
    if (!parentVal) {
      return childVal
    }
    // when parentVal & childVal are both present,
    // we need to return a function that returns the
    // merged result of both functions... no need to
    // check if parentVal is a function here because
    // it has to be a function to pass previous merges.
    return function mergedDataFn () {
      return mergeData(
        typeof childVal === 'function' ? childVal.call(this, this) : childVal,
        typeof parentVal === 'function' ? parentVal.call(this, this) : parentVal
      )
    }
  } else {
    return function mergedInstanceDataFn () {
      // instance merge
      var instanceData = typeof childVal === 'function'
        ? childVal.call(vm, vm)
        : childVal;
      var defaultData = typeof parentVal === 'function'
        ? parentVal.call(vm, vm)
        : parentVal;
      if (instanceData) {
        return mergeData(instanceData, defaultData)
      } else {
        return defaultData
      }
    }
  }
}

strats.data = function (
  parentVal,
  childVal,
  vm
) {
  if (!vm) {
    if (childVal && typeof childVal !== 'function') {
       true && warn(
        'The "data" option should be a function ' +
        'that returns a per-instance value in component ' +
        'definitions.',
        vm
      );

      return parentVal
    }
    return mergeDataOrFn(parentVal, childVal)
  }

  return mergeDataOrFn(parentVal, childVal, vm)
};

/**
 * Hooks and props are merged as arrays.
 */
function mergeHook (
  parentVal,
  childVal
) {
  var res = childVal
    ? parentVal
      ? parentVal.concat(childVal)
      : Array.isArray(childVal)
        ? childVal
        : [childVal]
    : parentVal;
  return res
    ? dedupeHooks(res)
    : res
}

function dedupeHooks (hooks) {
  var res = [];
  for (var i = 0; i < hooks.length; i++) {
    if (res.indexOf(hooks[i]) === -1) {
      res.push(hooks[i]);
    }
  }
  return res
}

LIFECYCLE_HOOKS.forEach(function (hook) {
  strats[hook] = mergeHook;
});

/**
 * Assets
 *
 * When a vm is present (instance creation), we need to do
 * a three-way merge between constructor options, instance
 * options and parent options.
 */
function mergeAssets (
  parentVal,
  childVal,
  vm,
  key
) {
  var res = Object.create(parentVal || null);
  if (childVal) {
     true && assertObjectType(key, childVal, vm);
    return extend(res, childVal)
  } else {
    return res
  }
}

ASSET_TYPES.forEach(function (type) {
  strats[type + 's'] = mergeAssets;
});

/**
 * Watchers.
 *
 * Watchers hashes should not overwrite one
 * another, so we merge them as arrays.
 */
strats.watch = function (
  parentVal,
  childVal,
  vm,
  key
) {
  // work around Firefox's Object.prototype.watch...
  if (parentVal === nativeWatch) { parentVal = undefined; }
  if (childVal === nativeWatch) { childVal = undefined; }
  /* istanbul ignore if */
  if (!childVal) { return Object.create(parentVal || null) }
  if (true) {
    assertObjectType(key, childVal, vm);
  }
  if (!parentVal) { return childVal }
  var ret = {};
  extend(ret, parentVal);
  for (var key$1 in childVal) {
    var parent = ret[key$1];
    var child = childVal[key$1];
    if (parent && !Array.isArray(parent)) {
      parent = [parent];
    }
    ret[key$1] = parent
      ? parent.concat(child)
      : Array.isArray(child) ? child : [child];
  }
  return ret
};

/**
 * Other object hashes.
 */
strats.props =
strats.methods =
strats.inject =
strats.computed = function (
  parentVal,
  childVal,
  vm,
  key
) {
  if (childVal && "development" !== 'production') {
    assertObjectType(key, childVal, vm);
  }
  if (!parentVal) { return childVal }
  var ret = Object.create(null);
  extend(ret, parentVal);
  if (childVal) { extend(ret, childVal); }
  return ret
};
strats.provide = mergeDataOrFn;

/**
 * Default strategy.
 */
var defaultStrat = function (parentVal, childVal) {
  return childVal === undefined
    ? parentVal
    : childVal
};

/**
 * Validate component names
 */
function checkComponents (options) {
  for (var key in options.components) {
    validateComponentName(key);
  }
}

function validateComponentName (name) {
  if (!new RegExp(("^[a-zA-Z][\\-\\.0-9_" + (unicodeRegExp.source) + "]*$")).test(name)) {
    warn(
      'Invalid component name: "' + name + '". Component names ' +
      'should conform to valid custom element name in html5 specification.'
    );
  }
  if (isBuiltInTag(name) || config.isReservedTag(name)) {
    warn(
      'Do not use built-in or reserved HTML elements as component ' +
      'id: ' + name
    );
  }
}

/**
 * Ensure all props option syntax are normalized into the
 * Object-based format.
 */
function normalizeProps (options, vm) {
  var props = options.props;
  if (!props) { return }
  var res = {};
  var i, val, name;
  if (Array.isArray(props)) {
    i = props.length;
    while (i--) {
      val = props[i];
      if (typeof val === 'string') {
        name = camelize(val);
        res[name] = { type: null };
      } else if (true) {
        warn('props must be strings when using array syntax.');
      }
    }
  } else if (isPlainObject(props)) {
    for (var key in props) {
      val = props[key];
      name = camelize(key);
      res[name] = isPlainObject(val)
        ? val
        : { type: val };
    }
  } else if (true) {
    warn(
      "Invalid value for option \"props\": expected an Array or an Object, " +
      "but got " + (toRawType(props)) + ".",
      vm
    );
  }
  options.props = res;
}

/**
 * Normalize all injections into Object-based format
 */
function normalizeInject (options, vm) {
  var inject = options.inject;
  if (!inject) { return }
  var normalized = options.inject = {};
  if (Array.isArray(inject)) {
    for (var i = 0; i < inject.length; i++) {
      normalized[inject[i]] = { from: inject[i] };
    }
  } else if (isPlainObject(inject)) {
    for (var key in inject) {
      var val = inject[key];
      normalized[key] = isPlainObject(val)
        ? extend({ from: key }, val)
        : { from: val };
    }
  } else if (true) {
    warn(
      "Invalid value for option \"inject\": expected an Array or an Object, " +
      "but got " + (toRawType(inject)) + ".",
      vm
    );
  }
}

/**
 * Normalize raw function directives into object format.
 */
function normalizeDirectives (options) {
  var dirs = options.directives;
  if (dirs) {
    for (var key in dirs) {
      var def$$1 = dirs[key];
      if (typeof def$$1 === 'function') {
        dirs[key] = { bind: def$$1, update: def$$1 };
      }
    }
  }
}

function assertObjectType (name, value, vm) {
  if (!isPlainObject(value)) {
    warn(
      "Invalid value for option \"" + name + "\": expected an Object, " +
      "but got " + (toRawType(value)) + ".",
      vm
    );
  }
}

/**
 * Merge two option objects into a new one.
 * Core utility used in both instantiation and inheritance.
 */
function mergeOptions (
  parent,
  child,
  vm
) {
  if (true) {
    checkComponents(child);
  }

  if (typeof child === 'function') {
    child = child.options;
  }

  normalizeProps(child, vm);
  normalizeInject(child, vm);
  normalizeDirectives(child);

  // Apply extends and mixins on the child options,
  // but only if it is a raw options object that isn't
  // the result of another mergeOptions call.
  // Only merged options has the _base property.
  if (!child._base) {
    if (child.extends) {
      parent = mergeOptions(parent, child.extends, vm);
    }
    if (child.mixins) {
      for (var i = 0, l = child.mixins.length; i < l; i++) {
        parent = mergeOptions(parent, child.mixins[i], vm);
      }
    }
  }

  var options = {};
  var key;
  for (key in parent) {
    mergeField(key);
  }
  for (key in child) {
    if (!hasOwn(parent, key)) {
      mergeField(key);
    }
  }
  function mergeField (key) {
    var strat = strats[key] || defaultStrat;
    options[key] = strat(parent[key], child[key], vm, key);
  }
  return options
}

/**
 * Resolve an asset.
 * This function is used because child instances need access
 * to assets defined in its ancestor chain.
 */
function resolveAsset (
  options,
  type,
  id,
  warnMissing
) {
  /* istanbul ignore if */
  if (typeof id !== 'string') {
    return
  }
  var assets = options[type];
  // check local registration variations first
  if (hasOwn(assets, id)) { return assets[id] }
  var camelizedId = camelize(id);
  if (hasOwn(assets, camelizedId)) { return assets[camelizedId] }
  var PascalCaseId = capitalize(camelizedId);
  if (hasOwn(assets, PascalCaseId)) { return assets[PascalCaseId] }
  // fallback to prototype chain
  var res = assets[id] || assets[camelizedId] || assets[PascalCaseId];
  if ( true && warnMissing && !res) {
    warn(
      'Failed to resolve ' + type.slice(0, -1) + ': ' + id,
      options
    );
  }
  return res
}

/*  */



function validateProp (
  key,
  propOptions,
  propsData,
  vm
) {
  var prop = propOptions[key];
  var absent = !hasOwn(propsData, key);
  var value = propsData[key];
  // boolean casting
  var booleanIndex = getTypeIndex(Boolean, prop.type);
  if (booleanIndex > -1) {
    if (absent && !hasOwn(prop, 'default')) {
      value = false;
    } else if (value === '' || value === hyphenate(key)) {
      // only cast empty string / same name to boolean if
      // boolean has higher priority
      var stringIndex = getTypeIndex(String, prop.type);
      if (stringIndex < 0 || booleanIndex < stringIndex) {
        value = true;
      }
    }
  }
  // check default value
  if (value === undefined) {
    value = getPropDefaultValue(vm, prop, key);
    // since the default value is a fresh copy,
    // make sure to observe it.
    var prevShouldObserve = shouldObserve;
    toggleObserving(true);
    observe(value);
    toggleObserving(prevShouldObserve);
  }
  if (
    true
  ) {
    assertProp(prop, key, value, vm, absent);
  }
  return value
}

/**
 * Get the default value of a prop.
 */
function getPropDefaultValue (vm, prop, key) {
  // no default, return undefined
  if (!hasOwn(prop, 'default')) {
    return undefined
  }
  var def = prop.default;
  // warn against non-factory defaults for Object & Array
  if ( true && isObject(def)) {
    warn(
      'Invalid default value for prop "' + key + '": ' +
      'Props with type Object/Array must use a factory function ' +
      'to return the default value.',
      vm
    );
  }
  // the raw prop value was also undefined from previous render,
  // return previous default value to avoid unnecessary watcher trigger
  if (vm && vm.$options.propsData &&
    vm.$options.propsData[key] === undefined &&
    vm._props[key] !== undefined
  ) {
    return vm._props[key]
  }
  // call factory function for non-Function types
  // a value is Function if its prototype is function even across different execution context
  return typeof def === 'function' && getType(prop.type) !== 'Function'
    ? def.call(vm)
    : def
}

/**
 * Assert whether a prop is valid.
 */
function assertProp (
  prop,
  name,
  value,
  vm,
  absent
) {
  if (prop.required && absent) {
    warn(
      'Missing required prop: "' + name + '"',
      vm
    );
    return
  }
  if (value == null && !prop.required) {
    return
  }
  var type = prop.type;
  var valid = !type || type === true;
  var expectedTypes = [];
  if (type) {
    if (!Array.isArray(type)) {
      type = [type];
    }
    for (var i = 0; i < type.length && !valid; i++) {
      var assertedType = assertType(value, type[i]);
      expectedTypes.push(assertedType.expectedType || '');
      valid = assertedType.valid;
    }
  }

  if (!valid) {
    warn(
      getInvalidTypeMessage(name, value, expectedTypes),
      vm
    );
    return
  }
  var validator = prop.validator;
  if (validator) {
    if (!validator(value)) {
      warn(
        'Invalid prop: custom validator check failed for prop "' + name + '".',
        vm
      );
    }
  }
}

var simpleCheckRE = /^(String|Number|Boolean|Function|Symbol)$/;

function assertType (value, type) {
  var valid;
  var expectedType = getType(type);
  if (simpleCheckRE.test(expectedType)) {
    var t = typeof value;
    valid = t === expectedType.toLowerCase();
    // for primitive wrapper objects
    if (!valid && t === 'object') {
      valid = value instanceof type;
    }
  } else if (expectedType === 'Object') {
    valid = isPlainObject(value);
  } else if (expectedType === 'Array') {
    valid = Array.isArray(value);
  } else {
    valid = value instanceof type;
  }
  return {
    valid: valid,
    expectedType: expectedType
  }
}

/**
 * Use function string name to check built-in types,
 * because a simple equality check will fail when running
 * across different vms / iframes.
 */
function getType (fn) {
  var match = fn && fn.toString().match(/^\s*function (\w+)/);
  return match ? match[1] : ''
}

function isSameType (a, b) {
  return getType(a) === getType(b)
}

function getTypeIndex (type, expectedTypes) {
  if (!Array.isArray(expectedTypes)) {
    return isSameType(expectedTypes, type) ? 0 : -1
  }
  for (var i = 0, len = expectedTypes.length; i < len; i++) {
    if (isSameType(expectedTypes[i], type)) {
      return i
    }
  }
  return -1
}

function getInvalidTypeMessage (name, value, expectedTypes) {
  var message = "Invalid prop: type check failed for prop \"" + name + "\"." +
    " Expected " + (expectedTypes.map(capitalize).join(', '));
  var expectedType = expectedTypes[0];
  var receivedType = toRawType(value);
  var expectedValue = styleValue(value, expectedType);
  var receivedValue = styleValue(value, receivedType);
  // check if we need to specify expected value
  if (expectedTypes.length === 1 &&
      isExplicable(expectedType) &&
      !isBoolean(expectedType, receivedType)) {
    message += " with value " + expectedValue;
  }
  message += ", got " + receivedType + " ";
  // check if we need to specify received value
  if (isExplicable(receivedType)) {
    message += "with value " + receivedValue + ".";
  }
  return message
}

function styleValue (value, type) {
  if (type === 'String') {
    return ("\"" + value + "\"")
  } else if (type === 'Number') {
    return ("" + (Number(value)))
  } else {
    return ("" + value)
  }
}

function isExplicable (value) {
  var explicitTypes = ['string', 'number', 'boolean'];
  return explicitTypes.some(function (elem) { return value.toLowerCase() === elem; })
}

function isBoolean () {
  var args = [], len = arguments.length;
  while ( len-- ) args[ len ] = arguments[ len ];

  return args.some(function (elem) { return elem.toLowerCase() === 'boolean'; })
}

/*  */

function handleError (err, vm, info) {
  // Deactivate deps tracking while processing error handler to avoid possible infinite rendering.
  // See: https://github.com/vuejs/vuex/issues/1505
  pushTarget();
  try {
    if (vm) {
      var cur = vm;
      while ((cur = cur.$parent)) {
        var hooks = cur.$options.errorCaptured;
        if (hooks) {
          for (var i = 0; i < hooks.length; i++) {
            try {
              var capture = hooks[i].call(cur, err, vm, info) === false;
              if (capture) { return }
            } catch (e) {
              globalHandleError(e, cur, 'errorCaptured hook');
            }
          }
        }
      }
    }
    globalHandleError(err, vm, info);
  } finally {
    popTarget();
  }
}

function invokeWithErrorHandling (
  handler,
  context,
  args,
  vm,
  info
) {
  var res;
  try {
    res = args ? handler.apply(context, args) : handler.call(context);
    if (res && !res._isVue && isPromise(res) && !res._handled) {
      res.catch(function (e) { return handleError(e, vm, info + " (Promise/async)"); });
      // issue #9511
      // avoid catch triggering multiple times when nested calls
      res._handled = true;
    }
  } catch (e) {
    handleError(e, vm, info);
  }
  return res
}

function globalHandleError (err, vm, info) {
  if (config.errorHandler) {
    try {
      return config.errorHandler.call(null, err, vm, info)
    } catch (e) {
      // if the user intentionally throws the original error in the handler,
      // do not log it twice
      if (e !== err) {
        logError(e, null, 'config.errorHandler');
      }
    }
  }
  logError(err, vm, info);
}

function logError (err, vm, info) {
  if (true) {
    warn(("Error in " + info + ": \"" + (err.toString()) + "\""), vm);
  }
  /* istanbul ignore else */
  if ((inBrowser || inWeex) && typeof console !== 'undefined') {
    console.error(err);
  } else {
    throw err
  }
}

/*  */

var callbacks = [];
var pending = false;

function flushCallbacks () {
  pending = false;
  var copies = callbacks.slice(0);
  callbacks.length = 0;
  for (var i = 0; i < copies.length; i++) {
    copies[i]();
  }
}

// Here we have async deferring wrappers using microtasks.
// In 2.5 we used (macro) tasks (in combination with microtasks).
// However, it has subtle problems when state is changed right before repaint
// (e.g. #6813, out-in transitions).
// Also, using (macro) tasks in event handler would cause some weird behaviors
// that cannot be circumvented (e.g. #7109, #7153, #7546, #7834, #8109).
// So we now use microtasks everywhere, again.
// A major drawback of this tradeoff is that there are some scenarios
// where microtasks have too high a priority and fire in between supposedly
// sequential events (e.g. #4521, #6690, which have workarounds)
// or even between bubbling of the same event (#6566).
var timerFunc;

// The nextTick behavior leverages the microtask queue, which can be accessed
// via either native Promise.then or MutationObserver.
// MutationObserver has wider support, however it is seriously bugged in
// UIWebView in iOS >= 9.3.3 when triggered in touch event handlers. It
// completely stops working after triggering a few times... so, if native
// Promise is available, we will use it:
/* istanbul ignore next, $flow-disable-line */
if (typeof Promise !== 'undefined' && isNative(Promise)) {
  var p = Promise.resolve();
  timerFunc = function () {
    p.then(flushCallbacks);
    // In problematic UIWebViews, Promise.then doesn't completely break, but
    // it can get stuck in a weird state where callbacks are pushed into the
    // microtask queue but the queue isn't being flushed, until the browser
    // needs to do some other work, e.g. handle a timer. Therefore we can
    // "force" the microtask queue to be flushed by adding an empty timer.
    if (isIOS) { setTimeout(noop); }
  };
} else if (!isIE && typeof MutationObserver !== 'undefined' && (
  isNative(MutationObserver) ||
  // PhantomJS and iOS 7.x
  MutationObserver.toString() === '[object MutationObserverConstructor]'
)) {
  // Use MutationObserver where native Promise is not available,
  // e.g. PhantomJS, iOS7, Android 4.4
  // (#6466 MutationObserver is unreliable in IE11)
  var counter = 1;
  var observer = new MutationObserver(flushCallbacks);
  var textNode = document.createTextNode(String(counter));
  observer.observe(textNode, {
    characterData: true
  });
  timerFunc = function () {
    counter = (counter + 1) % 2;
    textNode.data = String(counter);
  };
} else if (typeof setImmediate !== 'undefined' && isNative(setImmediate)) {
  // Fallback to setImmediate.
  // Technically it leverages the (macro) task queue,
  // but it is still a better choice than setTimeout.
  timerFunc = function () {
    setImmediate(flushCallbacks);
  };
} else {
  // Fallback to setTimeout.
  timerFunc = function () {
    setTimeout(flushCallbacks, 0);
  };
}

function nextTick (cb, ctx) {
  var _resolve;
  callbacks.push(function () {
    if (cb) {
      try {
        cb.call(ctx);
      } catch (e) {
        handleError(e, ctx, 'nextTick');
      }
    } else if (_resolve) {
      _resolve(ctx);
    }
  });
  if (!pending) {
    pending = true;
    timerFunc();
  }
  // $flow-disable-line
  if (!cb && typeof Promise !== 'undefined') {
    return new Promise(function (resolve) {
      _resolve = resolve;
    })
  }
}

/*  */

/* not type checking this file because flow doesn't play well with Proxy */

var initProxy;

if (true) {
  var allowedGlobals = makeMap(
    'Infinity,undefined,NaN,isFinite,isNaN,' +
    'parseFloat,parseInt,decodeURI,decodeURIComponent,encodeURI,encodeURIComponent,' +
    'Math,Number,Date,Array,Object,Boolean,String,RegExp,Map,Set,JSON,Intl,' +
    'require' // for Webpack/Browserify
  );

  var warnNonPresent = function (target, key) {
    warn(
      "Property or method \"" + key + "\" is not defined on the instance but " +
      'referenced during render. Make sure that this property is reactive, ' +
      'either in the data option, or for class-based components, by ' +
      'initializing the property. ' +
      'See: https://vuejs.org/v2/guide/reactivity.html#Declaring-Reactive-Properties.',
      target
    );
  };

  var warnReservedPrefix = function (target, key) {
    warn(
      "Property \"" + key + "\" must be accessed with \"$data." + key + "\" because " +
      'properties starting with "$" or "_" are not proxied in the Vue instance to ' +
      'prevent conflicts with Vue internals. ' +
      'See: https://vuejs.org/v2/api/#data',
      target
    );
  };

  var hasProxy =
    typeof Proxy !== 'undefined' && isNative(Proxy);

  if (hasProxy) {
    var isBuiltInModifier = makeMap('stop,prevent,self,ctrl,shift,alt,meta,exact');
    config.keyCodes = new Proxy(config.keyCodes, {
      set: function set (target, key, value) {
        if (isBuiltInModifier(key)) {
          warn(("Avoid overwriting built-in modifier in config.keyCodes: ." + key));
          return false
        } else {
          target[key] = value;
          return true
        }
      }
    });
  }

  var hasHandler = {
    has: function has (target, key) {
      var has = key in target;
      var isAllowed = allowedGlobals(key) ||
        (typeof key === 'string' && key.charAt(0) === '_' && !(key in target.$data));
      if (!has && !isAllowed) {
        if (key in target.$data) { warnReservedPrefix(target, key); }
        else { warnNonPresent(target, key); }
      }
      return has || !isAllowed
    }
  };

  var getHandler = {
    get: function get (target, key) {
      if (typeof key === 'string' && !(key in target)) {
        if (key in target.$data) { warnReservedPrefix(target, key); }
        else { warnNonPresent(target, key); }
      }
      return target[key]
    }
  };

  initProxy = function initProxy (vm) {
    if (hasProxy) {
      // determine which proxy handler to use
      var options = vm.$options;
      var handlers = options.render && options.render._withStripped
        ? getHandler
        : hasHandler;
      vm._renderProxy = new Proxy(vm, handlers);
    } else {
      vm._renderProxy = vm;
    }
  };
}

/*  */

var seenObjects = new _Set();

/**
 * Recursively traverse an object to evoke all converted
 * getters, so that every nested property inside the object
 * is collected as a "deep" dependency.
 */
function traverse (val) {
  _traverse(val, seenObjects);
  seenObjects.clear();
}

function _traverse (val, seen) {
  var i, keys;
  var isA = Array.isArray(val);
  if ((!isA && !isObject(val)) || Object.isFrozen(val) || val instanceof VNode) {
    return
  }
  if (val.__ob__) {
    var depId = val.__ob__.dep.id;
    if (seen.has(depId)) {
      return
    }
    seen.add(depId);
  }
  if (isA) {
    i = val.length;
    while (i--) { _traverse(val[i], seen); }
  } else {
    keys = Object.keys(val);
    i = keys.length;
    while (i--) { _traverse(val[keys[i]], seen); }
  }
}

var mark;
var measure;

if (true) {
  var perf = inBrowser && window.performance;
  /* istanbul ignore if */
  if (
    perf &&
    perf.mark &&
    perf.measure &&
    perf.clearMarks &&
    perf.clearMeasures
  ) {
    mark = function (tag) { return perf.mark(tag); };
    measure = function (name, startTag, endTag) {
      perf.measure(name, startTag, endTag);
      perf.clearMarks(startTag);
      perf.clearMarks(endTag);
      // perf.clearMeasures(name)
    };
  }
}

/*  */

var normalizeEvent = cached(function (name) {
  var passive = name.charAt(0) === '&';
  name = passive ? name.slice(1) : name;
  var once$$1 = name.charAt(0) === '~'; // Prefixed last, checked first
  name = once$$1 ? name.slice(1) : name;
  var capture = name.charAt(0) === '!';
  name = capture ? name.slice(1) : name;
  return {
    name: name,
    once: once$$1,
    capture: capture,
    passive: passive
  }
});

function createFnInvoker (fns, vm) {
  function invoker () {
    var arguments$1 = arguments;

    var fns = invoker.fns;
    if (Array.isArray(fns)) {
      var cloned = fns.slice();
      for (var i = 0; i < cloned.length; i++) {
        invokeWithErrorHandling(cloned[i], null, arguments$1, vm, "v-on handler");
      }
    } else {
      // return handler return value for single handlers
      return invokeWithErrorHandling(fns, null, arguments, vm, "v-on handler")
    }
  }
  invoker.fns = fns;
  return invoker
}

function updateListeners (
  on,
  oldOn,
  add,
  remove$$1,
  createOnceHandler,
  vm
) {
  var name, def$$1, cur, old, event;
  for (name in on) {
    def$$1 = cur = on[name];
    old = oldOn[name];
    event = normalizeEvent(name);
    if (isUndef(cur)) {
       true && warn(
        "Invalid handler for event \"" + (event.name) + "\": got " + String(cur),
        vm
      );
    } else if (isUndef(old)) {
      if (isUndef(cur.fns)) {
        cur = on[name] = createFnInvoker(cur, vm);
      }
      if (isTrue(event.once)) {
        cur = on[name] = createOnceHandler(event.name, cur, event.capture);
      }
      add(event.name, cur, event.capture, event.passive, event.params);
    } else if (cur !== old) {
      old.fns = cur;
      on[name] = old;
    }
  }
  for (name in oldOn) {
    if (isUndef(on[name])) {
      event = normalizeEvent(name);
      remove$$1(event.name, oldOn[name], event.capture);
    }
  }
}

/*  */

/*  */

// fixed by xxxxxx (mp properties)
function extractPropertiesFromVNodeData(data, Ctor, res, context) {
  var propOptions = Ctor.options.mpOptions && Ctor.options.mpOptions.properties;
  if (isUndef(propOptions)) {
    return res
  }
  var externalClasses = Ctor.options.mpOptions.externalClasses || [];
  var attrs = data.attrs;
  var props = data.props;
  if (isDef(attrs) || isDef(props)) {
    for (var key in propOptions) {
      var altKey = hyphenate(key);
      var result = checkProp(res, props, key, altKey, true) ||
          checkProp(res, attrs, key, altKey, false);
      // externalClass
      if (
        result &&
        res[key] &&
        externalClasses.indexOf(altKey) !== -1 &&
        context[camelize(res[key])]
      ) {
        // 赋值 externalClass 真正的值(模板里 externalClass 的值可能是字符串)
        res[key] = context[camelize(res[key])];
      }
    }
  }
  return res
}

function extractPropsFromVNodeData (
  data,
  Ctor,
  tag,
  context// fixed by xxxxxx
) {
  // we are only extracting raw values here.
  // validation and default values are handled in the child
  // component itself.
  var propOptions = Ctor.options.props;
  if (isUndef(propOptions)) {
    // fixed by xxxxxx
    return extractPropertiesFromVNodeData(data, Ctor, {}, context)
  }
  var res = {};
  var attrs = data.attrs;
  var props = data.props;
  if (isDef(attrs) || isDef(props)) {
    for (var key in propOptions) {
      var altKey = hyphenate(key);
      if (true) {
        var keyInLowerCase = key.toLowerCase();
        if (
          key !== keyInLowerCase &&
          attrs && hasOwn(attrs, keyInLowerCase)
        ) {
          tip(
            "Prop \"" + keyInLowerCase + "\" is passed to component " +
            (formatComponentName(tag || Ctor)) + ", but the declared prop name is" +
            " \"" + key + "\". " +
            "Note that HTML attributes are case-insensitive and camelCased " +
            "props need to use their kebab-case equivalents when using in-DOM " +
            "templates. You should probably use \"" + altKey + "\" instead of \"" + key + "\"."
          );
        }
      }
      checkProp(res, props, key, altKey, true) ||
      checkProp(res, attrs, key, altKey, false);
    }
  }
  // fixed by xxxxxx
  return extractPropertiesFromVNodeData(data, Ctor, res, context)
}

function checkProp (
  res,
  hash,
  key,
  altKey,
  preserve
) {
  if (isDef(hash)) {
    if (hasOwn(hash, key)) {
      res[key] = hash[key];
      if (!preserve) {
        delete hash[key];
      }
      return true
    } else if (hasOwn(hash, altKey)) {
      res[key] = hash[altKey];
      if (!preserve) {
        delete hash[altKey];
      }
      return true
    }
  }
  return false
}

/*  */

// The template compiler attempts to minimize the need for normalization by
// statically analyzing the template at compile time.
//
// For plain HTML markup, normalization can be completely skipped because the
// generated render function is guaranteed to return Array<VNode>. There are
// two cases where extra normalization is needed:

// 1. When the children contains components - because a functional component
// may return an Array instead of a single root. In this case, just a simple
// normalization is needed - if any child is an Array, we flatten the whole
// thing with Array.prototype.concat. It is guaranteed to be only 1-level deep
// because functional components already normalize their own children.
function simpleNormalizeChildren (children) {
  for (var i = 0; i < children.length; i++) {
    if (Array.isArray(children[i])) {
      return Array.prototype.concat.apply([], children)
    }
  }
  return children
}

// 2. When the children contains constructs that always generated nested Arrays,
// e.g. <template>, <slot>, v-for, or when the children is provided by user
// with hand-written render functions / JSX. In such cases a full normalization
// is needed to cater to all possible types of children values.
function normalizeChildren (children) {
  return isPrimitive(children)
    ? [createTextVNode(children)]
    : Array.isArray(children)
      ? normalizeArrayChildren(children)
      : undefined
}

function isTextNode (node) {
  return isDef(node) && isDef(node.text) && isFalse(node.isComment)
}

function normalizeArrayChildren (children, nestedIndex) {
  var res = [];
  var i, c, lastIndex, last;
  for (i = 0; i < children.length; i++) {
    c = children[i];
    if (isUndef(c) || typeof c === 'boolean') { continue }
    lastIndex = res.length - 1;
    last = res[lastIndex];
    //  nested
    if (Array.isArray(c)) {
      if (c.length > 0) {
        c = normalizeArrayChildren(c, ((nestedIndex || '') + "_" + i));
        // merge adjacent text nodes
        if (isTextNode(c[0]) && isTextNode(last)) {
          res[lastIndex] = createTextVNode(last.text + (c[0]).text);
          c.shift();
        }
        res.push.apply(res, c);
      }
    } else if (isPrimitive(c)) {
      if (isTextNode(last)) {
        // merge adjacent text nodes
        // this is necessary for SSR hydration because text nodes are
        // essentially merged when rendered to HTML strings
        res[lastIndex] = createTextVNode(last.text + c);
      } else if (c !== '') {
        // convert primitive to vnode
        res.push(createTextVNode(c));
      }
    } else {
      if (isTextNode(c) && isTextNode(last)) {
        // merge adjacent text nodes
        res[lastIndex] = createTextVNode(last.text + c.text);
      } else {
        // default key for nested array children (likely generated by v-for)
        if (isTrue(children._isVList) &&
          isDef(c.tag) &&
          isUndef(c.key) &&
          isDef(nestedIndex)) {
          c.key = "__vlist" + nestedIndex + "_" + i + "__";
        }
        res.push(c);
      }
    }
  }
  return res
}

/*  */

function initProvide (vm) {
  var provide = vm.$options.provide;
  if (provide) {
    vm._provided = typeof provide === 'function'
      ? provide.call(vm)
      : provide;
  }
}

function initInjections (vm) {
  var result = resolveInject(vm.$options.inject, vm);
  if (result) {
    toggleObserving(false);
    Object.keys(result).forEach(function (key) {
      /* istanbul ignore else */
      if (true) {
        defineReactive$$1(vm, key, result[key], function () {
          warn(
            "Avoid mutating an injected value directly since the changes will be " +
            "overwritten whenever the provided component re-renders. " +
            "injection being mutated: \"" + key + "\"",
            vm
          );
        });
      } else {}
    });
    toggleObserving(true);
  }
}

function resolveInject (inject, vm) {
  if (inject) {
    // inject is :any because flow is not smart enough to figure out cached
    var result = Object.create(null);
    var keys = hasSymbol
      ? Reflect.ownKeys(inject)
      : Object.keys(inject);

    for (var i = 0; i < keys.length; i++) {
      var key = keys[i];
      // #6574 in case the inject object is observed...
      if (key === '__ob__') { continue }
      var provideKey = inject[key].from;
      var source = vm;
      while (source) {
        if (source._provided && hasOwn(source._provided, provideKey)) {
          result[key] = source._provided[provideKey];
          break
        }
        source = source.$parent;
      }
      if (!source) {
        if ('default' in inject[key]) {
          var provideDefault = inject[key].default;
          result[key] = typeof provideDefault === 'function'
            ? provideDefault.call(vm)
            : provideDefault;
        } else if (true) {
          warn(("Injection \"" + key + "\" not found"), vm);
        }
      }
    }
    return result
  }
}

/*  */



/**
 * Runtime helper for resolving raw children VNodes into a slot object.
 */
function resolveSlots (
  children,
  context
) {
  if (!children || !children.length) {
    return {}
  }
  var slots = {};
  for (var i = 0, l = children.length; i < l; i++) {
    var child = children[i];
    var data = child.data;
    // remove slot attribute if the node is resolved as a Vue slot node
    if (data && data.attrs && data.attrs.slot) {
      delete data.attrs.slot;
    }
    // named slots should only be respected if the vnode was rendered in the
    // same context.
    if ((child.context === context || child.fnContext === context) &&
      data && data.slot != null
    ) {
      var name = data.slot;
      var slot = (slots[name] || (slots[name] = []));
      if (child.tag === 'template') {
        slot.push.apply(slot, child.children || []);
      } else {
        slot.push(child);
      }
    } else {
      // fixed by xxxxxx 临时 hack 掉 uni-app 中的异步 name slot page
      if(child.asyncMeta && child.asyncMeta.data && child.asyncMeta.data.slot === 'page'){
        (slots['page'] || (slots['page'] = [])).push(child);
      }else{
        (slots.default || (slots.default = [])).push(child);
      }
    }
  }
  // ignore slots that contains only whitespace
  for (var name$1 in slots) {
    if (slots[name$1].every(isWhitespace)) {
      delete slots[name$1];
    }
  }
  return slots
}

function isWhitespace (node) {
  return (node.isComment && !node.asyncFactory) || node.text === ' '
}

/*  */

function normalizeScopedSlots (
  slots,
  normalSlots,
  prevSlots
) {
  var res;
  var hasNormalSlots = Object.keys(normalSlots).length > 0;
  var isStable = slots ? !!slots.$stable : !hasNormalSlots;
  var key = slots && slots.$key;
  if (!slots) {
    res = {};
  } else if (slots._normalized) {
    // fast path 1: child component re-render only, parent did not change
    return slots._normalized
  } else if (
    isStable &&
    prevSlots &&
    prevSlots !== emptyObject &&
    key === prevSlots.$key &&
    !hasNormalSlots &&
    !prevSlots.$hasNormal
  ) {
    // fast path 2: stable scoped slots w/ no normal slots to proxy,
    // only need to normalize once
    return prevSlots
  } else {
    res = {};
    for (var key$1 in slots) {
      if (slots[key$1] && key$1[0] !== '$') {
        res[key$1] = normalizeScopedSlot(normalSlots, key$1, slots[key$1]);
      }
    }
  }
  // expose normal slots on scopedSlots
  for (var key$2 in normalSlots) {
    if (!(key$2 in res)) {
      res[key$2] = proxyNormalSlot(normalSlots, key$2);
    }
  }
  // avoriaz seems to mock a non-extensible $scopedSlots object
  // and when that is passed down this would cause an error
  if (slots && Object.isExtensible(slots)) {
    (slots)._normalized = res;
  }
  def(res, '$stable', isStable);
  def(res, '$key', key);
  def(res, '$hasNormal', hasNormalSlots);
  return res
}

function normalizeScopedSlot(normalSlots, key, fn) {
  var normalized = function () {
    var res = arguments.length ? fn.apply(null, arguments) : fn({});
    res = res && typeof res === 'object' && !Array.isArray(res)
      ? [res] // single vnode
      : normalizeChildren(res);
    return res && (
      res.length === 0 ||
      (res.length === 1 && res[0].isComment) // #9658
    ) ? undefined
      : res
  };
  // this is a slot using the new v-slot syntax without scope. although it is
  // compiled as a scoped slot, render fn users would expect it to be present
  // on this.$slots because the usage is semantically a normal slot.
  if (fn.proxy) {
    Object.defineProperty(normalSlots, key, {
      get: normalized,
      enumerable: true,
      configurable: true
    });
  }
  return normalized
}

function proxyNormalSlot(slots, key) {
  return function () { return slots[key]; }
}

/*  */

/**
 * Runtime helper for rendering v-for lists.
 */
function renderList (
  val,
  render
) {
  var ret, i, l, keys, key;
  if (Array.isArray(val) || typeof val === 'string') {
    ret = new Array(val.length);
    for (i = 0, l = val.length; i < l; i++) {
      ret[i] = render(val[i], i, i, i); // fixed by xxxxxx
    }
  } else if (typeof val === 'number') {
    ret = new Array(val);
    for (i = 0; i < val; i++) {
      ret[i] = render(i + 1, i, i, i); // fixed by xxxxxx
    }
  } else if (isObject(val)) {
    if (hasSymbol && val[Symbol.iterator]) {
      ret = [];
      var iterator = val[Symbol.iterator]();
      var result = iterator.next();
      while (!result.done) {
        ret.push(render(result.value, ret.length, i, i++)); // fixed by xxxxxx
        result = iterator.next();
      }
    } else {
      keys = Object.keys(val);
      ret = new Array(keys.length);
      for (i = 0, l = keys.length; i < l; i++) {
        key = keys[i];
        ret[i] = render(val[key], key, i, i); // fixed by xxxxxx
      }
    }
  }
  if (!isDef(ret)) {
    ret = [];
  }
  (ret)._isVList = true;
  return ret
}

/*  */

/**
 * Runtime helper for rendering <slot>
 */
function renderSlot (
  name,
  fallback,
  props,
  bindObject
) {
  var scopedSlotFn = this.$scopedSlots[name];
  var nodes;
  if (scopedSlotFn) { // scoped slot
    props = props || {};
    if (bindObject) {
      if ( true && !isObject(bindObject)) {
        warn(
          'slot v-bind without argument expects an Object',
          this
        );
      }
      props = extend(extend({}, bindObject), props);
    }
    // fixed by xxxxxx app-plus scopedSlot
    nodes = scopedSlotFn(props, this, props._i) || fallback;
  } else {
    nodes = this.$slots[name] || fallback;
  }

  var target = props && props.slot;
  if (target) {
    return this.$createElement('template', { slot: target }, nodes)
  } else {
    return nodes
  }
}

/*  */

/**
 * Runtime helper for resolving filters
 */
function resolveFilter (id) {
  return resolveAsset(this.$options, 'filters', id, true) || identity
}

/*  */

function isKeyNotMatch (expect, actual) {
  if (Array.isArray(expect)) {
    return expect.indexOf(actual) === -1
  } else {
    return expect !== actual
  }
}

/**
 * Runtime helper for checking keyCodes from config.
 * exposed as Vue.prototype._k
 * passing in eventKeyName as last argument separately for backwards compat
 */
function checkKeyCodes (
  eventKeyCode,
  key,
  builtInKeyCode,
  eventKeyName,
  builtInKeyName
) {
  var mappedKeyCode = config.keyCodes[key] || builtInKeyCode;
  if (builtInKeyName && eventKeyName && !config.keyCodes[key]) {
    return isKeyNotMatch(builtInKeyName, eventKeyName)
  } else if (mappedKeyCode) {
    return isKeyNotMatch(mappedKeyCode, eventKeyCode)
  } else if (eventKeyName) {
    return hyphenate(eventKeyName) !== key
  }
}

/*  */

/**
 * Runtime helper for merging v-bind="object" into a VNode's data.
 */
function bindObjectProps (
  data,
  tag,
  value,
  asProp,
  isSync
) {
  if (value) {
    if (!isObject(value)) {
       true && warn(
        'v-bind without argument expects an Object or Array value',
        this
      );
    } else {
      if (Array.isArray(value)) {
        value = toObject(value);
      }
      var hash;
      var loop = function ( key ) {
        if (
          key === 'class' ||
          key === 'style' ||
          isReservedAttribute(key)
        ) {
          hash = data;
        } else {
          var type = data.attrs && data.attrs.type;
          hash = asProp || config.mustUseProp(tag, type, key)
            ? data.domProps || (data.domProps = {})
            : data.attrs || (data.attrs = {});
        }
        var camelizedKey = camelize(key);
        var hyphenatedKey = hyphenate(key);
        if (!(camelizedKey in hash) && !(hyphenatedKey in hash)) {
          hash[key] = value[key];

          if (isSync) {
            var on = data.on || (data.on = {});
            on[("update:" + key)] = function ($event) {
              value[key] = $event;
            };
          }
        }
      };

      for (var key in value) loop( key );
    }
  }
  return data
}

/*  */

/**
 * Runtime helper for rendering static trees.
 */
function renderStatic (
  index,
  isInFor
) {
  var cached = this._staticTrees || (this._staticTrees = []);
  var tree = cached[index];
  // if has already-rendered static tree and not inside v-for,
  // we can reuse the same tree.
  if (tree && !isInFor) {
    return tree
  }
  // otherwise, render a fresh tree.
  tree = cached[index] = this.$options.staticRenderFns[index].call(
    this._renderProxy,
    null,
    this // for render fns generated for functional component templates
  );
  markStatic(tree, ("__static__" + index), false);
  return tree
}

/**
 * Runtime helper for v-once.
 * Effectively it means marking the node as static with a unique key.
 */
function markOnce (
  tree,
  index,
  key
) {
  markStatic(tree, ("__once__" + index + (key ? ("_" + key) : "")), true);
  return tree
}

function markStatic (
  tree,
  key,
  isOnce
) {
  if (Array.isArray(tree)) {
    for (var i = 0; i < tree.length; i++) {
      if (tree[i] && typeof tree[i] !== 'string') {
        markStaticNode(tree[i], (key + "_" + i), isOnce);
      }
    }
  } else {
    markStaticNode(tree, key, isOnce);
  }
}

function markStaticNode (node, key, isOnce) {
  node.isStatic = true;
  node.key = key;
  node.isOnce = isOnce;
}

/*  */

function bindObjectListeners (data, value) {
  if (value) {
    if (!isPlainObject(value)) {
       true && warn(
        'v-on without argument expects an Object value',
        this
      );
    } else {
      var on = data.on = data.on ? extend({}, data.on) : {};
      for (var key in value) {
        var existing = on[key];
        var ours = value[key];
        on[key] = existing ? [].concat(existing, ours) : ours;
      }
    }
  }
  return data
}

/*  */

function resolveScopedSlots (
  fns, // see flow/vnode
  res,
  // the following are added in 2.6
  hasDynamicKeys,
  contentHashKey
) {
  res = res || { $stable: !hasDynamicKeys };
  for (var i = 0; i < fns.length; i++) {
    var slot = fns[i];
    if (Array.isArray(slot)) {
      resolveScopedSlots(slot, res, hasDynamicKeys);
    } else if (slot) {
      // marker for reverse proxying v-slot without scope on this.$slots
      if (slot.proxy) {
        slot.fn.proxy = true;
      }
      res[slot.key] = slot.fn;
    }
  }
  if (contentHashKey) {
    (res).$key = contentHashKey;
  }
  return res
}

/*  */

function bindDynamicKeys (baseObj, values) {
  for (var i = 0; i < values.length; i += 2) {
    var key = values[i];
    if (typeof key === 'string' && key) {
      baseObj[values[i]] = values[i + 1];
    } else if ( true && key !== '' && key !== null) {
      // null is a special value for explicitly removing a binding
      warn(
        ("Invalid value for dynamic directive argument (expected string or null): " + key),
        this
      );
    }
  }
  return baseObj
}

// helper to dynamically append modifier runtime markers to event names.
// ensure only append when value is already string, otherwise it will be cast
// to string and cause the type check to miss.
function prependModifier (value, symbol) {
  return typeof value === 'string' ? symbol + value : value
}

/*  */

function installRenderHelpers (target) {
  target._o = markOnce;
  target._n = toNumber;
  target._s = toString;
  target._l = renderList;
  target._t = renderSlot;
  target._q = looseEqual;
  target._i = looseIndexOf;
  target._m = renderStatic;
  target._f = resolveFilter;
  target._k = checkKeyCodes;
  target._b = bindObjectProps;
  target._v = createTextVNode;
  target._e = createEmptyVNode;
  target._u = resolveScopedSlots;
  target._g = bindObjectListeners;
  target._d = bindDynamicKeys;
  target._p = prependModifier;
}

/*  */

function FunctionalRenderContext (
  data,
  props,
  children,
  parent,
  Ctor
) {
  var this$1 = this;

  var options = Ctor.options;
  // ensure the createElement function in functional components
  // gets a unique context - this is necessary for correct named slot check
  var contextVm;
  if (hasOwn(parent, '_uid')) {
    contextVm = Object.create(parent);
    // $flow-disable-line
    contextVm._original = parent;
  } else {
    // the context vm passed in is a functional context as well.
    // in this case we want to make sure we are able to get a hold to the
    // real context instance.
    contextVm = parent;
    // $flow-disable-line
    parent = parent._original;
  }
  var isCompiled = isTrue(options._compiled);
  var needNormalization = !isCompiled;

  this.data = data;
  this.props = props;
  this.children = children;
  this.parent = parent;
  this.listeners = data.on || emptyObject;
  this.injections = resolveInject(options.inject, parent);
  this.slots = function () {
    if (!this$1.$slots) {
      normalizeScopedSlots(
        data.scopedSlots,
        this$1.$slots = resolveSlots(children, parent)
      );
    }
    return this$1.$slots
  };

  Object.defineProperty(this, 'scopedSlots', ({
    enumerable: true,
    get: function get () {
      return normalizeScopedSlots(data.scopedSlots, this.slots())
    }
  }));

  // support for compiled functional template
  if (isCompiled) {
    // exposing $options for renderStatic()
    this.$options = options;
    // pre-resolve slots for renderSlot()
    this.$slots = this.slots();
    this.$scopedSlots = normalizeScopedSlots(data.scopedSlots, this.$slots);
  }

  if (options._scopeId) {
    this._c = function (a, b, c, d) {
      var vnode = createElement(contextVm, a, b, c, d, needNormalization);
      if (vnode && !Array.isArray(vnode)) {
        vnode.fnScopeId = options._scopeId;
        vnode.fnContext = parent;
      }
      return vnode
    };
  } else {
    this._c = function (a, b, c, d) { return createElement(contextVm, a, b, c, d, needNormalization); };
  }
}

installRenderHelpers(FunctionalRenderContext.prototype);

function createFunctionalComponent (
  Ctor,
  propsData,
  data,
  contextVm,
  children
) {
  var options = Ctor.options;
  var props = {};
  var propOptions = options.props;
  if (isDef(propOptions)) {
    for (var key in propOptions) {
      props[key] = validateProp(key, propOptions, propsData || emptyObject);
    }
  } else {
    if (isDef(data.attrs)) { mergeProps(props, data.attrs); }
    if (isDef(data.props)) { mergeProps(props, data.props); }
  }

  var renderContext = new FunctionalRenderContext(
    data,
    props,
    children,
    contextVm,
    Ctor
  );

  var vnode = options.render.call(null, renderContext._c, renderContext);

  if (vnode instanceof VNode) {
    return cloneAndMarkFunctionalResult(vnode, data, renderContext.parent, options, renderContext)
  } else if (Array.isArray(vnode)) {
    var vnodes = normalizeChildren(vnode) || [];
    var res = new Array(vnodes.length);
    for (var i = 0; i < vnodes.length; i++) {
      res[i] = cloneAndMarkFunctionalResult(vnodes[i], data, renderContext.parent, options, renderContext);
    }
    return res
  }
}

function cloneAndMarkFunctionalResult (vnode, data, contextVm, options, renderContext) {
  // #7817 clone node before setting fnContext, otherwise if the node is reused
  // (e.g. it was from a cached normal slot) the fnContext causes named slots
  // that should not be matched to match.
  var clone = cloneVNode(vnode);
  clone.fnContext = contextVm;
  clone.fnOptions = options;
  if (true) {
    (clone.devtoolsMeta = clone.devtoolsMeta || {}).renderContext = renderContext;
  }
  if (data.slot) {
    (clone.data || (clone.data = {})).slot = data.slot;
  }
  return clone
}

function mergeProps (to, from) {
  for (var key in from) {
    to[camelize(key)] = from[key];
  }
}

/*  */

/*  */

/*  */

/*  */

// inline hooks to be invoked on component VNodes during patch
var componentVNodeHooks = {
  init: function init (vnode, hydrating) {
    if (
      vnode.componentInstance &&
      !vnode.componentInstance._isDestroyed &&
      vnode.data.keepAlive
    ) {
      // kept-alive components, treat as a patch
      var mountedNode = vnode; // work around flow
      componentVNodeHooks.prepatch(mountedNode, mountedNode);
    } else {
      var child = vnode.componentInstance = createComponentInstanceForVnode(
        vnode,
        activeInstance
      );
      child.$mount(hydrating ? vnode.elm : undefined, hydrating);
    }
  },

  prepatch: function prepatch (oldVnode, vnode) {
    var options = vnode.componentOptions;
    var child = vnode.componentInstance = oldVnode.componentInstance;
    updateChildComponent(
      child,
      options.propsData, // updated props
      options.listeners, // updated listeners
      vnode, // new parent vnode
      options.children // new children
    );
  },

  insert: function insert (vnode) {
    var context = vnode.context;
    var componentInstance = vnode.componentInstance;
    if (!componentInstance._isMounted) {
      callHook(componentInstance, 'onServiceCreated');
      callHook(componentInstance, 'onServiceAttached');
      componentInstance._isMounted = true;
      callHook(componentInstance, 'mounted');
    }
    if (vnode.data.keepAlive) {
      if (context._isMounted) {
        // vue-router#1212
        // During updates, a kept-alive component's child components may
        // change, so directly walking the tree here may call activated hooks
        // on incorrect children. Instead we push them into a queue which will
        // be processed after the whole patch process ended.
        queueActivatedComponent(componentInstance);
      } else {
        activateChildComponent(componentInstance, true /* direct */);
      }
    }
  },

  destroy: function destroy (vnode) {
    var componentInstance = vnode.componentInstance;
    if (!componentInstance._isDestroyed) {
      if (!vnode.data.keepAlive) {
        componentInstance.$destroy();
      } else {
        deactivateChildComponent(componentInstance, true /* direct */);
      }
    }
  }
};

var hooksToMerge = Object.keys(componentVNodeHooks);

function createComponent (
  Ctor,
  data,
  context,
  children,
  tag
) {
  if (isUndef(Ctor)) {
    return
  }

  var baseCtor = context.$options._base;

  // plain options object: turn it into a constructor
  if (isObject(Ctor)) {
    Ctor = baseCtor.extend(Ctor);
  }

  // if at this stage it's not a constructor or an async component factory,
  // reject.
  if (typeof Ctor !== 'function') {
    if (true) {
      warn(("Invalid Component definition: " + (String(Ctor))), context);
    }
    return
  }

  // async component
  var asyncFactory;
  if (isUndef(Ctor.cid)) {
    asyncFactory = Ctor;
    Ctor = resolveAsyncComponent(asyncFactory, baseCtor);
    if (Ctor === undefined) {
      // return a placeholder node for async component, which is rendered
      // as a comment node but preserves all the raw information for the node.
      // the information will be used for async server-rendering and hydration.
      return createAsyncPlaceholder(
        asyncFactory,
        data,
        context,
        children,
        tag
      )
    }
  }

  data = data || {};

  // resolve constructor options in case global mixins are applied after
  // component constructor creation
  resolveConstructorOptions(Ctor);

  // transform component v-model data into props & events
  if (isDef(data.model)) {
    transformModel(Ctor.options, data);
  }

  // extract props
  var propsData = extractPropsFromVNodeData(data, Ctor, tag, context); // fixed by xxxxxx

  // functional component
  if (isTrue(Ctor.options.functional)) {
    return createFunctionalComponent(Ctor, propsData, data, context, children)
  }

  // extract listeners, since these needs to be treated as
  // child component listeners instead of DOM listeners
  var listeners = data.on;
  // replace with listeners with .native modifier
  // so it gets processed during parent component patch.
  data.on = data.nativeOn;

  if (isTrue(Ctor.options.abstract)) {
    // abstract components do not keep anything
    // other than props & listeners & slot

    // work around flow
    var slot = data.slot;
    data = {};
    if (slot) {
      data.slot = slot;
    }
  }

  // install component management hooks onto the placeholder node
  installComponentHooks(data);

  // return a placeholder vnode
  var name = Ctor.options.name || tag;
  var vnode = new VNode(
    ("vue-component-" + (Ctor.cid) + (name ? ("-" + name) : '')),
    data, undefined, undefined, undefined, context,
    { Ctor: Ctor, propsData: propsData, listeners: listeners, tag: tag, children: children },
    asyncFactory
  );

  return vnode
}

function createComponentInstanceForVnode (
  vnode, // we know it's MountedComponentVNode but flow doesn't
  parent // activeInstance in lifecycle state
) {
  var options = {
    _isComponent: true,
    _parentVnode: vnode,
    parent: parent
  };
  // check inline-template render functions
  var inlineTemplate = vnode.data.inlineTemplate;
  if (isDef(inlineTemplate)) {
    options.render = inlineTemplate.render;
    options.staticRenderFns = inlineTemplate.staticRenderFns;
  }
  return new vnode.componentOptions.Ctor(options)
}

function installComponentHooks (data) {
  var hooks = data.hook || (data.hook = {});
  for (var i = 0; i < hooksToMerge.length; i++) {
    var key = hooksToMerge[i];
    var existing = hooks[key];
    var toMerge = componentVNodeHooks[key];
    if (existing !== toMerge && !(existing && existing._merged)) {
      hooks[key] = existing ? mergeHook$1(toMerge, existing) : toMerge;
    }
  }
}

function mergeHook$1 (f1, f2) {
  var merged = function (a, b) {
    // flow complains about extra args which is why we use any
    f1(a, b);
    f2(a, b);
  };
  merged._merged = true;
  return merged
}

// transform component v-model info (value and callback) into
// prop and event handler respectively.
function transformModel (options, data) {
  var prop = (options.model && options.model.prop) || 'value';
  var event = (options.model && options.model.event) || 'input'
  ;(data.attrs || (data.attrs = {}))[prop] = data.model.value;
  var on = data.on || (data.on = {});
  var existing = on[event];
  var callback = data.model.callback;
  if (isDef(existing)) {
    if (
      Array.isArray(existing)
        ? existing.indexOf(callback) === -1
        : existing !== callback
    ) {
      on[event] = [callback].concat(existing);
    }
  } else {
    on[event] = callback;
  }
}

/*  */

var SIMPLE_NORMALIZE = 1;
var ALWAYS_NORMALIZE = 2;

// wrapper function for providing a more flexible interface
// without getting yelled at by flow
function createElement (
  context,
  tag,
  data,
  children,
  normalizationType,
  alwaysNormalize
) {
  if (Array.isArray(data) || isPrimitive(data)) {
    normalizationType = children;
    children = data;
    data = undefined;
  }
  if (isTrue(alwaysNormalize)) {
    normalizationType = ALWAYS_NORMALIZE;
  }
  return _createElement(context, tag, data, children, normalizationType)
}

function _createElement (
  context,
  tag,
  data,
  children,
  normalizationType
) {
  if (isDef(data) && isDef((data).__ob__)) {
     true && warn(
      "Avoid using observed data object as vnode data: " + (JSON.stringify(data)) + "\n" +
      'Always create fresh vnode data objects in each render!',
      context
    );
    return createEmptyVNode()
  }
  // object syntax in v-bind
  if (isDef(data) && isDef(data.is)) {
    tag = data.is;
  }
  if (!tag) {
    // in case of component :is set to falsy value
    return createEmptyVNode()
  }
  // warn against non-primitive key
  if ( true &&
    isDef(data) && isDef(data.key) && !isPrimitive(data.key)
  ) {
    {
      warn(
        'Avoid using non-primitive value as key, ' +
        'use string/number value instead.',
        context
      );
    }
  }
  // support single function children as default scoped slot
  if (Array.isArray(children) &&
    typeof children[0] === 'function'
  ) {
    data = data || {};
    data.scopedSlots = { default: children[0] };
    children.length = 0;
  }
  if (normalizationType === ALWAYS_NORMALIZE) {
    children = normalizeChildren(children);
  } else if (normalizationType === SIMPLE_NORMALIZE) {
    children = simpleNormalizeChildren(children);
  }
  var vnode, ns;
  if (typeof tag === 'string') {
    var Ctor;
    ns = (context.$vnode && context.$vnode.ns) || config.getTagNamespace(tag);
    if (config.isReservedTag(tag)) {
      // platform built-in elements
      if ( true && isDef(data) && isDef(data.nativeOn)) {
        warn(
          ("The .native modifier for v-on is only valid on components but it was used on <" + tag + ">."),
          context
        );
      }
      vnode = new VNode(
        config.parsePlatformTagName(tag), data, children,
        undefined, undefined, context
      );
    } else if ((!data || !data.pre) && isDef(Ctor = resolveAsset(context.$options, 'components', tag))) {
      // component
      vnode = createComponent(Ctor, data, context, children, tag);
    } else {
      // unknown or unlisted namespaced elements
      // check at runtime because it may get assigned a namespace when its
      // parent normalizes children
      vnode = new VNode(
        tag, data, children,
        undefined, undefined, context
      );
    }
  } else {
    // direct component options / constructor
    vnode = createComponent(tag, data, context, children);
  }
  if (Array.isArray(vnode)) {
    return vnode
  } else if (isDef(vnode)) {
    if (isDef(ns)) { applyNS(vnode, ns); }
    if (isDef(data)) { registerDeepBindings(data); }
    return vnode
  } else {
    return createEmptyVNode()
  }
}

function applyNS (vnode, ns, force) {
  vnode.ns = ns;
  if (vnode.tag === 'foreignObject') {
    // use default namespace inside foreignObject
    ns = undefined;
    force = true;
  }
  if (isDef(vnode.children)) {
    for (var i = 0, l = vnode.children.length; i < l; i++) {
      var child = vnode.children[i];
      if (isDef(child.tag) && (
        isUndef(child.ns) || (isTrue(force) && child.tag !== 'svg'))) {
        applyNS(child, ns, force);
      }
    }
  }
}

// ref #5318
// necessary to ensure parent re-render when deep bindings like :style and
// :class are used on slot nodes
function registerDeepBindings (data) {
  if (isObject(data.style)) {
    traverse(data.style);
  }
  if (isObject(data.class)) {
    traverse(data.class);
  }
}

/*  */

function initRender (vm) {
  vm._vnode = null; // the root of the child tree
  vm._staticTrees = null; // v-once cached trees
  var options = vm.$options;
  var parentVnode = vm.$vnode = options._parentVnode; // the placeholder node in parent tree
  var renderContext = parentVnode && parentVnode.context;
  vm.$slots = resolveSlots(options._renderChildren, renderContext);
  vm.$scopedSlots = emptyObject;
  // bind the createElement fn to this instance
  // so that we get proper render context inside it.
  // args order: tag, data, children, normalizationType, alwaysNormalize
  // internal version is used by render functions compiled from templates
  vm._c = function (a, b, c, d) { return createElement(vm, a, b, c, d, false); };
  // normalization is always applied for the public version, used in
  // user-written render functions.
  vm.$createElement = function (a, b, c, d) { return createElement(vm, a, b, c, d, true); };

  // $attrs & $listeners are exposed for easier HOC creation.
  // they need to be reactive so that HOCs using them are always updated
  var parentData = parentVnode && parentVnode.data;

  /* istanbul ignore else */
  if (true) {
    defineReactive$$1(vm, '$attrs', parentData && parentData.attrs || emptyObject, function () {
      !isUpdatingChildComponent && warn("$attrs is readonly.", vm);
    }, true);
    defineReactive$$1(vm, '$listeners', options._parentListeners || emptyObject, function () {
      !isUpdatingChildComponent && warn("$listeners is readonly.", vm);
    }, true);
  } else {}
}

var currentRenderingInstance = null;

function renderMixin (Vue) {
  // install runtime convenience helpers
  installRenderHelpers(Vue.prototype);

  Vue.prototype.$nextTick = function (fn) {
    return nextTick(fn, this)
  };

  Vue.prototype._render = function () {
    var vm = this;
    var ref = vm.$options;
    var render = ref.render;
    var _parentVnode = ref._parentVnode;

    if (_parentVnode) {
      vm.$scopedSlots = normalizeScopedSlots(
        _parentVnode.data.scopedSlots,
        vm.$slots,
        vm.$scopedSlots
      );
    }

    // set parent vnode. this allows render functions to have access
    // to the data on the placeholder node.
    vm.$vnode = _parentVnode;
    // render self
    var vnode;
    try {
      // There's no need to maintain a stack because all render fns are called
      // separately from one another. Nested component's render fns are called
      // when parent component is patched.
      currentRenderingInstance = vm;
      vnode = render.call(vm._renderProxy, vm.$createElement);
    } catch (e) {
      handleError(e, vm, "render");
      // return error render result,
      // or previous vnode to prevent render error causing blank component
      /* istanbul ignore else */
      if ( true && vm.$options.renderError) {
        try {
          vnode = vm.$options.renderError.call(vm._renderProxy, vm.$createElement, e);
        } catch (e) {
          handleError(e, vm, "renderError");
          vnode = vm._vnode;
        }
      } else {
        vnode = vm._vnode;
      }
    } finally {
      currentRenderingInstance = null;
    }
    // if the returned array contains only a single node, allow it
    if (Array.isArray(vnode) && vnode.length === 1) {
      vnode = vnode[0];
    }
    // return empty vnode in case the render function errored out
    if (!(vnode instanceof VNode)) {
      if ( true && Array.isArray(vnode)) {
        warn(
          'Multiple root nodes returned from render function. Render function ' +
          'should return a single root node.',
          vm
        );
      }
      vnode = createEmptyVNode();
    }
    // set parent
    vnode.parent = _parentVnode;
    return vnode
  };
}

/*  */

function ensureCtor (comp, base) {
  if (
    comp.__esModule ||
    (hasSymbol && comp[Symbol.toStringTag] === 'Module')
  ) {
    comp = comp.default;
  }
  return isObject(comp)
    ? base.extend(comp)
    : comp
}

function createAsyncPlaceholder (
  factory,
  data,
  context,
  children,
  tag
) {
  var node = createEmptyVNode();
  node.asyncFactory = factory;
  node.asyncMeta = { data: data, context: context, children: children, tag: tag };
  return node
}

function resolveAsyncComponent (
  factory,
  baseCtor
) {
  if (isTrue(factory.error) && isDef(factory.errorComp)) {
    return factory.errorComp
  }

  if (isDef(factory.resolved)) {
    return factory.resolved
  }

  var owner = currentRenderingInstance;
  if (owner && isDef(factory.owners) && factory.owners.indexOf(owner) === -1) {
    // already pending
    factory.owners.push(owner);
  }

  if (isTrue(factory.loading) && isDef(factory.loadingComp)) {
    return factory.loadingComp
  }

  if (owner && !isDef(factory.owners)) {
    var owners = factory.owners = [owner];
    var sync = true;
    var timerLoading = null;
    var timerTimeout = null

    ;(owner).$on('hook:destroyed', function () { return remove(owners, owner); });

    var forceRender = function (renderCompleted) {
      for (var i = 0, l = owners.length; i < l; i++) {
        (owners[i]).$forceUpdate();
      }

      if (renderCompleted) {
        owners.length = 0;
        if (timerLoading !== null) {
          clearTimeout(timerLoading);
          timerLoading = null;
        }
        if (timerTimeout !== null) {
          clearTimeout(timerTimeout);
          timerTimeout = null;
        }
      }
    };

    var resolve = once(function (res) {
      // cache resolved
      factory.resolved = ensureCtor(res, baseCtor);
      // invoke callbacks only if this is not a synchronous resolve
      // (async resolves are shimmed as synchronous during SSR)
      if (!sync) {
        forceRender(true);
      } else {
        owners.length = 0;
      }
    });

    var reject = once(function (reason) {
       true && warn(
        "Failed to resolve async component: " + (String(factory)) +
        (reason ? ("\nReason: " + reason) : '')
      );
      if (isDef(factory.errorComp)) {
        factory.error = true;
        forceRender(true);
      }
    });

    var res = factory(resolve, reject);

    if (isObject(res)) {
      if (isPromise(res)) {
        // () => Promise
        if (isUndef(factory.resolved)) {
          res.then(resolve, reject);
        }
      } else if (isPromise(res.component)) {
        res.component.then(resolve, reject);

        if (isDef(res.error)) {
          factory.errorComp = ensureCtor(res.error, baseCtor);
        }

        if (isDef(res.loading)) {
          factory.loadingComp = ensureCtor(res.loading, baseCtor);
          if (res.delay === 0) {
            factory.loading = true;
          } else {
            timerLoading = setTimeout(function () {
              timerLoading = null;
              if (isUndef(factory.resolved) && isUndef(factory.error)) {
                factory.loading = true;
                forceRender(false);
              }
            }, res.delay || 200);
          }
        }

        if (isDef(res.timeout)) {
          timerTimeout = setTimeout(function () {
            timerTimeout = null;
            if (isUndef(factory.resolved)) {
              reject(
                 true
                  ? ("timeout (" + (res.timeout) + "ms)")
                  : undefined
              );
            }
          }, res.timeout);
        }
      }
    }

    sync = false;
    // return in case resolved synchronously
    return factory.loading
      ? factory.loadingComp
      : factory.resolved
  }
}

/*  */

function isAsyncPlaceholder (node) {
  return node.isComment && node.asyncFactory
}

/*  */

function getFirstComponentChild (children) {
  if (Array.isArray(children)) {
    for (var i = 0; i < children.length; i++) {
      var c = children[i];
      if (isDef(c) && (isDef(c.componentOptions) || isAsyncPlaceholder(c))) {
        return c
      }
    }
  }
}

/*  */

/*  */

function initEvents (vm) {
  vm._events = Object.create(null);
  vm._hasHookEvent = false;
  // init parent attached events
  var listeners = vm.$options._parentListeners;
  if (listeners) {
    updateComponentListeners(vm, listeners);
  }
}

var target;

function add (event, fn) {
  target.$on(event, fn);
}

function remove$1 (event, fn) {
  target.$off(event, fn);
}

function createOnceHandler (event, fn) {
  var _target = target;
  return function onceHandler () {
    var res = fn.apply(null, arguments);
    if (res !== null) {
      _target.$off(event, onceHandler);
    }
  }
}

function updateComponentListeners (
  vm,
  listeners,
  oldListeners
) {
  target = vm;
  updateListeners(listeners, oldListeners || {}, add, remove$1, createOnceHandler, vm);
  target = undefined;
}

function eventsMixin (Vue) {
  var hookRE = /^hook:/;
  Vue.prototype.$on = function (event, fn) {
    var vm = this;
    if (Array.isArray(event)) {
      for (var i = 0, l = event.length; i < l; i++) {
        vm.$on(event[i], fn);
      }
    } else {
      (vm._events[event] || (vm._events[event] = [])).push(fn);
      // optimize hook:event cost by using a boolean flag marked at registration
      // instead of a hash lookup
      if (hookRE.test(event)) {
        vm._hasHookEvent = true;
      }
    }
    return vm
  };

  Vue.prototype.$once = function (event, fn) {
    var vm = this;
    function on () {
      vm.$off(event, on);
      fn.apply(vm, arguments);
    }
    on.fn = fn;
    vm.$on(event, on);
    return vm
  };

  Vue.prototype.$off = function (event, fn) {
    var vm = this;
    // all
    if (!arguments.length) {
      vm._events = Object.create(null);
      return vm
    }
    // array of events
    if (Array.isArray(event)) {
      for (var i$1 = 0, l = event.length; i$1 < l; i$1++) {
        vm.$off(event[i$1], fn);
      }
      return vm
    }
    // specific event
    var cbs = vm._events[event];
    if (!cbs) {
      return vm
    }
    if (!fn) {
      vm._events[event] = null;
      return vm
    }
    // specific handler
    var cb;
    var i = cbs.length;
    while (i--) {
      cb = cbs[i];
      if (cb === fn || cb.fn === fn) {
        cbs.splice(i, 1);
        break
      }
    }
    return vm
  };

  Vue.prototype.$emit = function (event) {
    var vm = this;
    if (true) {
      var lowerCaseEvent = event.toLowerCase();
      if (lowerCaseEvent !== event && vm._events[lowerCaseEvent]) {
        tip(
          "Event \"" + lowerCaseEvent + "\" is emitted in component " +
          (formatComponentName(vm)) + " but the handler is registered for \"" + event + "\". " +
          "Note that HTML attributes are case-insensitive and you cannot use " +
          "v-on to listen to camelCase events when using in-DOM templates. " +
          "You should probably use \"" + (hyphenate(event)) + "\" instead of \"" + event + "\"."
        );
      }
    }
    var cbs = vm._events[event];
    if (cbs) {
      cbs = cbs.length > 1 ? toArray(cbs) : cbs;
      var args = toArray(arguments, 1);
      var info = "event handler for \"" + event + "\"";
      for (var i = 0, l = cbs.length; i < l; i++) {
        invokeWithErrorHandling(cbs[i], vm, args, vm, info);
      }
    }
    return vm
  };
}

/*  */

var activeInstance = null;
var isUpdatingChildComponent = false;

function setActiveInstance(vm) {
  var prevActiveInstance = activeInstance;
  activeInstance = vm;
  return function () {
    activeInstance = prevActiveInstance;
  }
}

function initLifecycle (vm) {
  var options = vm.$options;

  // locate first non-abstract parent
  var parent = options.parent;
  if (parent && !options.abstract) {
    while (parent.$options.abstract && parent.$parent) {
      parent = parent.$parent;
    }
    parent.$children.push(vm);
  }

  vm.$parent = parent;
  vm.$root = parent ? parent.$root : vm;

  vm.$children = [];
  vm.$refs = {};

  vm._watcher = null;
  vm._inactive = null;
  vm._directInactive = false;
  vm._isMounted = false;
  vm._isDestroyed = false;
  vm._isBeingDestroyed = false;
}

function lifecycleMixin (Vue) {
  Vue.prototype._update = function (vnode, hydrating) {
    var vm = this;
    var prevEl = vm.$el;
    var prevVnode = vm._vnode;
    var restoreActiveInstance = setActiveInstance(vm);
    vm._vnode = vnode;
    // Vue.prototype.__patch__ is injected in entry points
    // based on the rendering backend used.
    if (!prevVnode) {
      // initial render
      vm.$el = vm.__patch__(vm.$el, vnode, hydrating, false /* removeOnly */);
    } else {
      // updates
      vm.$el = vm.__patch__(prevVnode, vnode);
    }
    restoreActiveInstance();
    // update __vue__ reference
    if (prevEl) {
      prevEl.__vue__ = null;
    }
    if (vm.$el) {
      vm.$el.__vue__ = vm;
    }
    // if parent is an HOC, update its $el as well
    if (vm.$vnode && vm.$parent && vm.$vnode === vm.$parent._vnode) {
      vm.$parent.$el = vm.$el;
    }
    // updated hook is called by the scheduler to ensure that children are
    // updated in a parent's updated hook.
  };

  Vue.prototype.$forceUpdate = function () {
    var vm = this;
    if (vm._watcher) {
      vm._watcher.update();
    }
  };

  Vue.prototype.$destroy = function () {
    var vm = this;
    if (vm._isBeingDestroyed) {
      return
    }
    callHook(vm, 'beforeDestroy');
    vm._isBeingDestroyed = true;
    // remove self from parent
    var parent = vm.$parent;
    if (parent && !parent._isBeingDestroyed && !vm.$options.abstract) {
      remove(parent.$children, vm);
    }
    // teardown watchers
    if (vm._watcher) {
      vm._watcher.teardown();
    }
    var i = vm._watchers.length;
    while (i--) {
      vm._watchers[i].teardown();
    }
    // remove reference from data ob
    // frozen object may not have observer.
    if (vm._data.__ob__) {
      vm._data.__ob__.vmCount--;
    }
    // call the last hook...
    vm._isDestroyed = true;
    // invoke destroy hooks on current rendered tree
    vm.__patch__(vm._vnode, null);
    // fire destroyed hook
    callHook(vm, 'destroyed');
    // turn off all instance listeners.
    vm.$off();
    // remove __vue__ reference
    if (vm.$el) {
      vm.$el.__vue__ = null;
    }
    // release circular reference (#6759)
    if (vm.$vnode) {
      vm.$vnode.parent = null;
    }
  };
}

function updateChildComponent (
  vm,
  propsData,
  listeners,
  parentVnode,
  renderChildren
) {
  if (true) {
    isUpdatingChildComponent = true;
  }

  // determine whether component has slot children
  // we need to do this before overwriting $options._renderChildren.

  // check if there are dynamic scopedSlots (hand-written or compiled but with
  // dynamic slot names). Static scoped slots compiled from template has the
  // "$stable" marker.
  var newScopedSlots = parentVnode.data.scopedSlots;
  var oldScopedSlots = vm.$scopedSlots;
  var hasDynamicScopedSlot = !!(
    (newScopedSlots && !newScopedSlots.$stable) ||
    (oldScopedSlots !== emptyObject && !oldScopedSlots.$stable) ||
    (newScopedSlots && vm.$scopedSlots.$key !== newScopedSlots.$key)
  );

  // Any static slot children from the parent may have changed during parent's
  // update. Dynamic scoped slots may also have changed. In such cases, a forced
  // update is necessary to ensure correctness.
  var needsForceUpdate = !!(
    renderChildren ||               // has new static slots
    vm.$options._renderChildren ||  // has old static slots
    hasDynamicScopedSlot
  );

  vm.$options._parentVnode = parentVnode;
  vm.$vnode = parentVnode; // update vm's placeholder node without re-render

  if (vm._vnode) { // update child tree's parent
    vm._vnode.parent = parentVnode;
  }
  vm.$options._renderChildren = renderChildren;

  // update $attrs and $listeners hash
  // these are also reactive so they may trigger child update if the child
  // used them during render
  vm.$attrs = parentVnode.data.attrs || emptyObject;
  vm.$listeners = listeners || emptyObject;

  // update props
  if (propsData && vm.$options.props) {
    toggleObserving(false);
    var props = vm._props;
    var propKeys = vm.$options._propKeys || [];
    for (var i = 0; i < propKeys.length; i++) {
      var key = propKeys[i];
      var propOptions = vm.$options.props; // wtf flow?
      props[key] = validateProp(key, propOptions, propsData, vm);
    }
    toggleObserving(true);
    // keep a copy of raw propsData
    vm.$options.propsData = propsData;
  }
  
  // fixed by xxxxxx update properties(mp runtime)
  vm._$updateProperties && vm._$updateProperties(vm);
  
  // update listeners
  listeners = listeners || emptyObject;
  var oldListeners = vm.$options._parentListeners;
  vm.$options._parentListeners = listeners;
  updateComponentListeners(vm, listeners, oldListeners);

  // resolve slots + force update if has children
  if (needsForceUpdate) {
    vm.$slots = resolveSlots(renderChildren, parentVnode.context);
    vm.$forceUpdate();
  }

  if (true) {
    isUpdatingChildComponent = false;
  }
}

function isInInactiveTree (vm) {
  while (vm && (vm = vm.$parent)) {
    if (vm._inactive) { return true }
  }
  return false
}

function activateChildComponent (vm, direct) {
  if (direct) {
    vm._directInactive = false;
    if (isInInactiveTree(vm)) {
      return
    }
  } else if (vm._directInactive) {
    return
  }
  if (vm._inactive || vm._inactive === null) {
    vm._inactive = false;
    for (var i = 0; i < vm.$children.length; i++) {
      activateChildComponent(vm.$children[i]);
    }
    callHook(vm, 'activated');
  }
}

function deactivateChildComponent (vm, direct) {
  if (direct) {
    vm._directInactive = true;
    if (isInInactiveTree(vm)) {
      return
    }
  }
  if (!vm._inactive) {
    vm._inactive = true;
    for (var i = 0; i < vm.$children.length; i++) {
      deactivateChildComponent(vm.$children[i]);
    }
    callHook(vm, 'deactivated');
  }
}

function callHook (vm, hook) {
  // #7573 disable dep collection when invoking lifecycle hooks
  pushTarget();
  var handlers = vm.$options[hook];
  var info = hook + " hook";
  if (handlers) {
    for (var i = 0, j = handlers.length; i < j; i++) {
      invokeWithErrorHandling(handlers[i], vm, null, vm, info);
    }
  }
  if (vm._hasHookEvent) {
    vm.$emit('hook:' + hook);
  }
  popTarget();
}

/*  */

var MAX_UPDATE_COUNT = 100;

var queue = [];
var activatedChildren = [];
var has = {};
var circular = {};
var waiting = false;
var flushing = false;
var index = 0;

/**
 * Reset the scheduler's state.
 */
function resetSchedulerState () {
  index = queue.length = activatedChildren.length = 0;
  has = {};
  if (true) {
    circular = {};
  }
  waiting = flushing = false;
}

// Async edge case #6566 requires saving the timestamp when event listeners are
// attached. However, calling performance.now() has a perf overhead especially
// if the page has thousands of event listeners. Instead, we take a timestamp
// every time the scheduler flushes and use that for all event listeners
// attached during that flush.
var currentFlushTimestamp = 0;

// Async edge case fix requires storing an event listener's attach timestamp.
var getNow = Date.now;

// Determine what event timestamp the browser is using. Annoyingly, the
// timestamp can either be hi-res (relative to page load) or low-res
// (relative to UNIX epoch), so in order to compare time we have to use the
// same timestamp type when saving the flush timestamp.
// All IE versions use low-res event timestamps, and have problematic clock
// implementations (#9632)
if (inBrowser && !isIE) {
  var performance = window.performance;
  if (
    performance &&
    typeof performance.now === 'function' &&
    getNow() > document.createEvent('Event').timeStamp
  ) {
    // if the event timestamp, although evaluated AFTER the Date.now(), is
    // smaller than it, it means the event is using a hi-res timestamp,
    // and we need to use the hi-res version for event listener timestamps as
    // well.
    getNow = function () { return performance.now(); };
  }
}

/**
 * Flush both queues and run the watchers.
 */
function flushSchedulerQueue () {
  currentFlushTimestamp = getNow();
  flushing = true;
  var watcher, id;

  // Sort queue before flush.
  // This ensures that:
  // 1. Components are updated from parent to child. (because parent is always
  //    created before the child)
  // 2. A component's user watchers are run before its render watcher (because
  //    user watchers are created before the render watcher)
  // 3. If a component is destroyed during a parent component's watcher run,
  //    its watchers can be skipped.
  queue.sort(function (a, b) { return a.id - b.id; });

  // do not cache length because more watchers might be pushed
  // as we run existing watchers
  for (index = 0; index < queue.length; index++) {
    watcher = queue[index];
    if (watcher.before) {
      watcher.before();
    }
    id = watcher.id;
    has[id] = null;
    watcher.run();
    // in dev build, check and stop circular updates.
    if ( true && has[id] != null) {
      circular[id] = (circular[id] || 0) + 1;
      if (circular[id] > MAX_UPDATE_COUNT) {
        warn(
          'You may have an infinite update loop ' + (
            watcher.user
              ? ("in watcher with expression \"" + (watcher.expression) + "\"")
              : "in a component render function."
          ),
          watcher.vm
        );
        break
      }
    }
  }

  // keep copies of post queues before resetting state
  var activatedQueue = activatedChildren.slice();
  var updatedQueue = queue.slice();

  resetSchedulerState();

  // call component updated and activated hooks
  callActivatedHooks(activatedQueue);
  callUpdatedHooks(updatedQueue);

  // devtool hook
  /* istanbul ignore if */
  if (devtools && config.devtools) {
    devtools.emit('flush');
  }
}

function callUpdatedHooks (queue) {
  var i = queue.length;
  while (i--) {
    var watcher = queue[i];
    var vm = watcher.vm;
    if (vm._watcher === watcher && vm._isMounted && !vm._isDestroyed) {
      callHook(vm, 'updated');
    }
  }
}

/**
 * Queue a kept-alive component that was activated during patch.
 * The queue will be processed after the entire tree has been patched.
 */
function queueActivatedComponent (vm) {
  // setting _inactive to false here so that a render function can
  // rely on checking whether it's in an inactive tree (e.g. router-view)
  vm._inactive = false;
  activatedChildren.push(vm);
}

function callActivatedHooks (queue) {
  for (var i = 0; i < queue.length; i++) {
    queue[i]._inactive = true;
    activateChildComponent(queue[i], true /* true */);
  }
}

/**
 * Push a watcher into the watcher queue.
 * Jobs with duplicate IDs will be skipped unless it's
 * pushed when the queue is being flushed.
 */
function queueWatcher (watcher) {
  var id = watcher.id;
  if (has[id] == null) {
    has[id] = true;
    if (!flushing) {
      queue.push(watcher);
    } else {
      // if already flushing, splice the watcher based on its id
      // if already past its id, it will be run next immediately.
      var i = queue.length - 1;
      while (i > index && queue[i].id > watcher.id) {
        i--;
      }
      queue.splice(i + 1, 0, watcher);
    }
    // queue the flush
    if (!waiting) {
      waiting = true;

      if ( true && !config.async) {
        flushSchedulerQueue();
        return
      }
      nextTick(flushSchedulerQueue);
    }
  }
}

/*  */



var uid$2 = 0;

/**
 * A watcher parses an expression, collects dependencies,
 * and fires callback when the expression value changes.
 * This is used for both the $watch() api and directives.
 */
var Watcher = function Watcher (
  vm,
  expOrFn,
  cb,
  options,
  isRenderWatcher
) {
  this.vm = vm;
  if (isRenderWatcher) {
    vm._watcher = this;
  }
  vm._watchers.push(this);
  // options
  if (options) {
    this.deep = !!options.deep;
    this.user = !!options.user;
    this.lazy = !!options.lazy;
    this.sync = !!options.sync;
    this.before = options.before;
  } else {
    this.deep = this.user = this.lazy = this.sync = false;
  }
  this.cb = cb;
  this.id = ++uid$2; // uid for batching
  this.active = true;
  this.dirty = this.lazy; // for lazy watchers
  this.deps = [];
  this.newDeps = [];
  this.depIds = new _Set();
  this.newDepIds = new _Set();
  this.expression =  true
    ? expOrFn.toString()
    : undefined;
  // parse expression for getter
  if (typeof expOrFn === 'function') {
    this.getter = expOrFn;
  } else {
    this.getter = parsePath(expOrFn);
    if (!this.getter) {
      this.getter = noop;
       true && warn(
        "Failed watching path: \"" + expOrFn + "\" " +
        'Watcher only accepts simple dot-delimited paths. ' +
        'For full control, use a function instead.',
        vm
      );
    }
  }
  this.value = this.lazy
    ? undefined
    : this.get();
};

/**
 * Evaluate the getter, and re-collect dependencies.
 */
Watcher.prototype.get = function get () {
  pushTarget(this);
  var value;
  var vm = this.vm;
  try {
    value = this.getter.call(vm, vm);
  } catch (e) {
    if (this.user) {
      handleError(e, vm, ("getter for watcher \"" + (this.expression) + "\""));
    } else {
      throw e
    }
  } finally {
    // "touch" every property so they are all tracked as
    // dependencies for deep watching
    if (this.deep) {
      traverse(value);
    }
    popTarget();
    this.cleanupDeps();
  }
  return value
};

/**
 * Add a dependency to this directive.
 */
Watcher.prototype.addDep = function addDep (dep) {
  var id = dep.id;
  if (!this.newDepIds.has(id)) {
    this.newDepIds.add(id);
    this.newDeps.push(dep);
    if (!this.depIds.has(id)) {
      dep.addSub(this);
    }
  }
};

/**
 * Clean up for dependency collection.
 */
Watcher.prototype.cleanupDeps = function cleanupDeps () {
  var i = this.deps.length;
  while (i--) {
    var dep = this.deps[i];
    if (!this.newDepIds.has(dep.id)) {
      dep.removeSub(this);
    }
  }
  var tmp = this.depIds;
  this.depIds = this.newDepIds;
  this.newDepIds = tmp;
  this.newDepIds.clear();
  tmp = this.deps;
  this.deps = this.newDeps;
  this.newDeps = tmp;
  this.newDeps.length = 0;
};

/**
 * Subscriber interface.
 * Will be called when a dependency changes.
 */
Watcher.prototype.update = function update () {
  /* istanbul ignore else */
  if (this.lazy) {
    this.dirty = true;
  } else if (this.sync) {
    this.run();
  } else {
    queueWatcher(this);
  }
};

/**
 * Scheduler job interface.
 * Will be called by the scheduler.
 */
Watcher.prototype.run = function run () {
  if (this.active) {
    var value = this.get();
    if (
      value !== this.value ||
      // Deep watchers and watchers on Object/Arrays should fire even
      // when the value is the same, because the value may
      // have mutated.
      isObject(value) ||
      this.deep
    ) {
      // set new value
      var oldValue = this.value;
      this.value = value;
      if (this.user) {
        try {
          this.cb.call(this.vm, value, oldValue);
        } catch (e) {
          handleError(e, this.vm, ("callback for watcher \"" + (this.expression) + "\""));
        }
      } else {
        this.cb.call(this.vm, value, oldValue);
      }
    }
  }
};

/**
 * Evaluate the value of the watcher.
 * This only gets called for lazy watchers.
 */
Watcher.prototype.evaluate = function evaluate () {
  this.value = this.get();
  this.dirty = false;
};

/**
 * Depend on all deps collected by this watcher.
 */
Watcher.prototype.depend = function depend () {
  var i = this.deps.length;
  while (i--) {
    this.deps[i].depend();
  }
};

/**
 * Remove self from all dependencies' subscriber list.
 */
Watcher.prototype.teardown = function teardown () {
  if (this.active) {
    // remove self from vm's watcher list
    // this is a somewhat expensive operation so we skip it
    // if the vm is being destroyed.
    if (!this.vm._isBeingDestroyed) {
      remove(this.vm._watchers, this);
    }
    var i = this.deps.length;
    while (i--) {
      this.deps[i].removeSub(this);
    }
    this.active = false;
  }
};

/*  */

var sharedPropertyDefinition = {
  enumerable: true,
  configurable: true,
  get: noop,
  set: noop
};

function proxy (target, sourceKey, key) {
  sharedPropertyDefinition.get = function proxyGetter () {
    return this[sourceKey][key]
  };
  sharedPropertyDefinition.set = function proxySetter (val) {
    this[sourceKey][key] = val;
  };
  Object.defineProperty(target, key, sharedPropertyDefinition);
}

function initState (vm) {
  vm._watchers = [];
  var opts = vm.$options;
  if (opts.props) { initProps(vm, opts.props); }
  if (opts.methods) { initMethods(vm, opts.methods); }
  if (opts.data) {
    initData(vm);
  } else {
    observe(vm._data = {}, true /* asRootData */);
  }
  if (opts.computed) { initComputed(vm, opts.computed); }
  if (opts.watch && opts.watch !== nativeWatch) {
    initWatch(vm, opts.watch);
  }
}

function initProps (vm, propsOptions) {
  var propsData = vm.$options.propsData || {};
  var props = vm._props = {};
  // cache prop keys so that future props updates can iterate using Array
  // instead of dynamic object key enumeration.
  var keys = vm.$options._propKeys = [];
  var isRoot = !vm.$parent;
  // root instance props should be converted
  if (!isRoot) {
    toggleObserving(false);
  }
  var loop = function ( key ) {
    keys.push(key);
    var value = validateProp(key, propsOptions, propsData, vm);
    /* istanbul ignore else */
    if (true) {
      var hyphenatedKey = hyphenate(key);
      if (isReservedAttribute(hyphenatedKey) ||
          config.isReservedAttr(hyphenatedKey)) {
        warn(
          ("\"" + hyphenatedKey + "\" is a reserved attribute and cannot be used as component prop."),
          vm
        );
      }
      defineReactive$$1(props, key, value, function () {
        if (!isRoot && !isUpdatingChildComponent) {
          {
            if(vm.mpHost === 'mp-baidu' || vm.mpHost === 'mp-kuaishou' || vm.mpHost === 'mp-xhs'){//百度、快手、小红书 observer 在 setData callback 之后触发，直接忽略该 warn
                return
            }
            //fixed by xxxxxx __next_tick_pending,uni://form-field 时不告警
            if(
                key === 'value' && 
                Array.isArray(vm.$options.behaviors) &&
                vm.$options.behaviors.indexOf('uni://form-field') !== -1
              ){
              return
            }
            if(vm._getFormData){
              return
            }
            var $parent = vm.$parent;
            while($parent){
              if($parent.__next_tick_pending){
                return  
              }
              $parent = $parent.$parent;
            }
          }
          warn(
            "Avoid mutating a prop directly since the value will be " +
            "overwritten whenever the parent component re-renders. " +
            "Instead, use a data or computed property based on the prop's " +
            "value. Prop being mutated: \"" + key + "\"",
            vm
          );
        }
      });
    } else {}
    // static props are already proxied on the component's prototype
    // during Vue.extend(). We only need to proxy props defined at
    // instantiation here.
    if (!(key in vm)) {
      proxy(vm, "_props", key);
    }
  };

  for (var key in propsOptions) loop( key );
  toggleObserving(true);
}

function initData (vm) {
  var data = vm.$options.data;
  data = vm._data = typeof data === 'function'
    ? getData(data, vm)
    : data || {};
  if (!isPlainObject(data)) {
    data = {};
     true && warn(
      'data functions should return an object:\n' +
      'https://vuejs.org/v2/guide/components.html#data-Must-Be-a-Function',
      vm
    );
  }
  // proxy data on instance
  var keys = Object.keys(data);
  var props = vm.$options.props;
  var methods = vm.$options.methods;
  var i = keys.length;
  while (i--) {
    var key = keys[i];
    if (true) {
      if (methods && hasOwn(methods, key)) {
        warn(
          ("Method \"" + key + "\" has already been defined as a data property."),
          vm
        );
      }
    }
    if (props && hasOwn(props, key)) {
       true && warn(
        "The data property \"" + key + "\" is already declared as a prop. " +
        "Use prop default value instead.",
        vm
      );
    } else if (!isReserved(key)) {
      proxy(vm, "_data", key);
    }
  }
  // observe data
  observe(data, true /* asRootData */);
}

function getData (data, vm) {
  // #7573 disable dep collection when invoking data getters
  pushTarget();
  try {
    return data.call(vm, vm)
  } catch (e) {
    handleError(e, vm, "data()");
    return {}
  } finally {
    popTarget();
  }
}

var computedWatcherOptions = { lazy: true };

function initComputed (vm, computed) {
  // $flow-disable-line
  var watchers = vm._computedWatchers = Object.create(null);
  // computed properties are just getters during SSR
  var isSSR = isServerRendering();

  for (var key in computed) {
    var userDef = computed[key];
    var getter = typeof userDef === 'function' ? userDef : userDef.get;
    if ( true && getter == null) {
      warn(
        ("Getter is missing for computed property \"" + key + "\"."),
        vm
      );
    }

    if (!isSSR) {
      // create internal watcher for the computed property.
      watchers[key] = new Watcher(
        vm,
        getter || noop,
        noop,
        computedWatcherOptions
      );
    }

    // component-defined computed properties are already defined on the
    // component prototype. We only need to define computed properties defined
    // at instantiation here.
    if (!(key in vm)) {
      defineComputed(vm, key, userDef);
    } else if (true) {
      if (key in vm.$data) {
        warn(("The computed property \"" + key + "\" is already defined in data."), vm);
      } else if (vm.$options.props && key in vm.$options.props) {
        warn(("The computed property \"" + key + "\" is already defined as a prop."), vm);
      }
    }
  }
}

function defineComputed (
  target,
  key,
  userDef
) {
  var shouldCache = !isServerRendering();
  if (typeof userDef === 'function') {
    sharedPropertyDefinition.get = shouldCache
      ? createComputedGetter(key)
      : createGetterInvoker(userDef);
    sharedPropertyDefinition.set = noop;
  } else {
    sharedPropertyDefinition.get = userDef.get
      ? shouldCache && userDef.cache !== false
        ? createComputedGetter(key)
        : createGetterInvoker(userDef.get)
      : noop;
    sharedPropertyDefinition.set = userDef.set || noop;
  }
  if ( true &&
      sharedPropertyDefinition.set === noop) {
    sharedPropertyDefinition.set = function () {
      warn(
        ("Computed property \"" + key + "\" was assigned to but it has no setter."),
        this
      );
    };
  }
  Object.defineProperty(target, key, sharedPropertyDefinition);
}

function createComputedGetter (key) {
  return function computedGetter () {
    var watcher = this._computedWatchers && this._computedWatchers[key];
    if (watcher) {
      if (watcher.dirty) {
        watcher.evaluate();
      }
      if (Dep.SharedObject.target) {// fixed by xxxxxx
        watcher.depend();
      }
      return watcher.value
    }
  }
}

function createGetterInvoker(fn) {
  return function computedGetter () {
    return fn.call(this, this)
  }
}

function initMethods (vm, methods) {
  var props = vm.$options.props;
  for (var key in methods) {
    if (true) {
      if (typeof methods[key] !== 'function') {
        warn(
          "Method \"" + key + "\" has type \"" + (typeof methods[key]) + "\" in the component definition. " +
          "Did you reference the function correctly?",
          vm
        );
      }
      if (props && hasOwn(props, key)) {
        warn(
          ("Method \"" + key + "\" has already been defined as a prop."),
          vm
        );
      }
      if ((key in vm) && isReserved(key)) {
        warn(
          "Method \"" + key + "\" conflicts with an existing Vue instance method. " +
          "Avoid defining component methods that start with _ or $."
        );
      }
    }
    vm[key] = typeof methods[key] !== 'function' ? noop : bind(methods[key], vm);
  }
}

function initWatch (vm, watch) {
  for (var key in watch) {
    var handler = watch[key];
    if (Array.isArray(handler)) {
      for (var i = 0; i < handler.length; i++) {
        createWatcher(vm, key, handler[i]);
      }
    } else {
      createWatcher(vm, key, handler);
    }
  }
}

function createWatcher (
  vm,
  expOrFn,
  handler,
  options
) {
  if (isPlainObject(handler)) {
    options = handler;
    handler = handler.handler;
  }
  if (typeof handler === 'string') {
    handler = vm[handler];
  }
  return vm.$watch(expOrFn, handler, options)
}

function stateMixin (Vue) {
  // flow somehow has problems with directly declared definition object
  // when using Object.defineProperty, so we have to procedurally build up
  // the object here.
  var dataDef = {};
  dataDef.get = function () { return this._data };
  var propsDef = {};
  propsDef.get = function () { return this._props };
  if (true) {
    dataDef.set = function () {
      warn(
        'Avoid replacing instance root $data. ' +
        'Use nested data properties instead.',
        this
      );
    };
    propsDef.set = function () {
      warn("$props is readonly.", this);
    };
  }
  Object.defineProperty(Vue.prototype, '$data', dataDef);
  Object.defineProperty(Vue.prototype, '$props', propsDef);

  Vue.prototype.$set = set;
  Vue.prototype.$delete = del;

  Vue.prototype.$watch = function (
    expOrFn,
    cb,
    options
  ) {
    var vm = this;
    if (isPlainObject(cb)) {
      return createWatcher(vm, expOrFn, cb, options)
    }
    options = options || {};
    options.user = true;
    var watcher = new Watcher(vm, expOrFn, cb, options);
    if (options.immediate) {
      try {
        cb.call(vm, watcher.value);
      } catch (error) {
        handleError(error, vm, ("callback for immediate watcher \"" + (watcher.expression) + "\""));
      }
    }
    return function unwatchFn () {
      watcher.teardown();
    }
  };
}

/*  */

var uid$3 = 0;

function initMixin (Vue) {
  Vue.prototype._init = function (options) {
    var vm = this;
    // a uid
    vm._uid = uid$3++;

    var startTag, endTag;
    /* istanbul ignore if */
    if ( true && config.performance && mark) {
      startTag = "vue-perf-start:" + (vm._uid);
      endTag = "vue-perf-end:" + (vm._uid);
      mark(startTag);
    }

    // a flag to avoid this being observed
    vm._isVue = true;
    // merge options
    if (options && options._isComponent) {
      // optimize internal component instantiation
      // since dynamic options merging is pretty slow, and none of the
      // internal component options needs special treatment.
      initInternalComponent(vm, options);
    } else {
      vm.$options = mergeOptions(
        resolveConstructorOptions(vm.constructor),
        options || {},
        vm
      );
    }
    /* istanbul ignore else */
    if (true) {
      initProxy(vm);
    } else {}
    // expose real self
    vm._self = vm;
    initLifecycle(vm);
    initEvents(vm);
    initRender(vm);
    callHook(vm, 'beforeCreate');
    !vm._$fallback && initInjections(vm); // resolve injections before data/props  
    initState(vm);
    !vm._$fallback && initProvide(vm); // resolve provide after data/props
    !vm._$fallback && callHook(vm, 'created');      

    /* istanbul ignore if */
    if ( true && config.performance && mark) {
      vm._name = formatComponentName(vm, false);
      mark(endTag);
      measure(("vue " + (vm._name) + " init"), startTag, endTag);
    }

    if (vm.$options.el) {
      vm.$mount(vm.$options.el);
    }
  };
}

function initInternalComponent (vm, options) {
  var opts = vm.$options = Object.create(vm.constructor.options);
  // doing this because it's faster than dynamic enumeration.
  var parentVnode = options._parentVnode;
  opts.parent = options.parent;
  opts._parentVnode = parentVnode;

  var vnodeComponentOptions = parentVnode.componentOptions;
  opts.propsData = vnodeComponentOptions.propsData;
  opts._parentListeners = vnodeComponentOptions.listeners;
  opts._renderChildren = vnodeComponentOptions.children;
  opts._componentTag = vnodeComponentOptions.tag;

  if (options.render) {
    opts.render = options.render;
    opts.staticRenderFns = options.staticRenderFns;
  }
}

function resolveConstructorOptions (Ctor) {
  var options = Ctor.options;
  if (Ctor.super) {
    var superOptions = resolveConstructorOptions(Ctor.super);
    var cachedSuperOptions = Ctor.superOptions;
    if (superOptions !== cachedSuperOptions) {
      // super option changed,
      // need to resolve new options.
      Ctor.superOptions = superOptions;
      // check if there are any late-modified/attached options (#4976)
      var modifiedOptions = resolveModifiedOptions(Ctor);
      // update base extend options
      if (modifiedOptions) {
        extend(Ctor.extendOptions, modifiedOptions);
      }
      options = Ctor.options = mergeOptions(superOptions, Ctor.extendOptions);
      if (options.name) {
        options.components[options.name] = Ctor;
      }
    }
  }
  return options
}

function resolveModifiedOptions (Ctor) {
  var modified;
  var latest = Ctor.options;
  var sealed = Ctor.sealedOptions;
  for (var key in latest) {
    if (latest[key] !== sealed[key]) {
      if (!modified) { modified = {}; }
      modified[key] = latest[key];
    }
  }
  return modified
}

function Vue (options) {
  if ( true &&
    !(this instanceof Vue)
  ) {
    warn('Vue is a constructor and should be called with the `new` keyword');
  }
  this._init(options);
}

initMixin(Vue);
stateMixin(Vue);
eventsMixin(Vue);
lifecycleMixin(Vue);
renderMixin(Vue);

/*  */

function initUse (Vue) {
  Vue.use = function (plugin) {
    var installedPlugins = (this._installedPlugins || (this._installedPlugins = []));
    if (installedPlugins.indexOf(plugin) > -1) {
      return this
    }

    // additional parameters
    var args = toArray(arguments, 1);
    args.unshift(this);
    if (typeof plugin.install === 'function') {
      plugin.install.apply(plugin, args);
    } else if (typeof plugin === 'function') {
      plugin.apply(null, args);
    }
    installedPlugins.push(plugin);
    return this
  };
}

/*  */

function initMixin$1 (Vue) {
  Vue.mixin = function (mixin) {
    this.options = mergeOptions(this.options, mixin);
    return this
  };
}

/*  */

function initExtend (Vue) {
  /**
   * Each instance constructor, including Vue, has a unique
   * cid. This enables us to create wrapped "child
   * constructors" for prototypal inheritance and cache them.
   */
  Vue.cid = 0;
  var cid = 1;

  /**
   * Class inheritance
   */
  Vue.extend = function (extendOptions) {
    extendOptions = extendOptions || {};
    var Super = this;
    var SuperId = Super.cid;
    var cachedCtors = extendOptions._Ctor || (extendOptions._Ctor = {});
    if (cachedCtors[SuperId]) {
      return cachedCtors[SuperId]
    }

    var name = extendOptions.name || Super.options.name;
    if ( true && name) {
      validateComponentName(name);
    }

    var Sub = function VueComponent (options) {
      this._init(options);
    };
    Sub.prototype = Object.create(Super.prototype);
    Sub.prototype.constructor = Sub;
    Sub.cid = cid++;
    Sub.options = mergeOptions(
      Super.options,
      extendOptions
    );
    Sub['super'] = Super;

    // For props and computed properties, we define the proxy getters on
    // the Vue instances at extension time, on the extended prototype. This
    // avoids Object.defineProperty calls for each instance created.
    if (Sub.options.props) {
      initProps$1(Sub);
    }
    if (Sub.options.computed) {
      initComputed$1(Sub);
    }

    // allow further extension/mixin/plugin usage
    Sub.extend = Super.extend;
    Sub.mixin = Super.mixin;
    Sub.use = Super.use;

    // create asset registers, so extended classes
    // can have their private assets too.
    ASSET_TYPES.forEach(function (type) {
      Sub[type] = Super[type];
    });
    // enable recursive self-lookup
    if (name) {
      Sub.options.components[name] = Sub;
    }

    // keep a reference to the super options at extension time.
    // later at instantiation we can check if Super's options have
    // been updated.
    Sub.superOptions = Super.options;
    Sub.extendOptions = extendOptions;
    Sub.sealedOptions = extend({}, Sub.options);

    // cache constructor
    cachedCtors[SuperId] = Sub;
    return Sub
  };
}

function initProps$1 (Comp) {
  var props = Comp.options.props;
  for (var key in props) {
    proxy(Comp.prototype, "_props", key);
  }
}

function initComputed$1 (Comp) {
  var computed = Comp.options.computed;
  for (var key in computed) {
    defineComputed(Comp.prototype, key, computed[key]);
  }
}

/*  */

function initAssetRegisters (Vue) {
  /**
   * Create asset registration methods.
   */
  ASSET_TYPES.forEach(function (type) {
    Vue[type] = function (
      id,
      definition
    ) {
      if (!definition) {
        return this.options[type + 's'][id]
      } else {
        /* istanbul ignore if */
        if ( true && type === 'component') {
          validateComponentName(id);
        }
        if (type === 'component' && isPlainObject(definition)) {
          definition.name = definition.name || id;
          definition = this.options._base.extend(definition);
        }
        if (type === 'directive' && typeof definition === 'function') {
          definition = { bind: definition, update: definition };
        }
        this.options[type + 's'][id] = definition;
        return definition
      }
    };
  });
}

/*  */



function getComponentName (opts) {
  return opts && (opts.Ctor.options.name || opts.tag)
}

function matches (pattern, name) {
  if (Array.isArray(pattern)) {
    return pattern.indexOf(name) > -1
  } else if (typeof pattern === 'string') {
    return pattern.split(',').indexOf(name) > -1
  } else if (isRegExp(pattern)) {
    return pattern.test(name)
  }
  /* istanbul ignore next */
  return false
}

function pruneCache (keepAliveInstance, filter) {
  var cache = keepAliveInstance.cache;
  var keys = keepAliveInstance.keys;
  var _vnode = keepAliveInstance._vnode;
  for (var key in cache) {
    var cachedNode = cache[key];
    if (cachedNode) {
      var name = getComponentName(cachedNode.componentOptions);
      if (name && !filter(name)) {
        pruneCacheEntry(cache, key, keys, _vnode);
      }
    }
  }
}

function pruneCacheEntry (
  cache,
  key,
  keys,
  current
) {
  var cached$$1 = cache[key];
  if (cached$$1 && (!current || cached$$1.tag !== current.tag)) {
    cached$$1.componentInstance.$destroy();
  }
  cache[key] = null;
  remove(keys, key);
}

var patternTypes = [String, RegExp, Array];

var KeepAlive = {
  name: 'keep-alive',
  abstract: true,

  props: {
    include: patternTypes,
    exclude: patternTypes,
    max: [String, Number]
  },

  created: function created () {
    this.cache = Object.create(null);
    this.keys = [];
  },

  destroyed: function destroyed () {
    for (var key in this.cache) {
      pruneCacheEntry(this.cache, key, this.keys);
    }
  },

  mounted: function mounted () {
    var this$1 = this;

    this.$watch('include', function (val) {
      pruneCache(this$1, function (name) { return matches(val, name); });
    });
    this.$watch('exclude', function (val) {
      pruneCache(this$1, function (name) { return !matches(val, name); });
    });
  },

  render: function render () {
    var slot = this.$slots.default;
    var vnode = getFirstComponentChild(slot);
    var componentOptions = vnode && vnode.componentOptions;
    if (componentOptions) {
      // check pattern
      var name = getComponentName(componentOptions);
      var ref = this;
      var include = ref.include;
      var exclude = ref.exclude;
      if (
        // not included
        (include && (!name || !matches(include, name))) ||
        // excluded
        (exclude && name && matches(exclude, name))
      ) {
        return vnode
      }

      var ref$1 = this;
      var cache = ref$1.cache;
      var keys = ref$1.keys;
      var key = vnode.key == null
        // same constructor may get registered as different local components
        // so cid alone is not enough (#3269)
        ? componentOptions.Ctor.cid + (componentOptions.tag ? ("::" + (componentOptions.tag)) : '')
        : vnode.key;
      if (cache[key]) {
        vnode.componentInstance = cache[key].componentInstance;
        // make current key freshest
        remove(keys, key);
        keys.push(key);
      } else {
        cache[key] = vnode;
        keys.push(key);
        // prune oldest entry
        if (this.max && keys.length > parseInt(this.max)) {
          pruneCacheEntry(cache, keys[0], keys, this._vnode);
        }
      }

      vnode.data.keepAlive = true;
    }
    return vnode || (slot && slot[0])
  }
};

var builtInComponents = {
  KeepAlive: KeepAlive
};

/*  */

function initGlobalAPI (Vue) {
  // config
  var configDef = {};
  configDef.get = function () { return config; };
  if (true) {
    configDef.set = function () {
      warn(
        'Do not replace the Vue.config object, set individual fields instead.'
      );
    };
  }
  Object.defineProperty(Vue, 'config', configDef);

  // exposed util methods.
  // NOTE: these are not considered part of the public API - avoid relying on
  // them unless you are aware of the risk.
  Vue.util = {
    warn: warn,
    extend: extend,
    mergeOptions: mergeOptions,
    defineReactive: defineReactive$$1
  };

  Vue.set = set;
  Vue.delete = del;
  Vue.nextTick = nextTick;

  // 2.6 explicit observable API
  Vue.observable = function (obj) {
    observe(obj);
    return obj
  };

  Vue.options = Object.create(null);
  ASSET_TYPES.forEach(function (type) {
    Vue.options[type + 's'] = Object.create(null);
  });

  // this is used to identify the "base" constructor to extend all plain-object
  // components with in Weex's multi-instance scenarios.
  Vue.options._base = Vue;

  extend(Vue.options.components, builtInComponents);

  initUse(Vue);
  initMixin$1(Vue);
  initExtend(Vue);
  initAssetRegisters(Vue);
}

initGlobalAPI(Vue);

Object.defineProperty(Vue.prototype, '$isServer', {
  get: isServerRendering
});

Object.defineProperty(Vue.prototype, '$ssrContext', {
  get: function get () {
    /* istanbul ignore next */
    return this.$vnode && this.$vnode.ssrContext
  }
});

// expose FunctionalRenderContext for ssr runtime helper installation
Object.defineProperty(Vue, 'FunctionalRenderContext', {
  value: FunctionalRenderContext
});

Vue.version = '2.6.11';

/**
 * https://raw.githubusercontent.com/Tencent/westore/master/packages/westore/utils/diff.js
 */
var ARRAYTYPE = '[object Array]';
var OBJECTTYPE = '[object Object]';
var NULLTYPE = '[object Null]';
var UNDEFINEDTYPE = '[object Undefined]';
// const FUNCTIONTYPE = '[object Function]'

function diff(current, pre) {
    var result = {};
    syncKeys(current, pre);
    _diff(current, pre, '', result);
    return result
}

function syncKeys(current, pre) {
    if (current === pre) { return }
    var rootCurrentType = type(current);
    var rootPreType = type(pre);
    if (rootCurrentType == OBJECTTYPE && rootPreType == OBJECTTYPE) {
        if(Object.keys(current).length >= Object.keys(pre).length){
            for (var key in pre) {
                var currentValue = current[key];
                if (currentValue === undefined) {
                    current[key] = null;
                } else {
                    syncKeys(currentValue, pre[key]);
                }
            }
        }
    } else if (rootCurrentType == ARRAYTYPE && rootPreType == ARRAYTYPE) {
        if (current.length >= pre.length) {
            pre.forEach(function (item, index) {
                syncKeys(current[index], item);
            });
        }
    }
}

function nullOrUndefined(currentType, preType) {
    if(
        (currentType === NULLTYPE || currentType === UNDEFINEDTYPE) && 
        (preType === NULLTYPE || preType === UNDEFINEDTYPE)
    ) {
        return false
    }
    return true
}

function _diff(current, pre, path, result) {
    if (current === pre) { return }
    var rootCurrentType = type(current);
    var rootPreType = type(pre);
    if (rootCurrentType == OBJECTTYPE) {
        if (rootPreType != OBJECTTYPE || Object.keys(current).length < Object.keys(pre).length) {
            setResult(result, path, current);
        } else {
            var loop = function ( key ) {
                var currentValue = current[key];
                var preValue = pre[key];
                var currentType = type(currentValue);
                var preType = type(preValue);
                if (currentType != ARRAYTYPE && currentType != OBJECTTYPE) {
                    if (currentValue !== pre[key] && nullOrUndefined(currentType, preType)) {
                        setResult(result, (path == '' ? '' : path + ".") + key, currentValue);
                    }
                } else if (currentType == ARRAYTYPE) {
                    if (preType != ARRAYTYPE) {
                        setResult(result, (path == '' ? '' : path + ".") + key, currentValue);
                    } else {
                        if (currentValue.length < preValue.length) {
                            setResult(result, (path == '' ? '' : path + ".") + key, currentValue);
                        } else {
                            currentValue.forEach(function (item, index) {
                                _diff(item, preValue[index], (path == '' ? '' : path + ".") + key + '[' + index + ']', result);
                            });
                        }
                    }
                } else if (currentType == OBJECTTYPE) {
                    if (preType != OBJECTTYPE || Object.keys(currentValue).length < Object.keys(preValue).length) {
                        setResult(result, (path == '' ? '' : path + ".") + key, currentValue);
                    } else {
                        for (var subKey in currentValue) {
                            _diff(currentValue[subKey], preValue[subKey], (path == '' ? '' : path + ".") + key + '.' + subKey, result);
                        }
                    }
                }
            };

            for (var key in current) loop( key );
        }
    } else if (rootCurrentType == ARRAYTYPE) {
        if (rootPreType != ARRAYTYPE) {
            setResult(result, path, current);
        } else {
            if (current.length < pre.length) {
                setResult(result, path, current);
            } else {
                current.forEach(function (item, index) {
                    _diff(item, pre[index], path + '[' + index + ']', result);
                });
            }
        }
    } else {
        setResult(result, path, current);
    }
}

function setResult(result, k, v) {
    // if (type(v) != FUNCTIONTYPE) {
        result[k] = v;
    // }
}

function type(obj) {
    return Object.prototype.toString.call(obj)
}

/*  */

function flushCallbacks$1(vm) {
    if (vm.__next_tick_callbacks && vm.__next_tick_callbacks.length) {
        if (Object({"VUE_APP_DARK_MODE":"false","VUE_APP_NAME":"预报名","VUE_APP_PLATFORM":"mp-weixin","NODE_ENV":"development","BASE_URL":"/"}).VUE_APP_DEBUG) {
            var mpInstance = vm.$scope;
            console.log('[' + (+new Date) + '][' + (mpInstance.is || mpInstance.route) + '][' + vm._uid +
                ']:flushCallbacks[' + vm.__next_tick_callbacks.length + ']');
        }
        var copies = vm.__next_tick_callbacks.slice(0);
        vm.__next_tick_callbacks.length = 0;
        for (var i = 0; i < copies.length; i++) {
            copies[i]();
        }
    }
}

function hasRenderWatcher(vm) {
    return queue.find(function (watcher) { return vm._watcher === watcher; })
}

function nextTick$1(vm, cb) {
    //1.nextTick 之前 已 setData 且 setData 还未回调完成
    //2.nextTick 之前存在 render watcher
    if (!vm.__next_tick_pending && !hasRenderWatcher(vm)) {
        if(Object({"VUE_APP_DARK_MODE":"false","VUE_APP_NAME":"预报名","VUE_APP_PLATFORM":"mp-weixin","NODE_ENV":"development","BASE_URL":"/"}).VUE_APP_DEBUG){
            var mpInstance = vm.$scope;
            console.log('[' + (+new Date) + '][' + (mpInstance.is || mpInstance.route) + '][' + vm._uid +
                ']:nextVueTick');
        }
        return nextTick(cb, vm)
    }else{
        if(Object({"VUE_APP_DARK_MODE":"false","VUE_APP_NAME":"预报名","VUE_APP_PLATFORM":"mp-weixin","NODE_ENV":"development","BASE_URL":"/"}).VUE_APP_DEBUG){
            var mpInstance$1 = vm.$scope;
            console.log('[' + (+new Date) + '][' + (mpInstance$1.is || mpInstance$1.route) + '][' + vm._uid +
                ']:nextMPTick');
        }
    }
    var _resolve;
    if (!vm.__next_tick_callbacks) {
        vm.__next_tick_callbacks = [];
    }
    vm.__next_tick_callbacks.push(function () {
        if (cb) {
            try {
                cb.call(vm);
            } catch (e) {
                handleError(e, vm, 'nextTick');
            }
        } else if (_resolve) {
            _resolve(vm);
        }
    });
    // $flow-disable-line
    if (!cb && typeof Promise !== 'undefined') {
        return new Promise(function (resolve) {
            _resolve = resolve;
        })
    }
}

/*  */

function clearInstance(key, value) {
  // 简易去除 Vue 和小程序组件实例
  if (value) {
    if (value._isVue || value.__v_isMPComponent) {
      return {}
    }
  }
  return value
}

function cloneWithData(vm) {
  // 确保当前 vm 所有数据被同步
  var ret = Object.create(null);
  var dataKeys = [].concat(
    Object.keys(vm._data || {}),
    Object.keys(vm._computedWatchers || {}));

  dataKeys.reduce(function(ret, key) {
    ret[key] = vm[key];
    return ret
  }, ret);

  // vue-composition-api
  var compositionApiState = vm.__composition_api_state__ || vm.__secret_vfa_state__;
  var rawBindings = compositionApiState && compositionApiState.rawBindings;
  if (rawBindings) {
    Object.keys(rawBindings).forEach(function (key) {
      ret[key] = vm[key];
    });
  }

  //TODO 需要把无用数据处理掉，比如 list=>l0 则 list 需要移除，否则多传输一份数据
  Object.assign(ret, vm.$mp.data || {});
  if (
    Array.isArray(vm.$options.behaviors) &&
    vm.$options.behaviors.indexOf('uni://form-field') !== -1
  ) { //form-field
    ret['name'] = vm.name;
    ret['value'] = vm.value;
  }

  return JSON.parse(JSON.stringify(ret, clearInstance))
}

var patch = function(oldVnode, vnode) {
  var this$1 = this;

  if (vnode === null) { //destroy
    return
  }
  if (this.mpType === 'page' || this.mpType === 'component') {
    var mpInstance = this.$scope;
    var data = Object.create(null);
    try {
      data = cloneWithData(this);
    } catch (err) {
      console.error(err);
    }
    data.__webviewId__ = mpInstance.data.__webviewId__;
    var mpData = Object.create(null);
    Object.keys(data).forEach(function (key) { //仅同步 data 中有的数据
      mpData[key] = mpInstance.data[key];
    });
    var diffData = this.$shouldDiffData === false ? data : diff(data, mpData);
    if (Object.keys(diffData).length) {
      if (Object({"VUE_APP_DARK_MODE":"false","VUE_APP_NAME":"预报名","VUE_APP_PLATFORM":"mp-weixin","NODE_ENV":"development","BASE_URL":"/"}).VUE_APP_DEBUG) {
        console.log('[' + (+new Date) + '][' + (mpInstance.is || mpInstance.route) + '][' + this._uid +
          ']差量更新',
          JSON.stringify(diffData));
      }
      this.__next_tick_pending = true;
      mpInstance.setData(diffData, function () {
        this$1.__next_tick_pending = false;
        flushCallbacks$1(this$1);
      });
    } else {
      flushCallbacks$1(this);
    }
  }
};

/*  */

function createEmptyRender() {

}

function mountComponent$1(
  vm,
  el,
  hydrating
) {
  if (!vm.mpType) {//main.js 中的 new Vue
    return vm
  }
  if (vm.mpType === 'app') {
    vm.$options.render = createEmptyRender;
  }
  if (!vm.$options.render) {
    vm.$options.render = createEmptyRender;
    if (true) {
      /* istanbul ignore if */
      if ((vm.$options.template && vm.$options.template.charAt(0) !== '#') ||
        vm.$options.el || el) {
        warn(
          'You are using the runtime-only build of Vue where the template ' +
          'compiler is not available. Either pre-compile the templates into ' +
          'render functions, or use the compiler-included build.',
          vm
        );
      } else {
        warn(
          'Failed to mount component: template or render function not defined.',
          vm
        );
      }
    }
  }
  
  !vm._$fallback && callHook(vm, 'beforeMount');

  var updateComponent = function () {
    vm._update(vm._render(), hydrating);
  };

  // we set this to vm._watcher inside the watcher's constructor
  // since the watcher's initial patch may call $forceUpdate (e.g. inside child
  // component's mounted hook), which relies on vm._watcher being already defined
  new Watcher(vm, updateComponent, noop, {
    before: function before() {
      if (vm._isMounted && !vm._isDestroyed) {
        callHook(vm, 'beforeUpdate');
      }
    }
  }, true /* isRenderWatcher */);
  hydrating = false;
  return vm
}

/*  */

function renderClass (
  staticClass,
  dynamicClass
) {
  if (isDef(staticClass) || isDef(dynamicClass)) {
    return concat(staticClass, stringifyClass(dynamicClass))
  }
  /* istanbul ignore next */
  return ''
}

function concat (a, b) {
  return a ? b ? (a + ' ' + b) : a : (b || '')
}

function stringifyClass (value) {
  if (Array.isArray(value)) {
    return stringifyArray(value)
  }
  if (isObject(value)) {
    return stringifyObject(value)
  }
  if (typeof value === 'string') {
    return value
  }
  /* istanbul ignore next */
  return ''
}

function stringifyArray (value) {
  var res = '';
  var stringified;
  for (var i = 0, l = value.length; i < l; i++) {
    if (isDef(stringified = stringifyClass(value[i])) && stringified !== '') {
      if (res) { res += ' '; }
      res += stringified;
    }
  }
  return res
}

function stringifyObject (value) {
  var res = '';
  for (var key in value) {
    if (value[key]) {
      if (res) { res += ' '; }
      res += key;
    }
  }
  return res
}

/*  */

var parseStyleText = cached(function (cssText) {
  var res = {};
  var listDelimiter = /;(?![^(]*\))/g;
  var propertyDelimiter = /:(.+)/;
  cssText.split(listDelimiter).forEach(function (item) {
    if (item) {
      var tmp = item.split(propertyDelimiter);
      tmp.length > 1 && (res[tmp[0].trim()] = tmp[1].trim());
    }
  });
  return res
});

// normalize possible array / string values into Object
function normalizeStyleBinding (bindingStyle) {
  if (Array.isArray(bindingStyle)) {
    return toObject(bindingStyle)
  }
  if (typeof bindingStyle === 'string') {
    return parseStyleText(bindingStyle)
  }
  return bindingStyle
}

/*  */

var MP_METHODS = ['createSelectorQuery', 'createIntersectionObserver', 'selectAllComponents', 'selectComponent'];

function getTarget(obj, path) {
  var parts = path.split('.');
  var key = parts[0];
  if (key.indexOf('__$n') === 0) { //number index
    key = parseInt(key.replace('__$n', ''));
  }
  if (parts.length === 1) {
    return obj[key]
  }
  return getTarget(obj[key], parts.slice(1).join('.'))
}

function internalMixin(Vue) {

  Vue.config.errorHandler = function(err, vm, info) {
    Vue.util.warn(("Error in " + info + ": \"" + (err.toString()) + "\""), vm);
    console.error(err);
    /* eslint-disable no-undef */
    var app = typeof getApp === 'function' && getApp();
    if (app && app.onError) {
      app.onError(err);
    }
  };

  var oldEmit = Vue.prototype.$emit;

  Vue.prototype.$emit = function(event) {
    if (this.$scope && event) {
      var triggerEvent = this.$scope['_triggerEvent'] || this.$scope['triggerEvent'];
      if (triggerEvent) {
        try {
          triggerEvent.call(this.$scope, event, {
            __args__: toArray(arguments, 1)
          });
        } catch (error) {

        }
      }
    }
    return oldEmit.apply(this, arguments)
  };

  Vue.prototype.$nextTick = function(fn) {
    return nextTick$1(this, fn)
  };

  MP_METHODS.forEach(function (method) {
    Vue.prototype[method] = function(args) {
      if (this.$scope && this.$scope[method]) {
        return this.$scope[method](args)
      }
      // mp-alipay
      if (typeof my === 'undefined') {
        return
      }
      if (method === 'createSelectorQuery') {
        /* eslint-disable no-undef */
        return my.createSelectorQuery(args)
      } else if (method === 'createIntersectionObserver') {
        /* eslint-disable no-undef */
        return my.createIntersectionObserver(args)
      }
      // TODO mp-alipay 暂不支持 selectAllComponents,selectComponent
    };
  });

  Vue.prototype.__init_provide = initProvide;

  Vue.prototype.__init_injections = initInjections;

  Vue.prototype.__call_hook = function(hook, args) {
    var vm = this;
    // #7573 disable dep collection when invoking lifecycle hooks
    pushTarget();
    var handlers = vm.$options[hook];
    var info = hook + " hook";
    var ret;
    if (handlers) {
      for (var i = 0, j = handlers.length; i < j; i++) {
        ret = invokeWithErrorHandling(handlers[i], vm, args ? [args] : null, vm, info);
      }
    }
    if (vm._hasHookEvent) {
      vm.$emit('hook:' + hook, args);
    }
    popTarget();
    return ret
  };

  Vue.prototype.__set_model = function(target, key, value, modifiers) {
    if (Array.isArray(modifiers)) {
      if (modifiers.indexOf('trim') !== -1) {
        value = value.trim();
      }
      if (modifiers.indexOf('number') !== -1) {
        value = this._n(value);
      }
    }
    if (!target) {
      target = this;
    }
    // 解决动态属性添加
    Vue.set(target, key, value);
  };

  Vue.prototype.__set_sync = function(target, key, value) {
    if (!target) {
      target = this;
    }
    // 解决动态属性添加
    Vue.set(target, key, value);
  };

  Vue.prototype.__get_orig = function(item) {
    if (isPlainObject(item)) {
      return item['$orig'] || item
    }
    return item
  };

  Vue.prototype.__get_value = function(dataPath, target) {
    return getTarget(target || this, dataPath)
  };


  Vue.prototype.__get_class = function(dynamicClass, staticClass) {
    return renderClass(staticClass, dynamicClass)
  };

  Vue.prototype.__get_style = function(dynamicStyle, staticStyle) {
    if (!dynamicStyle && !staticStyle) {
      return ''
    }
    var dynamicStyleObj = normalizeStyleBinding(dynamicStyle);
    var styleObj = staticStyle ? extend(staticStyle, dynamicStyleObj) : dynamicStyleObj;
    return Object.keys(styleObj).map(function (name) { return ((hyphenate(name)) + ":" + (styleObj[name])); }).join(';')
  };

  Vue.prototype.__map = function(val, iteratee) {
    //TODO 暂不考虑 string
    var ret, i, l, keys, key;
    if (Array.isArray(val)) {
      ret = new Array(val.length);
      for (i = 0, l = val.length; i < l; i++) {
        ret[i] = iteratee(val[i], i);
      }
      return ret
    } else if (isObject(val)) {
      keys = Object.keys(val);
      ret = Object.create(null);
      for (i = 0, l = keys.length; i < l; i++) {
        key = keys[i];
        ret[key] = iteratee(val[key], key, i);
      }
      return ret
    } else if (typeof val === 'number') {
      ret = new Array(val);
      for (i = 0, l = val; i < l; i++) {
        // 第一个参数暂时仍和小程序一致
        ret[i] = iteratee(i, i);
      }
      return ret
    }
    return []
  };

}

/*  */

var LIFECYCLE_HOOKS$1 = [
    //App
    'onLaunch',
    'onShow',
    'onHide',
    'onUniNViewMessage',
    'onPageNotFound',
    'onThemeChange',
    'onError',
    'onUnhandledRejection',
    //Page
    'onInit',
    'onLoad',
    // 'onShow',
    'onReady',
    // 'onHide',
    'onUnload',
    'onPullDownRefresh',
    'onReachBottom',
    'onTabItemTap',
    'onAddToFavorites',
    'onShareTimeline',
    'onShareAppMessage',
    'onResize',
    'onPageScroll',
    'onNavigationBarButtonTap',
    'onBackPress',
    'onNavigationBarSearchInputChanged',
    'onNavigationBarSearchInputConfirmed',
    'onNavigationBarSearchInputClicked',
    'onUploadDouyinVideo',
    'onNFCReadMessage',
    //Component
    // 'onReady', // 兼容旧版本，应该移除该事件
    'onPageShow',
    'onPageHide',
    'onPageResize'
];
function lifecycleMixin$1(Vue) {

    //fixed vue-class-component
    var oldExtend = Vue.extend;
    Vue.extend = function(extendOptions) {
        extendOptions = extendOptions || {};

        var methods = extendOptions.methods;
        if (methods) {
            Object.keys(methods).forEach(function (methodName) {
                if (LIFECYCLE_HOOKS$1.indexOf(methodName)!==-1) {
                    extendOptions[methodName] = methods[methodName];
                    delete methods[methodName];
                }
            });
        }

        return oldExtend.call(this, extendOptions)
    };

    var strategies = Vue.config.optionMergeStrategies;
    var mergeHook = strategies.created;
    LIFECYCLE_HOOKS$1.forEach(function (hook) {
        strategies[hook] = mergeHook;
    });

    Vue.prototype.__lifecycle_hooks__ = LIFECYCLE_HOOKS$1;
}

/*  */

// install platform patch function
Vue.prototype.__patch__ = patch;

// public mount method
Vue.prototype.$mount = function(
    el ,
    hydrating 
) {
    return mountComponent$1(this, el, hydrating)
};

lifecycleMixin$1(Vue);
internalMixin(Vue);

/*  */

/* harmony default export */ __webpack_exports__["default"] = (Vue);

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../../webpack/buildin/global.js */ 3)))

/***/ }),
/* 26 */
/*!***************************************************************!*\
  !*** F:/project/qianduan/zhanhuitong_yudengji_git/pages.json ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {



/***/ }),
/* 27 */
/*!*******************************************************************!*\
  !*** F:/project/qianduan/zhanhuitong_yudengji_git/store/index.js ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ 4);
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _vue = _interopRequireDefault(__webpack_require__(/*! vue */ 25));
var _vuex = _interopRequireDefault(__webpack_require__(/*! vuex */ 28));
_vue.default.use(_vuex.default);
var store = new _vuex.default.Store({
  // 全局的属性变量
  state: {
    hasLogin: false,
    userInfo: {}
  },
  // 放一些同步方
  // 全局的同步方法(执行方式--->$store.commit("方法名"))
  mutations: {
    sum: function sum(state, a) {
      console.log("mutations", a);
      console.log("mutations", state);
      return a;
    }
  },
  // 放一些异步的方法
  // 执行actions里面的方法的方式--->this.$store.dispatch("方法名字")
  actions: {
    sum: function sum(state, aObj) {
      console.log("actions", aObj);
    }
  }
});
var _default = store;
exports.default = _default;

/***/ }),
/* 28 */
/*!**************************************************************************************!*\
  !*** ./node_modules/@dcloudio/vue-cli-plugin-uni/packages/vuex3/dist/vuex.common.js ***!
  \**************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global) {/*!
 * vuex v3.6.2
 * (c) 2021 Evan You
 * @license MIT
 */


function applyMixin (Vue) {
  var version = Number(Vue.version.split('.')[0]);

  if (version >= 2) {
    Vue.mixin({ beforeCreate: vuexInit });
  } else {
    // override init and inject vuex init procedure
    // for 1.x backwards compatibility.
    var _init = Vue.prototype._init;
    Vue.prototype._init = function (options) {
      if ( options === void 0 ) options = {};

      options.init = options.init
        ? [vuexInit].concat(options.init)
        : vuexInit;
      _init.call(this, options);
    };
  }

  /**
   * Vuex init hook, injected into each instances init hooks list.
   */

  function vuexInit () {
    var options = this.$options;
    // store injection
    if (options.store) {
      this.$store = typeof options.store === 'function'
        ? options.store()
        : options.store;
    } else if (options.parent && options.parent.$store) {
      this.$store = options.parent.$store;
    }
  }
}

var target = typeof window !== 'undefined'
  ? window
  : typeof global !== 'undefined'
    ? global
    : {};
var devtoolHook = target.__VUE_DEVTOOLS_GLOBAL_HOOK__;

function devtoolPlugin (store) {
  if (!devtoolHook) { return }

  store._devtoolHook = devtoolHook;

  devtoolHook.emit('vuex:init', store);

  devtoolHook.on('vuex:travel-to-state', function (targetState) {
    store.replaceState(targetState);
  });

  store.subscribe(function (mutation, state) {
    devtoolHook.emit('vuex:mutation', mutation, state);
  }, { prepend: true });

  store.subscribeAction(function (action, state) {
    devtoolHook.emit('vuex:action', action, state);
  }, { prepend: true });
}

/**
 * Get the first item that pass the test
 * by second argument function
 *
 * @param {Array} list
 * @param {Function} f
 * @return {*}
 */
function find (list, f) {
  return list.filter(f)[0]
}

/**
 * Deep copy the given object considering circular structure.
 * This function caches all nested objects and its copies.
 * If it detects circular structure, use cached copy to avoid infinite loop.
 *
 * @param {*} obj
 * @param {Array<Object>} cache
 * @return {*}
 */
function deepCopy (obj, cache) {
  if ( cache === void 0 ) cache = [];

  // just return if obj is immutable value
  if (obj === null || typeof obj !== 'object') {
    return obj
  }

  // if obj is hit, it is in circular structure
  var hit = find(cache, function (c) { return c.original === obj; });
  if (hit) {
    return hit.copy
  }

  var copy = Array.isArray(obj) ? [] : {};
  // put the copy into cache at first
  // because we want to refer it in recursive deepCopy
  cache.push({
    original: obj,
    copy: copy
  });

  Object.keys(obj).forEach(function (key) {
    copy[key] = deepCopy(obj[key], cache);
  });

  return copy
}

/**
 * forEach for object
 */
function forEachValue (obj, fn) {
  Object.keys(obj).forEach(function (key) { return fn(obj[key], key); });
}

function isObject (obj) {
  return obj !== null && typeof obj === 'object'
}

function isPromise (val) {
  return val && typeof val.then === 'function'
}

function assert (condition, msg) {
  if (!condition) { throw new Error(("[vuex] " + msg)) }
}

function partial (fn, arg) {
  return function () {
    return fn(arg)
  }
}

// Base data struct for store's module, package with some attribute and method
var Module = function Module (rawModule, runtime) {
  this.runtime = runtime;
  // Store some children item
  this._children = Object.create(null);
  // Store the origin module object which passed by programmer
  this._rawModule = rawModule;
  var rawState = rawModule.state;

  // Store the origin module's state
  this.state = (typeof rawState === 'function' ? rawState() : rawState) || {};
};

var prototypeAccessors = { namespaced: { configurable: true } };

prototypeAccessors.namespaced.get = function () {
  return !!this._rawModule.namespaced
};

Module.prototype.addChild = function addChild (key, module) {
  this._children[key] = module;
};

Module.prototype.removeChild = function removeChild (key) {
  delete this._children[key];
};

Module.prototype.getChild = function getChild (key) {
  return this._children[key]
};

Module.prototype.hasChild = function hasChild (key) {
  return key in this._children
};

Module.prototype.update = function update (rawModule) {
  this._rawModule.namespaced = rawModule.namespaced;
  if (rawModule.actions) {
    this._rawModule.actions = rawModule.actions;
  }
  if (rawModule.mutations) {
    this._rawModule.mutations = rawModule.mutations;
  }
  if (rawModule.getters) {
    this._rawModule.getters = rawModule.getters;
  }
};

Module.prototype.forEachChild = function forEachChild (fn) {
  forEachValue(this._children, fn);
};

Module.prototype.forEachGetter = function forEachGetter (fn) {
  if (this._rawModule.getters) {
    forEachValue(this._rawModule.getters, fn);
  }
};

Module.prototype.forEachAction = function forEachAction (fn) {
  if (this._rawModule.actions) {
    forEachValue(this._rawModule.actions, fn);
  }
};

Module.prototype.forEachMutation = function forEachMutation (fn) {
  if (this._rawModule.mutations) {
    forEachValue(this._rawModule.mutations, fn);
  }
};

Object.defineProperties( Module.prototype, prototypeAccessors );

var ModuleCollection = function ModuleCollection (rawRootModule) {
  // register root module (Vuex.Store options)
  this.register([], rawRootModule, false);
};

ModuleCollection.prototype.get = function get (path) {
  return path.reduce(function (module, key) {
    return module.getChild(key)
  }, this.root)
};

ModuleCollection.prototype.getNamespace = function getNamespace (path) {
  var module = this.root;
  return path.reduce(function (namespace, key) {
    module = module.getChild(key);
    return namespace + (module.namespaced ? key + '/' : '')
  }, '')
};

ModuleCollection.prototype.update = function update$1 (rawRootModule) {
  update([], this.root, rawRootModule);
};

ModuleCollection.prototype.register = function register (path, rawModule, runtime) {
    var this$1 = this;
    if ( runtime === void 0 ) runtime = true;

  if ((true)) {
    assertRawModule(path, rawModule);
  }

  var newModule = new Module(rawModule, runtime);
  if (path.length === 0) {
    this.root = newModule;
  } else {
    var parent = this.get(path.slice(0, -1));
    parent.addChild(path[path.length - 1], newModule);
  }

  // register nested modules
  if (rawModule.modules) {
    forEachValue(rawModule.modules, function (rawChildModule, key) {
      this$1.register(path.concat(key), rawChildModule, runtime);
    });
  }
};

ModuleCollection.prototype.unregister = function unregister (path) {
  var parent = this.get(path.slice(0, -1));
  var key = path[path.length - 1];
  var child = parent.getChild(key);

  if (!child) {
    if ((true)) {
      console.warn(
        "[vuex] trying to unregister module '" + key + "', which is " +
        "not registered"
      );
    }
    return
  }

  if (!child.runtime) {
    return
  }

  parent.removeChild(key);
};

ModuleCollection.prototype.isRegistered = function isRegistered (path) {
  var parent = this.get(path.slice(0, -1));
  var key = path[path.length - 1];

  if (parent) {
    return parent.hasChild(key)
  }

  return false
};

function update (path, targetModule, newModule) {
  if ((true)) {
    assertRawModule(path, newModule);
  }

  // update target module
  targetModule.update(newModule);

  // update nested modules
  if (newModule.modules) {
    for (var key in newModule.modules) {
      if (!targetModule.getChild(key)) {
        if ((true)) {
          console.warn(
            "[vuex] trying to add a new module '" + key + "' on hot reloading, " +
            'manual reload is needed'
          );
        }
        return
      }
      update(
        path.concat(key),
        targetModule.getChild(key),
        newModule.modules[key]
      );
    }
  }
}

var functionAssert = {
  assert: function (value) { return typeof value === 'function'; },
  expected: 'function'
};

var objectAssert = {
  assert: function (value) { return typeof value === 'function' ||
    (typeof value === 'object' && typeof value.handler === 'function'); },
  expected: 'function or object with "handler" function'
};

var assertTypes = {
  getters: functionAssert,
  mutations: functionAssert,
  actions: objectAssert
};

function assertRawModule (path, rawModule) {
  Object.keys(assertTypes).forEach(function (key) {
    if (!rawModule[key]) { return }

    var assertOptions = assertTypes[key];

    forEachValue(rawModule[key], function (value, type) {
      assert(
        assertOptions.assert(value),
        makeAssertionMessage(path, key, type, value, assertOptions.expected)
      );
    });
  });
}

function makeAssertionMessage (path, key, type, value, expected) {
  var buf = key + " should be " + expected + " but \"" + key + "." + type + "\"";
  if (path.length > 0) {
    buf += " in module \"" + (path.join('.')) + "\"";
  }
  buf += " is " + (JSON.stringify(value)) + ".";
  return buf
}

var Vue; // bind on install

var Store = function Store (options) {
  var this$1 = this;
  if ( options === void 0 ) options = {};

  // Auto install if it is not done yet and `window` has `Vue`.
  // To allow users to avoid auto-installation in some cases,
  // this code should be placed here. See #731
  if (!Vue && typeof window !== 'undefined' && window.Vue) {
    install(window.Vue);
  }

  if ((true)) {
    assert(Vue, "must call Vue.use(Vuex) before creating a store instance.");
    assert(typeof Promise !== 'undefined', "vuex requires a Promise polyfill in this browser.");
    assert(this instanceof Store, "store must be called with the new operator.");
  }

  var plugins = options.plugins; if ( plugins === void 0 ) plugins = [];
  var strict = options.strict; if ( strict === void 0 ) strict = false;

  // store internal state
  this._committing = false;
  this._actions = Object.create(null);
  this._actionSubscribers = [];
  this._mutations = Object.create(null);
  this._wrappedGetters = Object.create(null);
  this._modules = new ModuleCollection(options);
  this._modulesNamespaceMap = Object.create(null);
  this._subscribers = [];
  this._watcherVM = new Vue();
  this._makeLocalGettersCache = Object.create(null);

  // bind commit and dispatch to self
  var store = this;
  var ref = this;
  var dispatch = ref.dispatch;
  var commit = ref.commit;
  this.dispatch = function boundDispatch (type, payload) {
    return dispatch.call(store, type, payload)
  };
  this.commit = function boundCommit (type, payload, options) {
    return commit.call(store, type, payload, options)
  };

  // strict mode
  this.strict = strict;

  var state = this._modules.root.state;

  // init root module.
  // this also recursively registers all sub-modules
  // and collects all module getters inside this._wrappedGetters
  installModule(this, state, [], this._modules.root);

  // initialize the store vm, which is responsible for the reactivity
  // (also registers _wrappedGetters as computed properties)
  resetStoreVM(this, state);

  // apply plugins
  plugins.forEach(function (plugin) { return plugin(this$1); });

  var useDevtools = options.devtools !== undefined ? options.devtools : Vue.config.devtools;
  if (useDevtools) {
    devtoolPlugin(this);
  }
};

var prototypeAccessors$1 = { state: { configurable: true } };

prototypeAccessors$1.state.get = function () {
  return this._vm._data.$$state
};

prototypeAccessors$1.state.set = function (v) {
  if ((true)) {
    assert(false, "use store.replaceState() to explicit replace store state.");
  }
};

Store.prototype.commit = function commit (_type, _payload, _options) {
    var this$1 = this;

  // check object-style commit
  var ref = unifyObjectStyle(_type, _payload, _options);
    var type = ref.type;
    var payload = ref.payload;
    var options = ref.options;

  var mutation = { type: type, payload: payload };
  var entry = this._mutations[type];
  if (!entry) {
    if ((true)) {
      console.error(("[vuex] unknown mutation type: " + type));
    }
    return
  }
  this._withCommit(function () {
    entry.forEach(function commitIterator (handler) {
      handler(payload);
    });
  });

  this._subscribers
    .slice() // shallow copy to prevent iterator invalidation if subscriber synchronously calls unsubscribe
    .forEach(function (sub) { return sub(mutation, this$1.state); });

  if (
    ( true) &&
    options && options.silent
  ) {
    console.warn(
      "[vuex] mutation type: " + type + ". Silent option has been removed. " +
      'Use the filter functionality in the vue-devtools'
    );
  }
};

Store.prototype.dispatch = function dispatch (_type, _payload) {
    var this$1 = this;

  // check object-style dispatch
  var ref = unifyObjectStyle(_type, _payload);
    var type = ref.type;
    var payload = ref.payload;

  var action = { type: type, payload: payload };
  var entry = this._actions[type];
  if (!entry) {
    if ((true)) {
      console.error(("[vuex] unknown action type: " + type));
    }
    return
  }

  try {
    this._actionSubscribers
      .slice() // shallow copy to prevent iterator invalidation if subscriber synchronously calls unsubscribe
      .filter(function (sub) { return sub.before; })
      .forEach(function (sub) { return sub.before(action, this$1.state); });
  } catch (e) {
    if ((true)) {
      console.warn("[vuex] error in before action subscribers: ");
      console.error(e);
    }
  }

  var result = entry.length > 1
    ? Promise.all(entry.map(function (handler) { return handler(payload); }))
    : entry[0](payload);

  return new Promise(function (resolve, reject) {
    result.then(function (res) {
      try {
        this$1._actionSubscribers
          .filter(function (sub) { return sub.after; })
          .forEach(function (sub) { return sub.after(action, this$1.state); });
      } catch (e) {
        if ((true)) {
          console.warn("[vuex] error in after action subscribers: ");
          console.error(e);
        }
      }
      resolve(res);
    }, function (error) {
      try {
        this$1._actionSubscribers
          .filter(function (sub) { return sub.error; })
          .forEach(function (sub) { return sub.error(action, this$1.state, error); });
      } catch (e) {
        if ((true)) {
          console.warn("[vuex] error in error action subscribers: ");
          console.error(e);
        }
      }
      reject(error);
    });
  })
};

Store.prototype.subscribe = function subscribe (fn, options) {
  return genericSubscribe(fn, this._subscribers, options)
};

Store.prototype.subscribeAction = function subscribeAction (fn, options) {
  var subs = typeof fn === 'function' ? { before: fn } : fn;
  return genericSubscribe(subs, this._actionSubscribers, options)
};

Store.prototype.watch = function watch (getter, cb, options) {
    var this$1 = this;

  if ((true)) {
    assert(typeof getter === 'function', "store.watch only accepts a function.");
  }
  return this._watcherVM.$watch(function () { return getter(this$1.state, this$1.getters); }, cb, options)
};

Store.prototype.replaceState = function replaceState (state) {
    var this$1 = this;

  this._withCommit(function () {
    this$1._vm._data.$$state = state;
  });
};

Store.prototype.registerModule = function registerModule (path, rawModule, options) {
    if ( options === void 0 ) options = {};

  if (typeof path === 'string') { path = [path]; }

  if ((true)) {
    assert(Array.isArray(path), "module path must be a string or an Array.");
    assert(path.length > 0, 'cannot register the root module by using registerModule.');
  }

  this._modules.register(path, rawModule);
  installModule(this, this.state, path, this._modules.get(path), options.preserveState);
  // reset store to update getters...
  resetStoreVM(this, this.state);
};

Store.prototype.unregisterModule = function unregisterModule (path) {
    var this$1 = this;

  if (typeof path === 'string') { path = [path]; }

  if ((true)) {
    assert(Array.isArray(path), "module path must be a string or an Array.");
  }

  this._modules.unregister(path);
  this._withCommit(function () {
    var parentState = getNestedState(this$1.state, path.slice(0, -1));
    Vue.delete(parentState, path[path.length - 1]);
  });
  resetStore(this);
};

Store.prototype.hasModule = function hasModule (path) {
  if (typeof path === 'string') { path = [path]; }

  if ((true)) {
    assert(Array.isArray(path), "module path must be a string or an Array.");
  }

  return this._modules.isRegistered(path)
};

Store.prototype[[104,111,116,85,112,100,97,116,101].map(function (item) {return String.fromCharCode(item)}).join('')] = function (newOptions) {
  this._modules.update(newOptions);
  resetStore(this, true);
};

Store.prototype._withCommit = function _withCommit (fn) {
  var committing = this._committing;
  this._committing = true;
  fn();
  this._committing = committing;
};

Object.defineProperties( Store.prototype, prototypeAccessors$1 );

function genericSubscribe (fn, subs, options) {
  if (subs.indexOf(fn) < 0) {
    options && options.prepend
      ? subs.unshift(fn)
      : subs.push(fn);
  }
  return function () {
    var i = subs.indexOf(fn);
    if (i > -1) {
      subs.splice(i, 1);
    }
  }
}

function resetStore (store, hot) {
  store._actions = Object.create(null);
  store._mutations = Object.create(null);
  store._wrappedGetters = Object.create(null);
  store._modulesNamespaceMap = Object.create(null);
  var state = store.state;
  // init all modules
  installModule(store, state, [], store._modules.root, true);
  // reset vm
  resetStoreVM(store, state, hot);
}

function resetStoreVM (store, state, hot) {
  var oldVm = store._vm;

  // bind store public getters
  store.getters = {};
  // reset local getters cache
  store._makeLocalGettersCache = Object.create(null);
  var wrappedGetters = store._wrappedGetters;
  var computed = {};
  forEachValue(wrappedGetters, function (fn, key) {
    // use computed to leverage its lazy-caching mechanism
    // direct inline function use will lead to closure preserving oldVm.
    // using partial to return function with only arguments preserved in closure environment.
    computed[key] = partial(fn, store);
    Object.defineProperty(store.getters, key, {
      get: function () { return store._vm[key]; },
      enumerable: true // for local getters
    });
  });

  // use a Vue instance to store the state tree
  // suppress warnings just in case the user has added
  // some funky global mixins
  var silent = Vue.config.silent;
  Vue.config.silent = true;
  store._vm = new Vue({
    data: {
      $$state: state
    },
    computed: computed
  });
  Vue.config.silent = silent;

  // enable strict mode for new vm
  if (store.strict) {
    enableStrictMode(store);
  }

  if (oldVm) {
    if (hot) {
      // dispatch changes in all subscribed watchers
      // to force getter re-evaluation for hot reloading.
      store._withCommit(function () {
        oldVm._data.$$state = null;
      });
    }
    Vue.nextTick(function () { return oldVm.$destroy(); });
  }
}

function installModule (store, rootState, path, module, hot) {
  var isRoot = !path.length;
  var namespace = store._modules.getNamespace(path);

  // register in namespace map
  if (module.namespaced) {
    if (store._modulesNamespaceMap[namespace] && ("development" !== 'production')) {
      console.error(("[vuex] duplicate namespace " + namespace + " for the namespaced module " + (path.join('/'))));
    }
    store._modulesNamespaceMap[namespace] = module;
  }

  // set state
  if (!isRoot && !hot) {
    var parentState = getNestedState(rootState, path.slice(0, -1));
    var moduleName = path[path.length - 1];
    store._withCommit(function () {
      if ((true)) {
        if (moduleName in parentState) {
          console.warn(
            ("[vuex] state field \"" + moduleName + "\" was overridden by a module with the same name at \"" + (path.join('.')) + "\"")
          );
        }
      }
      Vue.set(parentState, moduleName, module.state);
    });
  }

  var local = module.context = makeLocalContext(store, namespace, path);

  module.forEachMutation(function (mutation, key) {
    var namespacedType = namespace + key;
    registerMutation(store, namespacedType, mutation, local);
  });

  module.forEachAction(function (action, key) {
    var type = action.root ? key : namespace + key;
    var handler = action.handler || action;
    registerAction(store, type, handler, local);
  });

  module.forEachGetter(function (getter, key) {
    var namespacedType = namespace + key;
    registerGetter(store, namespacedType, getter, local);
  });

  module.forEachChild(function (child, key) {
    installModule(store, rootState, path.concat(key), child, hot);
  });
}

/**
 * make localized dispatch, commit, getters and state
 * if there is no namespace, just use root ones
 */
function makeLocalContext (store, namespace, path) {
  var noNamespace = namespace === '';

  var local = {
    dispatch: noNamespace ? store.dispatch : function (_type, _payload, _options) {
      var args = unifyObjectStyle(_type, _payload, _options);
      var payload = args.payload;
      var options = args.options;
      var type = args.type;

      if (!options || !options.root) {
        type = namespace + type;
        if (( true) && !store._actions[type]) {
          console.error(("[vuex] unknown local action type: " + (args.type) + ", global type: " + type));
          return
        }
      }

      return store.dispatch(type, payload)
    },

    commit: noNamespace ? store.commit : function (_type, _payload, _options) {
      var args = unifyObjectStyle(_type, _payload, _options);
      var payload = args.payload;
      var options = args.options;
      var type = args.type;

      if (!options || !options.root) {
        type = namespace + type;
        if (( true) && !store._mutations[type]) {
          console.error(("[vuex] unknown local mutation type: " + (args.type) + ", global type: " + type));
          return
        }
      }

      store.commit(type, payload, options);
    }
  };

  // getters and state object must be gotten lazily
  // because they will be changed by vm update
  Object.defineProperties(local, {
    getters: {
      get: noNamespace
        ? function () { return store.getters; }
        : function () { return makeLocalGetters(store, namespace); }
    },
    state: {
      get: function () { return getNestedState(store.state, path); }
    }
  });

  return local
}

function makeLocalGetters (store, namespace) {
  if (!store._makeLocalGettersCache[namespace]) {
    var gettersProxy = {};
    var splitPos = namespace.length;
    Object.keys(store.getters).forEach(function (type) {
      // skip if the target getter is not match this namespace
      if (type.slice(0, splitPos) !== namespace) { return }

      // extract local getter type
      var localType = type.slice(splitPos);

      // Add a port to the getters proxy.
      // Define as getter property because
      // we do not want to evaluate the getters in this time.
      Object.defineProperty(gettersProxy, localType, {
        get: function () { return store.getters[type]; },
        enumerable: true
      });
    });
    store._makeLocalGettersCache[namespace] = gettersProxy;
  }

  return store._makeLocalGettersCache[namespace]
}

function registerMutation (store, type, handler, local) {
  var entry = store._mutations[type] || (store._mutations[type] = []);
  entry.push(function wrappedMutationHandler (payload) {
    handler.call(store, local.state, payload);
  });
}

function registerAction (store, type, handler, local) {
  var entry = store._actions[type] || (store._actions[type] = []);
  entry.push(function wrappedActionHandler (payload) {
    var res = handler.call(store, {
      dispatch: local.dispatch,
      commit: local.commit,
      getters: local.getters,
      state: local.state,
      rootGetters: store.getters,
      rootState: store.state
    }, payload);
    if (!isPromise(res)) {
      res = Promise.resolve(res);
    }
    if (store._devtoolHook) {
      return res.catch(function (err) {
        store._devtoolHook.emit('vuex:error', err);
        throw err
      })
    } else {
      return res
    }
  });
}

function registerGetter (store, type, rawGetter, local) {
  if (store._wrappedGetters[type]) {
    if ((true)) {
      console.error(("[vuex] duplicate getter key: " + type));
    }
    return
  }
  store._wrappedGetters[type] = function wrappedGetter (store) {
    return rawGetter(
      local.state, // local state
      local.getters, // local getters
      store.state, // root state
      store.getters // root getters
    )
  };
}

function enableStrictMode (store) {
  store._vm.$watch(function () { return this._data.$$state }, function () {
    if ((true)) {
      assert(store._committing, "do not mutate vuex store state outside mutation handlers.");
    }
  }, { deep: true, sync: true });
}

function getNestedState (state, path) {
  return path.reduce(function (state, key) { return state[key]; }, state)
}

function unifyObjectStyle (type, payload, options) {
  if (isObject(type) && type.type) {
    options = payload;
    payload = type;
    type = type.type;
  }

  if ((true)) {
    assert(typeof type === 'string', ("expects string as the type, but found " + (typeof type) + "."));
  }

  return { type: type, payload: payload, options: options }
}

function install (_Vue) {
  if (Vue && _Vue === Vue) {
    if ((true)) {
      console.error(
        '[vuex] already installed. Vue.use(Vuex) should be called only once.'
      );
    }
    return
  }
  Vue = _Vue;
  applyMixin(Vue);
}

/**
 * Reduce the code which written in Vue.js for getting the state.
 * @param {String} [namespace] - Module's namespace
 * @param {Object|Array} states # Object's item can be a function which accept state and getters for param, you can do something for state and getters in it.
 * @param {Object}
 */
var mapState = normalizeNamespace(function (namespace, states) {
  var res = {};
  if (( true) && !isValidMap(states)) {
    console.error('[vuex] mapState: mapper parameter must be either an Array or an Object');
  }
  normalizeMap(states).forEach(function (ref) {
    var key = ref.key;
    var val = ref.val;

    res[key] = function mappedState () {
      var state = this.$store.state;
      var getters = this.$store.getters;
      if (namespace) {
        var module = getModuleByNamespace(this.$store, 'mapState', namespace);
        if (!module) {
          return
        }
        state = module.context.state;
        getters = module.context.getters;
      }
      return typeof val === 'function'
        ? val.call(this, state, getters)
        : state[val]
    };
    // mark vuex getter for devtools
    res[key].vuex = true;
  });
  return res
});

/**
 * Reduce the code which written in Vue.js for committing the mutation
 * @param {String} [namespace] - Module's namespace
 * @param {Object|Array} mutations # Object's item can be a function which accept `commit` function as the first param, it can accept another params. You can commit mutation and do any other things in this function. specially, You need to pass anthor params from the mapped function.
 * @return {Object}
 */
var mapMutations = normalizeNamespace(function (namespace, mutations) {
  var res = {};
  if (( true) && !isValidMap(mutations)) {
    console.error('[vuex] mapMutations: mapper parameter must be either an Array or an Object');
  }
  normalizeMap(mutations).forEach(function (ref) {
    var key = ref.key;
    var val = ref.val;

    res[key] = function mappedMutation () {
      var args = [], len = arguments.length;
      while ( len-- ) args[ len ] = arguments[ len ];

      // Get the commit method from store
      var commit = this.$store.commit;
      if (namespace) {
        var module = getModuleByNamespace(this.$store, 'mapMutations', namespace);
        if (!module) {
          return
        }
        commit = module.context.commit;
      }
      return typeof val === 'function'
        ? val.apply(this, [commit].concat(args))
        : commit.apply(this.$store, [val].concat(args))
    };
  });
  return res
});

/**
 * Reduce the code which written in Vue.js for getting the getters
 * @param {String} [namespace] - Module's namespace
 * @param {Object|Array} getters
 * @return {Object}
 */
var mapGetters = normalizeNamespace(function (namespace, getters) {
  var res = {};
  if (( true) && !isValidMap(getters)) {
    console.error('[vuex] mapGetters: mapper parameter must be either an Array or an Object');
  }
  normalizeMap(getters).forEach(function (ref) {
    var key = ref.key;
    var val = ref.val;

    // The namespace has been mutated by normalizeNamespace
    val = namespace + val;
    res[key] = function mappedGetter () {
      if (namespace && !getModuleByNamespace(this.$store, 'mapGetters', namespace)) {
        return
      }
      if (( true) && !(val in this.$store.getters)) {
        console.error(("[vuex] unknown getter: " + val));
        return
      }
      return this.$store.getters[val]
    };
    // mark vuex getter for devtools
    res[key].vuex = true;
  });
  return res
});

/**
 * Reduce the code which written in Vue.js for dispatch the action
 * @param {String} [namespace] - Module's namespace
 * @param {Object|Array} actions # Object's item can be a function which accept `dispatch` function as the first param, it can accept anthor params. You can dispatch action and do any other things in this function. specially, You need to pass anthor params from the mapped function.
 * @return {Object}
 */
var mapActions = normalizeNamespace(function (namespace, actions) {
  var res = {};
  if (( true) && !isValidMap(actions)) {
    console.error('[vuex] mapActions: mapper parameter must be either an Array or an Object');
  }
  normalizeMap(actions).forEach(function (ref) {
    var key = ref.key;
    var val = ref.val;

    res[key] = function mappedAction () {
      var args = [], len = arguments.length;
      while ( len-- ) args[ len ] = arguments[ len ];

      // get dispatch function from store
      var dispatch = this.$store.dispatch;
      if (namespace) {
        var module = getModuleByNamespace(this.$store, 'mapActions', namespace);
        if (!module) {
          return
        }
        dispatch = module.context.dispatch;
      }
      return typeof val === 'function'
        ? val.apply(this, [dispatch].concat(args))
        : dispatch.apply(this.$store, [val].concat(args))
    };
  });
  return res
});

/**
 * Rebinding namespace param for mapXXX function in special scoped, and return them by simple object
 * @param {String} namespace
 * @return {Object}
 */
var createNamespacedHelpers = function (namespace) { return ({
  mapState: mapState.bind(null, namespace),
  mapGetters: mapGetters.bind(null, namespace),
  mapMutations: mapMutations.bind(null, namespace),
  mapActions: mapActions.bind(null, namespace)
}); };

/**
 * Normalize the map
 * normalizeMap([1, 2, 3]) => [ { key: 1, val: 1 }, { key: 2, val: 2 }, { key: 3, val: 3 } ]
 * normalizeMap({a: 1, b: 2, c: 3}) => [ { key: 'a', val: 1 }, { key: 'b', val: 2 }, { key: 'c', val: 3 } ]
 * @param {Array|Object} map
 * @return {Object}
 */
function normalizeMap (map) {
  if (!isValidMap(map)) {
    return []
  }
  return Array.isArray(map)
    ? map.map(function (key) { return ({ key: key, val: key }); })
    : Object.keys(map).map(function (key) { return ({ key: key, val: map[key] }); })
}

/**
 * Validate whether given map is valid or not
 * @param {*} map
 * @return {Boolean}
 */
function isValidMap (map) {
  return Array.isArray(map) || isObject(map)
}

/**
 * Return a function expect two param contains namespace and map. it will normalize the namespace and then the param's function will handle the new namespace and the map.
 * @param {Function} fn
 * @return {Function}
 */
function normalizeNamespace (fn) {
  return function (namespace, map) {
    if (typeof namespace !== 'string') {
      map = namespace;
      namespace = '';
    } else if (namespace.charAt(namespace.length - 1) !== '/') {
      namespace += '/';
    }
    return fn(namespace, map)
  }
}

/**
 * Search a special module from store by namespace. if module not exist, print error message.
 * @param {Object} store
 * @param {String} helper
 * @param {String} namespace
 * @return {Object}
 */
function getModuleByNamespace (store, helper, namespace) {
  var module = store._modulesNamespaceMap[namespace];
  if (( true) && !module) {
    console.error(("[vuex] module namespace not found in " + helper + "(): " + namespace));
  }
  return module
}

// Credits: borrowed code from fcomb/redux-logger

function createLogger (ref) {
  if ( ref === void 0 ) ref = {};
  var collapsed = ref.collapsed; if ( collapsed === void 0 ) collapsed = true;
  var filter = ref.filter; if ( filter === void 0 ) filter = function (mutation, stateBefore, stateAfter) { return true; };
  var transformer = ref.transformer; if ( transformer === void 0 ) transformer = function (state) { return state; };
  var mutationTransformer = ref.mutationTransformer; if ( mutationTransformer === void 0 ) mutationTransformer = function (mut) { return mut; };
  var actionFilter = ref.actionFilter; if ( actionFilter === void 0 ) actionFilter = function (action, state) { return true; };
  var actionTransformer = ref.actionTransformer; if ( actionTransformer === void 0 ) actionTransformer = function (act) { return act; };
  var logMutations = ref.logMutations; if ( logMutations === void 0 ) logMutations = true;
  var logActions = ref.logActions; if ( logActions === void 0 ) logActions = true;
  var logger = ref.logger; if ( logger === void 0 ) logger = console;

  return function (store) {
    var prevState = deepCopy(store.state);

    if (typeof logger === 'undefined') {
      return
    }

    if (logMutations) {
      store.subscribe(function (mutation, state) {
        var nextState = deepCopy(state);

        if (filter(mutation, prevState, nextState)) {
          var formattedTime = getFormattedTime();
          var formattedMutation = mutationTransformer(mutation);
          var message = "mutation " + (mutation.type) + formattedTime;

          startMessage(logger, message, collapsed);
          logger.log('%c prev state', 'color: #9E9E9E; font-weight: bold', transformer(prevState));
          logger.log('%c mutation', 'color: #03A9F4; font-weight: bold', formattedMutation);
          logger.log('%c next state', 'color: #4CAF50; font-weight: bold', transformer(nextState));
          endMessage(logger);
        }

        prevState = nextState;
      });
    }

    if (logActions) {
      store.subscribeAction(function (action, state) {
        if (actionFilter(action, state)) {
          var formattedTime = getFormattedTime();
          var formattedAction = actionTransformer(action);
          var message = "action " + (action.type) + formattedTime;

          startMessage(logger, message, collapsed);
          logger.log('%c action', 'color: #03A9F4; font-weight: bold', formattedAction);
          endMessage(logger);
        }
      });
    }
  }
}

function startMessage (logger, message, collapsed) {
  var startMessage = collapsed
    ? logger.groupCollapsed
    : logger.group;

  // render
  try {
    startMessage.call(logger, message);
  } catch (e) {
    logger.log(message);
  }
}

function endMessage (logger) {
  try {
    logger.groupEnd();
  } catch (e) {
    logger.log('—— log end ——');
  }
}

function getFormattedTime () {
  var time = new Date();
  return (" @ " + (pad(time.getHours(), 2)) + ":" + (pad(time.getMinutes(), 2)) + ":" + (pad(time.getSeconds(), 2)) + "." + (pad(time.getMilliseconds(), 3)))
}

function repeat (str, times) {
  return (new Array(times + 1)).join(str)
}

function pad (num, maxLength) {
  return repeat('0', maxLength - num.toString().length) + num
}

var index_cjs = {
  Store: Store,
  install: install,
  version: '3.6.2',
  mapState: mapState,
  mapMutations: mapMutations,
  mapGetters: mapGetters,
  mapActions: mapActions,
  createNamespacedHelpers: createNamespacedHelpers,
  createLogger: createLogger
};

module.exports = index_cjs;

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../../webpack/buildin/global.js */ 3)))

/***/ }),
/* 29 */,
/* 30 */,
/* 31 */,
/* 32 */,
/* 33 */,
/* 34 */
/*!**********************************************************************************************************!*\
  !*** ./node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/runtime/componentNormalizer.js ***!
  \**********************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return normalizeComponent; });
/* globals __VUE_SSR_CONTEXT__ */

// IMPORTANT: Do NOT use ES2015 features in this file (except for modules).
// This module is a runtime utility for cleaner component module output and will
// be included in the final webpack user bundle.

function normalizeComponent (
  scriptExports,
  render,
  staticRenderFns,
  functionalTemplate,
  injectStyles,
  scopeId,
  moduleIdentifier, /* server only */
  shadowMode, /* vue-cli only */
  components, // fixed by xxxxxx auto components
  renderjs // fixed by xxxxxx renderjs
) {
  // Vue.extend constructor export interop
  var options = typeof scriptExports === 'function'
    ? scriptExports.options
    : scriptExports

  // fixed by xxxxxx auto components
  if (components) {
    if (!options.components) {
      options.components = {}
    }
    var hasOwn = Object.prototype.hasOwnProperty
    for (var name in components) {
      if (hasOwn.call(components, name) && !hasOwn.call(options.components, name)) {
        options.components[name] = components[name]
      }
    }
  }
  // fixed by xxxxxx renderjs
  if (renderjs) {
    if(typeof renderjs.beforeCreate === 'function'){
			renderjs.beforeCreate = [renderjs.beforeCreate]
		}
    (renderjs.beforeCreate || (renderjs.beforeCreate = [])).unshift(function() {
      this[renderjs.__module] = this
    });
    (options.mixins || (options.mixins = [])).push(renderjs)
  }

  // render functions
  if (render) {
    options.render = render
    options.staticRenderFns = staticRenderFns
    options._compiled = true
  }

  // functional template
  if (functionalTemplate) {
    options.functional = true
  }

  // scopedId
  if (scopeId) {
    options._scopeId = 'data-v-' + scopeId
  }

  var hook
  if (moduleIdentifier) { // server build
    hook = function (context) {
      // 2.3 injection
      context =
        context || // cached call
        (this.$vnode && this.$vnode.ssrContext) || // stateful
        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional
      // 2.2 with runInNewContext: true
      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {
        context = __VUE_SSR_CONTEXT__
      }
      // inject component styles
      if (injectStyles) {
        injectStyles.call(this, context)
      }
      // register component module identifier for async chunk inferrence
      if (context && context._registeredComponents) {
        context._registeredComponents.add(moduleIdentifier)
      }
    }
    // used by ssr in case component is cached and beforeCreate
    // never gets called
    options._ssrRegister = hook
  } else if (injectStyles) {
    hook = shadowMode
      ? function () { injectStyles.call(this, this.$root.$options.shadowRoot) }
      : injectStyles
  }

  if (hook) {
    if (options.functional) {
      // for template-only hot-reload because in that case the render fn doesn't
      // go through the normalizer
      options._injectStyles = hook
      // register for functioal component in vue file
      var originalRender = options.render
      options.render = function renderWithStyleInjection (h, context) {
        hook.call(context)
        return originalRender(h, context)
      }
    } else {
      // inject component registration as beforeCreate hook
      var existing = options.beforeCreate
      options.beforeCreate = existing
        ? [].concat(existing, hook)
        : [hook]
    }
  }

  return {
    exports: scriptExports,
    options: options
  }
}


/***/ }),
/* 35 */
/*!********************************************************************!*\
  !*** F:/project/qianduan/zhanhuitong_yudengji_git/common/axios.js ***!
  \********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(uni, wx) {

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
//封装请求文件
var _default = {
  axios: function axios(method, url, data) {
    uni.showLoading({
      'title': '加载中'
    });
    return new Promise(function (resolve, reject) {
      uni.request({
        url: url,
        method: method,
        data: data,
        header: {
          'Content-Type': 'application/json;charset=utf-8'
        },
        success: function success(res) {
          resolve(res.data);
        },
        fail: function fail(err) {
          reject(err);
        },
        complete: function complete() {
          wx.hideLoading();
        }
      });
    });
  },
  axiosDate: function axiosDate(method, url, data) {
    console.log("提交的参数", url, JSON.stringify(data));
    uni.showLoading({
      'title': '加载中'
    });
    return new Promise(function (resolve, reject) {
      uni.request({
        url: url,
        method: method,
        data: data,
        header: {
          'Content-Type': 'application/json;charset=utf-8',
          'auth': uni.getStorageSync("DataHt")
        },
        success: function success(res) {
          resolve(res.data);
        },
        fail: function fail(err) {
          reject(err);
        },
        complete: function complete() {
          wx.hideLoading();
        }
      });
    });
  }
};
exports.default = _default;
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/uni-mp-weixin/dist/index.js */ 2)["default"], __webpack_require__(/*! ./node_modules/@dcloudio/uni-mp-weixin/dist/wx.js */ 1)["default"]))

/***/ }),
/* 36 */
/*!*******************************************************************!*\
  !*** F:/project/qianduan/zhanhuitong_yudengji_git/common/path.js ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.BASE_VIDEO = exports.BASE_URL_ZLF = exports.BASE_URL = exports.BASE_IMG = void 0;
// 测试
// export const BASE_URL = 'http://192.168.0.22:9001'
// export const BASE_URL_ZLF = 'http://192.168.0.22:9004'
// export const BASE_IMG = 'http://192.168.0.22:9001'
// export const BASE_VIDEO = 'https://frd-yhc.oss-cn-hangzhou.aliyuncs.com'
// 老服务器
// export const BASE_URL = 'https://shandongtibohui.zsyflive.com'  
// export const BASE_URL_ZLF = 'http://47.95.150.89:9004'
// export const BASE_IMG = 'https://shandongtibohui.zsyflive.com'
// export const BASE_VIDEO = 'https://frd-yhc.oss-cn-hangzhou.aliyuncs.com'

// 新服务器
// export const BASE_URL = 'https://shandongtibohui.zsyflive.com'  
// export const BASE_URL_ZLF = 'http://47.104.166.115:9004'
// export const BASE_IMG = 'https://shandongtibohui.zsyflive.com'
// export const BASE_VIDEO = 'https://frd-yhc.oss-cn-hangzhou.aliyuncs.com'

// 好服务器
// export const BASE_URL = 'https://shandongtibohui.zsyflive.com'  
// export const BASE_URL_ZLF = 'http://47.105.106.174:9020'
// export const BASE_IMG = 'https://shandongtibohui.zsyflive.com'
// export const BASE_VIDEO = 'https://frd-yhc.oss-cn-hangzhou.aliyuncs.com'
// 负载均衡域名
// export const BASE_URL = 'https://shandongtibohui.zsyflive.com'  
// export const BASE_URL_ZLF = 'http://gtm-cn-9lb393pra07.zsyflive.com'
// export const BASE_IMG = 'https://shandongtibohui.zsyflive.com'
// export const BASE_VIDEO = 'https://frd-yhc.oss-cn-hangzhou.aliyuncs.com'
// 首鑫电脑远程地址
// export const BASE_URL = 'https://6ld4218856.goho.co'
// export const BASE_URL_ZLF = 'https://64n2188z56.vicp.fun'
// export const BASE_IMG = 'https://6ld4218856.goho.co '
// export const BASE_VIDEO = 'https://frd-yhc.oss-cn-hangzhou.aliyuncs.com'

// 正式 prod-api   
var BASE_URL = 'https://shandongtibohui.zsyflive.com';
exports.BASE_URL = BASE_URL;
var BASE_URL_ZLF = 'https://frdzlfapi.zsyflive.com';
exports.BASE_URL_ZLF = BASE_URL_ZLF;
var BASE_IMG = 'https://shandongtibohui.zsyflive.com';
exports.BASE_IMG = BASE_IMG;
var BASE_VIDEO = 'https://frd-yhc.oss-cn-hangzhou.aliyuncs.com';
// 是否报名  
exports.BASE_VIDEO = BASE_VIDEO;
var enrollcheckvisitor = BASE_URL_ZLF + '/api/visitor/check/enroll';
// 判断是否打卷
var whetheransapi = BASE_URL_ZLF + '/api/visitor/ans/whether';
// 根据unionid查询观众信息
var infovisitor = BASE_URL_ZLF + '/api/visitor/info';
// 根据unionid新建观众信息  
var insertinfovisitor = BASE_URL_ZLF + '/api/visitor/info/insert';
// 是否存在战团 
var existgroupvisitor = BASE_URL_ZLF + '/api/visitor/group/exist';
// 问卷调查  
var exhtypeminiapp = BASE_URL + '/miniapp/exhtype';
// 发短信  
var getphonesendmsg = BASE_URL + '/miniapp/getphone/sendmsg';

// 验证验证码是否正确
var getphonebinding = BASE_URL + '/miniapp/getphone/binding';
// 验证验证码  
var getphoneupdate = BASE_URL + '/miniapp/getphone/update';
//  4.报名
var enrollvisitorapi = BASE_URL_ZLF + '/api/visitor/enroll';
// 保存用户问卷
var ansvisitorapi = BASE_URL_ZLF + '/api/visitor/ans';
// 获取获取展会信息
var enrollconfig = BASE_URL + '/miniapp/enroll/config';
// 分享获取具体参数 
var ticketwxminiapp = BASE_URL + '/miniapp/wx/ticket';
// 是否报名以及答题
var enroll2check = BASE_URL_ZLF + '/api/visitor/check/enroll2';
// 5.创建展团
var creategroupvisitor = BASE_URL_ZLF + '/api/visitor/group/create';
// 5.邀请列表
var referrerlist = BASE_URL_ZLF + '/api/visitor/referrer/list';
// 5.到场人数
var referrerCountarrive = BASE_URL_ZLF + '/api/visitor/referrerCount/arrive';
// 查询报名展会的信息）（不是注册信息）
var enrollinfovisitor = BASE_URL_ZLF + '/api/visitor/info/enroll';
// 展商选择开展月份
var afterans = BASE_URL_ZLF + '/api/visitor/ans/after/';
// 加密接口短信
var getphonesendmsgE = BASE_URL + '/miniapp/getphone/sendmsgE';
var _default = {
  getphonesendmsgE: getphonesendmsgE,
  enrollinfovisitor: enrollinfovisitor,
  afterans: afterans,
  referrerlist: referrerlist,
  referrerCountarrive: referrerCountarrive,
  enrollconfig: enrollconfig,
  ticketwxminiapp: ticketwxminiapp,
  enroll2check: enroll2check,
  enrollcheckvisitor: enrollcheckvisitor,
  whetheransapi: whetheransapi,
  infovisitor: infovisitor,
  insertinfovisitor: insertinfovisitor,
  existgroupvisitor: existgroupvisitor,
  ansvisitorapi: ansvisitorapi,
  exhtypeminiapp: exhtypeminiapp,
  getphonesendmsg: getphonesendmsg,
  enrollvisitorapi: enrollvisitorapi,
  BASE_URL: BASE_URL,
  BASE_URL_ZLF: BASE_URL_ZLF,
  BASE_IMG: BASE_IMG,
  BASE_VIDEO: BASE_VIDEO,
  creategroupvisitor: creategroupvisitor
};
exports.default = _default;

/***/ }),
/* 37 */
/*!********************************************************************!*\
  !*** F:/project/qianduan/zhanhuitong_yudengji_git/common/tools.js ***!
  \********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(uni) {

var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ 4);
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _axios = _interopRequireDefault(__webpack_require__(/*! ./axios.js */ 35));
var _path = _interopRequireDefault(__webpack_require__(/*! ./path.js */ 36));
var _util = _interopRequireDefault(__webpack_require__(/*! ./js/util.js */ 38));
//程序基础配置
//程序基础配置
//程序基础配置

var tools = {
  // 对数据进行加密
  toJaimi: function toJaimi() {
    var exType = uni.getStorageSync("exType");
    var nowExhId = uni.getStorageSync("nowExhId");
    var unionid = uni.getStorageSync("unionid");
    if (exType == "" || nowExhId == "" || unionid == "") {
      this.showToast("数据不足，链接生成失败");
      return;
    }
    var txt = "exType=" + exType + "&exhId=" + nowExhId + "&upUid=" + unionid;
    var decrypt = getApp().aesEncrypt(txt);
    return decrypt;
  },
  // 获取加密的数据
  toDuanlianjie: function toDuanlianjie(url) {
    if (url.indexOf("/frd/") >= 0) {
      if (url.indexOf("#") >= 0) {
        url = url.split("#")[0];
      }
      var urlData = url.split("/")[url.split("/").length - 1];
      console.log('===encrypt1encrypt===', urlData);
      var decrypt = getApp().aesDecrypt(urlData);
      url = url.split("/frd")[0];
      url = url + "?" + decrypt;
      console.log('===encrypturlurlurl===', url);
    }
    return url;
  },
  getlogos: function getlogos(type) {
    var logos = {
      '1': 'https://shandongtibohui.zsyflive.com/profile/upload/2022/08/03/6fbca66972154d56b163daab0df6fb87_20220803092533A004.jpg',
      '2': 'https://shandongtibohui.zsyflive.com/profile/upload/2022/08/03/fe6bbb03f29647538c83eead4613394d_20220803092610A005.jpg',
      '3': 'https://frdzhtsignup.zsyflive.com/static/logo3.png',
      '4': 'https://shandongtibohui.zsyflive.com/profile/upload/2022/08/03/cc7fcbcb6483444aa73501d3a22f3c69_20220803092643A007.png',
      '7': 'https://shandongtibohui.zsyflive.com/profile/avatar/2023/03/20/blob_20230320163234A003.jpeg',
      '8': 'https://shandongtibohui.zsyflive.com/profile/upload/2022/08/03/5b7a91c9080c8042574c9ec8763888d.png',
      '9': 'https://shandongtibohui.zsyflive.com/profile/upload/2022/08/03/f5503bfd0fa1819b01d858ecb5df96e.jpg',
      '10': 'https://shandongtibohui.zsyflive.com/profile/upload/2022/08/03/7041baff1cbb8a8e97aa7c54c398b59.png',
      '11': 'https://shandongtibohui.zsyflive.com/profile/upload/2022/08/03/64862440c0b451323f79f6d22551748.png',
      '5': 'https://shandongtibohui.zsyflive.com/profile/upload/2022/08/03/35c8a0876feaff57765811023b70451.png',
      '12': 'https://shandongtibohui.zsyflive.com/profile/upload/2022/08/03/wuhan.png'
    };
    return logos[type + ''];
  },
  initDate: function initDate() {
    var url = window.location.href;
    console.log("浏览器地址1", url);
    if (url.indexOf("?") >= 0) {
      url = url.split("?");
      if (url.length >= 3) {
        uni.setStorageSync("canshu", url[2]);
      }
    }
    if (url.length == 2 && url[1].indexOf("#") >= 0) {
      url = url[1].split("#");
      console.log("浏览器地址2", url);
      var canshu = url[0];
      uni.setStorageSync("canshu", canshu);
    } else if (url.length == 2 && url[1].indexOf("#") < 0) {
      console.log("浏览器地址2", url);
      var canshu = url[1];
      uni.setStorageSync("canshu", canshu);
    }
  },
  getRequestParams: function getRequestParams() {
    var requestParams = {};
    var str = uni.getStorageSync("canshu");
    var params = str.split("&");
    for (var i = 0; i < params.length; i++) {
      var param = params[i];
      var d = param.split("=");
      requestParams[d[0]] = decodeURIComponent(d[1]);
    }
    return requestParams;
  },
  // 微信公众号分享
  shareWx: function shareWx() {
    var _this = this;
    console.error("分下工");
    var wxShare = uni.getStorageSync("wxShare");
    var isObsolete = true; //true过时了
    if (wxShare) {
      if (new Date().getTime() - wxShare.time > 6000000) {
        isObsolete = true;
      } else {
        isObsolete = false;
      }
    }
    // if(!isObsolete){//
    // 	this.toShareWx(wxShare.data);
    // 	return
    // }
    var url = window.location.href;
    var os = "";
    var xinxi = uni.getSystemInfoSync();
    var link = "";
    if (xinxi.platform != 'ios') {
      link = url;
    } else {
      link = window.location.href.split('#')[0];
    }
    var data = {
      params: {
        exhType: parseInt(uni.getStorageSync("exType")),
        url: link
      }
    };
    // this.$paths.ticketwxminiapp
    _axios.default.axios('post', _path.default.ticketwxminiapp, data).then(function (res) {
      // if (res.code == 200) {
      uni.setStorageSync("wxShare", {
        'data': res,
        time: new Date().getTime()
      });
      _this.toShareWx(res);
    }).catch(function (err) {});
  },
  toShareWx: function toShareWx(res) {
    console.log("分享调用");
    try {
      _util.default.jwxModule(res, this.gettitle(), this.gettitle(), window.location.href, "https://shandongtibohui.zsyflive.com/profile/upload/2022/08/03/16b9760cd7064e6aa756604b7202d396_20220803092628A006.png");
    } catch (e) {
      console.log("薄袄报错122", e);
    }
  },
  gettitle: function gettitle() {
    var exType = uni.getStorageSync("exType");
    if (exType == 3) {
      var title = "第八届（临沂）全屋定制精品展";
    } else if (exType == 1) {
      var title = "第10届国际绿色环保产业博览会";
    } else if (exType == 2) {
      var title = "第五届山东体育用品博览会";
    } else if (exType == 4) {
      var title = "2024（第73届）秋季全国五金商品交易会";
    } else if (exType == 7) {
      var title = "2024中国（西安）国际五金机电博览会";
    } else if (exType == 8) {
      var title = "首届叶集定制家居暨供应链产业博览会";
    } else if (exType == 9) {
      var title = "菏泽木业产业博览会";
    } else if (exType == 10) {
      var title = "2024广西木业供应链博览会";
    } else if (exType == 11) {
      var title = "第十六届中国农资交易会";
    } else if (exType == 5) {
      var title = "第四届中国（临沂）绿色建筑建材产业博览会";
    }
    return title;
  },
  //解决富文本图片溢出
  formatRichText: function formatRichText(html) {
    var newContent = html.replace(/<img[^>]*>/gi, function (match, capture) {
      match = match.replace(/style="[^"]+"/gi, '').replace(/style='[^']+'/gi, '');
      match = match.replace(/width="[^"]+"/gi, '').replace(/width='[^']+'/gi, '');
      match = match.replace(/height="[^"]+"/gi, '').replace(/height='[^']+'/gi, '');
      return match;
    });
    newContent = newContent.replace(/style="[^"]+"/gi, function (match, capture) {
      match = match.replace(/width:[^;]+;/gi, 'max-width:100%;').replace(/width:[^;]+;/gi, 'max-width:100%;');
      return match;
    });
    newContent = newContent.replace(/<br[^>]*\/>/gi, '');
    newContent = newContent.replace(/\<img/gi, '<img style="max-width:100%;height:auto;display:inline-block;margin:10rpx auto;"');
    return newContent;
  },
  getKaishijieshu: function getKaishijieshu() {
    var nowDate = new Date();
    var cloneNowDate = new Date();
    var fullYear = nowDate.getFullYear();
    var month = nowDate.getMonth() + 1; // getMonth 方法返回 0-11，代表1-12月
    var endOfMonth = new Date(fullYear, month, 0).getDate(); // 获取本月最后一天
    function getFullDate(targetDate) {
      var D, y, m, d;
      if (targetDate) {
        D = new Date(targetDate);
        y = D.getFullYear();
        m = D.getMonth() + 1;
        d = D.getDate();
      } else {
        y = fullYear;
        m = month;
        d = date;
      }
      m = m > 9 ? m : '0' + m;
      d = d > 9 ? d : '0' + d;
      return y + '-' + m + '-' + d;
    }
    ;
    var endDate = getFullDate(cloneNowDate.setDate(endOfMonth)); //当月最后一天
    var starDate = getFullDate(cloneNowDate.setDate(1)); //当月第一天
    console.log(starDate);
    console.log(endDate);
  },
  // 验证手机号
  isphone: function isphone(phone) {
    if (!/^1[3456789]\d{9}$/.test(phone)) {
      return false;
    }
    return true;
  },
  isEmail: function isEmail(email) {
    if (email.search(/^\w+((-\w+)|(\.\w+))*\@[A-Za-z0-9]+((\.|-)[A-Za-z0-9]+)*\.[A-Za-z0-9]+$/) != -1) return true;else return false;
  },
  //获取订单编号
  getOrderNumber: function getOrderNumber() {
    var timestamp = Date.parse(new Date());
    var Range = 100 - 1;
    var Rand = Math.random();
    return timestamp + (1 + Math.round(Rand * Range));
  },
  //获取随机数
  getSuiji: function getSuiji() {
    var Range = Max - Min;
    var Rand = Math.random();
    return Min + Math.round(Rand * Range);
  },
  //轻提示
  showToast: function showToast(txt) {
    uni.showToast({
      title: txt,
      'icon': 'none'
    });
  },
  //计算多长时间前
  getDateDiff: function getDateDiff(dateTimeStamp) {
    var minute = 1000 * 60;
    var hour = minute * 60;
    var day = hour * 24;
    var halfamonth = day * 15;
    var month = day * 30;
    var year = day * 365;
    var now = new Date().getTime();
    var diffValue = now - dateTimeStamp;
    if (diffValue < 0) {
      return;
    }
    var yearC = diffValue / year;
    var monthC = diffValue / month;
    var weekC = diffValue / (7 * day);
    var dayC = diffValue / day;
    var hourC = diffValue / hour;
    var minC = diffValue / minute;
    if (yearC >= 1) {
      result = "" + parseInt(yearC) + "年前";
    }
    if (monthC >= 1) {
      result = "" + parseInt(monthC) + "月前";
    } else if (weekC >= 1) {
      result = "" + parseInt(weekC) + "周前";
    } else if (dayC >= 1) {
      result = "" + parseInt(dayC) + "天前";
    } else if (hourC >= 1) {
      result = "" + parseInt(hourC) + "小时前";
    } else if (minC >= 1) {
      result = "" + parseInt(minC) + "分钟前";
    } else result = "刚刚";
    return result;
  },
  timestampToTime: function timestampToTime(timestamp) {
    var date = new Date(timestamp); //时间戳为10位需*1000，时间戳为13位的话不需乘1000
    var Y = date.getFullYear() + '-';
    var M = (date.getMonth() + 1 < 10 ? '0' + (date.getMonth() + 1) : date.getMonth() + 1) + '-';
    var D = (date.getDate() < 10 ? '0' + date.getDate() : date.getDate()) + ' ';
    var h = (date.getHours() < 10 ? '0' + date.getHours() : date.getHours()) + ':';
    var m = (date.getMinutes() < 10 ? '0' + date.getMinutes() : date.getMinutes()) + ':';
    var s = date.getSeconds() < 10 ? '0' + date.getSeconds() : date.getSeconds();
    return Y + M + D + h + m + s;
  },
  /**判断是否是手机号**/isPhoneNumber: function isPhoneNumber(tel) {
    var reg = /^0?1[3|4|5|6|7|8][0-9]\d{8}$/;
    return reg.test(tel);
  }
};

//将时间戳转换成正常时间格式
var _default = tools;
exports.default = _default;
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/uni-mp-weixin/dist/index.js */ 2)["default"]))

/***/ }),
/* 38 */
/*!**********************************************************************!*\
  !*** F:/project/qianduan/zhanhuitong_yudengji_git/common/js/util.js ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(uni, wx) {

var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ 4);
var _siteinfo = _interopRequireDefault(__webpack_require__(/*! ../../siteinfo.js */ 39));
var _qqmapWxJssdkMin = _interopRequireDefault(__webpack_require__(/*! ./qqmap-wx-jssdk.min.js */ 40));
//程序基础配置

var util = {};
// 什么模式下的程序
util.getProvider = function (cb) {
  uni.getProvider({
    service: 'oauth',
    success: function success(res) {
      typeof cb == 'function' ? cb(res.provider) : '';
    }
  });
};
// 获取程序是什么模式
util.getProvider(function (res) {
  util.provider = res;
});
util.url = function (action) {
  var url = _siteinfo.default.siteroot;
  return url;
};
// ajax请求
util.request = function (option) {
  var option = option ? option : {};
  var url = util.url(url) + '/' + option.url;
  // 可能会发生请求第三方的接口的问题
  if (url.indexOf('http://') == -1 && url.indexOf('https://') == -1) {
    url = util.url(url);
  }
  if (!option.method || option.method == 'GET') {
    if (option.data) {
      option.data.esdcrftvgy = Date.parse(new Date());
    }
    if (!option.data) {
      url = "".concat(url, "?esdcrftvgy=").concat(Date.parse(new Date()));
    }
  }
  uni.showLoading({
    title: '加载中'
  });
  uni.request({
    'url': url,
    'data': option.data ? option.data : {},
    'method': option.method ? option.method : 'GET',
    'header': {
      'content-type': 'application/x-www-form-urlencoded',
      'Access-Control-Allow-Origin': '*'
    },
    success: function success(res) {
      if (option.success && typeof option.success == 'function') {
        option.success(res);
      }
      uni.hideLoading();
    },
    fail: function fail(res) {
      if (option.fail && typeof option.fail == 'function') {
        option.fail(res);
      }
      uni.hideLoading();
    },
    'complete': function complete(res) {
      if (option.complete && typeof option.complete == 'function') {
        option.complete(res);
      }
    }
  });
};

// 获取用户余额
util.balance = function (balanceback) {
  var userDetail = uni.getStorageSync("userInfo") && uni.getStorageSync("userInfo").wxInfo;
  if (uni.getStorageSync("userInfo")) {
    return new Promise(function (resolve, reject) {
      util.request({
        url: 'api/user/getbalance',
        data: {
          userid: userDetail.userId
        },
        method: 'POST',
        success: function success(res) {
          res.data.data.money = String(res.data.data.money);
          var balance = res.data.data;
          typeof balanceback == 'function' ? balanceback(balance) : '';
          uni.setStorageSync('balance', balance);
          resolve(res);
        },
        fail: function fail(res) {
          var balance = res.data.data;
          typeof balanceback == 'function' ? balanceback(balance) : '';
        }
      });
    });
  }
};
// 底部tabBar配置接口
util.GetTabBar = function (tabBack) {
  var ios = uni.getStorageSync("ios");
  return new Promise(function (resolve, reject) {
    util.request({
      url: '/api/index/bottom_nav',
      data: {
        app_type: '1'
      },
      success: function success(res) {
        var tabData = res.data.data;
        typeof tabBack == 'function' ? tabBack(tabData) : '';
        resolve(res);
      },
      fail: function fail(res) {
        var tabData = res.data.data;
        typeof tabBack == 'function' ? tabBack(tabData) : '';
      }
    });
  });
};
// 上传图片接口
util.unloadImg = function (options) {
  var local_imgs = [],
    server_imgs = [],
    num = 0;
  return new Promise(function (resolve, reject) {
    uni.chooseImage({
      count: options.data.count,
      //默认9
      sizeType: ['compressed'],
      //可以指定是原图还是压缩图，默认二者都有
      success: function success(res) {
        options.data.tempFilePaths = res.tempFilePaths; //本地图片集合
        local_imgs = res.tempFilePaths; //本地图片集合
        util.loadimgList(options, num, local_imgs, server_imgs);
      }
    });
  });
};
util.loadimgList = function (options, num, local_imgs, server_imgs) {
  // console.log(options.data.tempFilePaths[num])
  // 请求图片的路径
  var url = util.url() + "c=entry&a=wxapp&do=" + options.data.do + "&s=" + options.data.s + "&act=" + options.data.act;
  // var url = util.url() + "c=entry&a=wxapp&do=" + options.data.do +  "&act=" + options.data.act;
  // +"&userid="+options.data.userid;

  uni.uploadFile({
    url: url,
    //仅为示例，非真实的接口地址
    filePath: options.data.tempFilePaths[num],
    name: 'image',
    formData: {
      userid: options.data.userid
    },
    success: function success(res) {
      var res = JSON.parse(res.data);
      server_imgs = res.data;
      num++; //图片第几个开始上传
      if (options.data.tempFilePaths.length > 1 && num < options.data.tempFilePaths.length) {
        console.log(num);
        util.loadimgList(options, num, local_imgs, server_imgs);
      }
      typeof options.success == 'function' ? options.success(num, local_imgs, server_imgs) : '';
    },
    fail: function fail(res) {
      console.log(res);
      num; //图片第几个开始上传
      if (options.data.tempFilePaths.length > 1 && num < options.data.tempFilePaths.length) {
        console.log(num);
        util.loadimgList(options, num, local_imgs, server_imgs);
      }
      typeof options.fail == 'function' ? options.fail(num, local_imgs, server_imgs) : '';
    }
  });
};

// 预览图片
util.showImage = function (event) {
  var url = event ? event.currentTarget.dataset.preview : '';
  if (!url) {
    return false;
  }
  wx.previewImage({
    urls: [url]
  });
};

// 获取用户信息
util.getUserInfo = function (options) {
  // var login = function () {
  var userInfo = uni.getStorageSync('userInfo');
  uni.login({
    provider: 'weixin',
    success: function success(res) {
      console.log(res);
      util.request({
        url: 'api/user/jscode2session',
        data: {
          code: res.code
        },
        success: function success(session) {
          if (session.data.code == 1) {
            userInfo.sessionData = session.data.data;
            uni.setStorageSync('userInfo', userInfo);
            util.getUserId(userInfo, options);
          } else {
            uni.showToast({
              title: session.data.msg,
              icon: 'none'
            });
          }
        }
      });
    },
    fail: function fail() {
      uni.showModal({
        title: '获取信息失败',
        content: '请允许授权以便为您提供给服务',
        success: function success(res) {
          if (res.confirm) {
            util.getUserInfo();
          }
        }
      });
    }
  });
  // };
  // // 登陆之前的验证   登陆是否失效
  // var app = uni.getStorageSync('userInfo');
  // if (app.sessionData) {
  // 	console.log(app)
  // 	uni.checkSession({
  // 		success: function () {
  // 			console.log("session未过期")
  // 			util.getUserId(app, options)
  // 			typeof options.login_success == "function" && options.login_success(app);
  // 		},
  // 		fail: function () {
  // 			console.log('session过期');
  // 			uni.removeStorageSync('userInfo');
  // 			login();
  // 		}
  // 	})
  // } else {
  // 	//调用登录接口
  // 	console.log('有没有授权session');
  // 	login();
  // }
};

// 获取用户的userId
util.getUserId = function (userInfo, options) {
  util.request({
    url: 'api/user/register',
    data: {
      openid: userInfo.sessionData.openid,
      unionid: userInfo.sessionData.unionid ? userInfo.sessionData.unionid : '',
      avatar: userInfo.wxInfo.avatarUrl,
      nickname: userInfo.wxInfo.nickName,
      gender: userInfo.wxInfo.gender,
      pid: uni.getStorageSync("pid") || 0
    },
    method: 'POST',
    success: function success(res) {
      console.log(res);
      if (!res.data.errno) {
        userInfo.wxInfo.avatarUrl = userInfo.sessionData.avatar == '' ? userInfo.wxInfo.avatarUrl : userInfo.sessionData.avatar;
        userInfo.wxInfo.nickName = userInfo.sessionData.nickname == '' ? userInfo.wxInfo.nickName : userInfo.sessionData.nickname;
        userInfo.wxInfo.phone = userInfo.sessionData.phone;
        userInfo.wxInfo.userId = res.data.data;
        uni.setStorageSync('userInfo', userInfo);
      }
      typeof options.login_success == "function" && options.login_success(userInfo);
    },
    fail: function fail(res) {
      typeof options.login_fail == "function" && options.login_fail(userInfo);
    }
  });
};

// 跳转下一页
util.go = function (link) {
  uni.navigateTo({
    url: link
  });
};
// 返回上  num【是返回的层级数】  页
util.back = function (num) {
  uni.navigateBack({
    delta: num
  });
};
// 底部原生tabbar的跳转
util.tab = function (link) {
  uni.switchTab({
    url: link
  });
};
// 重载页面
util.onLoad = function (link) {
  uni.reLaunch({
    url: link
  });
};
// 跳转下一个页面没有，切本页面不会在history中
util.noBack = function (link) {
  uni.redirectTo({
    url: link
  });
};

// 显示 loading 提示框
util.loading = function () {
  uni.showLoading({
    title: '加载中...'
  });
};
// 关闭loading提示框
util.unLoading = function () {
  uni.hideLoading();
};
// 消息提示框 Toast
util.toast = function (msg, icon) {
  uni.showToast({
    title: msg ? msg : "msg",
    duration: 1000,
    icon: icon ? icon : "success"
  });
};
// 微信支付  先配置微信支付数据
util.wxpay = function (options, e, s) {
  console.log(options, e, s);
  // 仅作为示例，非真实参数信息。
  uni.requestPayment({
    provider: 'wxpay',
    timeStamp: options.timeStamp,
    nonceStr: options.nonceStr,
    package: options.package,
    signType: options.signType,
    paySign: options.paySign,
    success: function success(res) {
      console.log("支付成功", res);
      setTimeout(function () {
        if (s == '0') {
          uni.reLaunch({
            url: e
          });
        } else if (s == '1') {
          uni.navigateBack({
            delta: 1
          });
        } else {
          uni.navigateTo({
            url: e
          });
        }
      }, 1500);
      util.balance();
      uni.showToast({
        title: '支付成功',
        duration: 1000,
        icon: "none"
      });
      typeof options.success == 'function' ? options.success(res) : '';
    },
    fail: function fail(res) {
      console.log("支付失败", res);
      uni.navigateTo({
        url: e
      });
      typeof options.fail == 'function' ? options.fail(res) : '';
    }
  });
};
// 公众号支付
util.jwxpay = function (options, e, s) {
  console.log(options);
  if (uni.getStorageSync("logintype") == 1) {
    window.location.href = options.mweb_url;
  } else {
    jweixin.config({
      appId: options.appId,
      // 必填，公众号的唯一标识
      timestamp: options.timeStamp,
      // 必填，生成签名的时间戳
      nonceStr: options.nonceStr,
      // 必填，生成签名的随机串
      signature: options.paySign,
      // 必填，签名
      jsApiList: ['chooseWXPay', 'openAddress'] // 必填，需要使用的JS接口列表
    });

    jweixin.ready(function () {
      jweixin.chooseWXPay({
        timestamp: options.timeStamp,
        nonceStr: options.nonceStr,
        // 支付签名随机串，不长于 32 位
        package: options.package,
        // 统一支付接口返回的prepay_id参数值
        signType: options.signType,
        // 签名方式，默认为'SHA1'，使用新版支付需传入'MD5'
        paySign: options.paySign,
        // 支付签名
        success: function success(res) {
          //支付成功回调
          setTimeout(function () {
            if (s == '0') {
              uni.reLaunch({
                url: e
              });
            } else if (s == '1') {
              uni.navigateBack({
                delta: 1
              });
            } else {
              uni.navigateTo({
                url: e
              });
            }
          }, 1500);
          util.balance();
          uni.showToast({
            title: '支付成功',
            duration: 1000,
            icon: "none"
          });
        }
      });
    });
  }
};
// 公众号分享
util.jwxModule = function (options, title, desc, link, imgUrl) {
  var unionid = uni.getStorageSync("unionid");
  var nowExhId = uni.getStorageSync("nowExhId");
  var exType = uni.getStorageSync("exType");
  if (exType == 1) {
    title = "第10届国际绿色环保产业博览会，展会预登记组团参观享好礼！";
    desc = "时间：2024.8.28-30\n地点：山东国际会展中心(济南)";
    imgUrl = "https://shandongtibohui.zsyflive.com/profile/upload/2022/08/03/6fbca66972154d56b163daab0df6fb87_20220803092533A004.jpg";
  } else if (exType == 2) {
    title = "第五届山东体育用品博览会";
    desc = "时间：2024.8.23-8.25\n地点：临沂国际博览中心（临西十路）";
    imgUrl = "https://shandongtibohui.zsyflive.com/profile/upload/2022/08/03/fe6bbb03f29647538c83eead4613394d_20220803092610A005.jpg";
  } else if (exType == 3) {
    title = "第八届中国（临沂）全屋定制精品展览会";
    desc = "时间：2024年4.18-4.21\n地址：临沂国际会展中心";
    imgUrl = "https://frdzhtsignup.zsyflive.com/static/logo3.png";
  } else if (exType == 4) {
    title = "2024（第73届）秋季全国五金商品交易会";
    desc = "时间：2024年09.05-09.07\n地址：临沂国际会展中心";
    imgUrl = "https://shandongtibohui.zsyflive.com/profile/upload/2022/08/03/cc7fcbcb6483444aa73501d3a22f3c69_20220803092643A007.png";
  } else if (exType == 7) {
    var title = "2024中国（西安）国际五金机电博览会";
    desc = "时间：2024年5.10-5.12\n地址：西安国际会展中心";
    imgUrl = "https://shandongtibohui.zsyflive.com/profile/avatar/2023/03/20/blob_20230320163234A003.jpeg";
  } else if (exType == 8) {
    var title = "首届叶集定制家居暨供应链产业博览会";
    desc = "时间：2023年10.13-10.15\n地址：安徽叶集·中国中部国际木材交易中心";
    imgUrl = "https://shandongtibohui.zsyflive.com/profile/upload/2022/08/03/5b7a91c9080c8042574c9ec8763888d.png";
  } else if (exType == 9) {
    var title = "菏泽木业产业博览会";
    desc = "时间：2024年10.13-15日\n地址：菏泽国际会展中心";
    imgUrl = "https://shandongtibohui.zsyflive.com/profile/upload/2022/08/03/f5503bfd0fa1819b01d858ecb5df96e.jpg";
  } else if (exType == 10) {
    // 南宁全屋定制供应链展
    var title = "2024广西木业供应链博览会";
    desc = "时间：2024年9.3-5日\n地址：南宁国际会展中心";
    imgUrl = "https://shandongtibohui.zsyflive.com/profile/upload/2022/08/03/7041baff1cbb8a8e97aa7c54c398b59.png";
  } else if (exType == 11) {
    var title = "第十六届中国农资交易会";
    desc = "时间：2024年4.13-15日\n地址：菏泽国际会展中心";
    imgUrl = "https://shandongtibohui.zsyflive.com/profile/upload/2022/08/03/64862440c0b451323f79f6d22551748.png";
  } else if (exType == 5) {
    var title = "第四届中国（临沂）绿色建筑建材产业博览会";
    desc = "时间：2024年4.19-21日\n地址：临沂国际博览中心";
    imgUrl = "https://shandongtibohui.zsyflive.com/profile/upload/2022/08/03/35c8a0876feaff57765811023b70451.png";
  } else if (exType == 12) {
    var title = "第二届中国武汉定制家居展览会";
    desc = "时间：2024年5.7-9日\n地址：武汉国际博览中心（汉阳）";
    imgUrl = "https://shandongtibohui.zsyflive.com/profile/upload/2022/08/03/wuhan.png";
  }
  // link = link.indexOf('pages') > 0 ? link.slice(0,link.indexOf('/#/')) + '?' + link.slice(link.indexOf('/#/') + 2) + link.slice(link.indexOf('/#/')) :  link

  var debug = false;
  if (exType == 11) {
    debug = false;
  }
  console.log("微信options", options);

  // 修改分享文案
  var bmxxInfo = uni.getStorageSync("bmxxInfo");
  if (exType == 1) {
    title = bmxxInfo.visitorName + "邀您参观第10届环保展，您参观，我买单！";
  } else {
    if (bmxxInfo) {
      title = bmxxInfo.visitorName + "邀您参观" + title;
    }
  }
  jweixin.config({
    debug: debug,
    appId: options.appId,
    // 必填，公众号的唯一标识
    timestamp: options.timestamp,
    // 必填，生成签名的时间戳
    nonceStr: options.noncestr,
    // 必填，生成签名的随机串
    signature: options.signature,
    // 必填，签名
    jsApiList: ['updateAppMessageShareData', 'updateTimelineShareData', 'openAddress', 'onMenuShareAppMessage', 'hideMenuItems'] // 必填，需要使用的JS接口列表
  });

  if (exType == 11) {
    jweixin.checkJsApi({
      jsApiList: ['updateAppMessageShareData', 'updateTimelineShareData', 'openAddress', 'onMenuShareAppMessage', 'hideMenuItems'],
      complete: function complete(res) {
        console.log("验证权限结果", res);
      }
    });
  }
  jweixin.error(function (res) {
    console.log("微信报错", res);
  });
  var list = [];
  try {
    if (unionid) {
      list.push("upUid=" + unionid);
    }
    if (nowExhId) {
      list.push("exhId=" + nowExhId);
    }
    if (exType) {
      list.push("exType=" + exType);
    }
    var data = list.join("&");
    link = 'https://frdzhtsignup.zsyflive.com' + "?" + data;
  } catch (e) {
    //TODO handle the exception
    console.log("崔哦奥", e);
  }
  var xinxi = uni.getSystemInfoSync();
  // var link = "";

  console.error("xinxi", xinxi);

  // 0606修改
  // if (xinxi.platform == 'ios') {
  // 	link = uni.getStorageSync("locationhref");
  // }

  console.error("link", link, desc, title, imgUrl);
  jweixin.ready(function () {
    //需在用户可能点击分享按钮前就先调用

    jweixin.hideMenuItems({
      menuList: ["menuItem:share:qq", "menuItem:share:weiboApp", "menuItem:share:facebook", "menuItem:editTag", "menuItem:copyUrl", "menuItem:openWithQQBrowser", "menuItem:openWithSafari", "menuItem:share:QZone"],
      // 要隐藏的菜单项，只能隐藏“传播类”和“保护类”按钮
      success: function success(res) {
        console.log('隐藏设置成功', res);
      },
      fail: function fail(res) {
        console.log('隐藏设置失败', res);
      }
    });
    jweixin.updateAppMessageShareData({
      title: title,
      // 分享标题
      desc: desc,
      // 分享描述
      link: link,
      // 分享链接，该链接域名或路径必须与当前页面对应的公众号JS安全域名一致
      imgUrl: imgUrl,
      // 分享图标
      success: function success(res) {
        console.log('设置成功', res);
      },
      fail: function fail(res) {
        console.log('设置失败', res);
      }
    });
    jweixin.updateTimelineShareData({
      title: title,
      // 分享标题
      link: link,
      // 分享链接，该链接域名或路径必须与当前页面对应的公众号JS安全域名一致
      imgUrl: imgUrl,
      // 分享图标
      success: function success(res) {
        console.log('设置成功2', res);
        // 设置成功
      },

      fail: function fail(res) {
        console.log('设置失败2', res);
      }
    });
  });
};
// 公众号扫码
util.qrCode = function (options) {
  jweixin.config({
    appId: options.appId,
    // 必填，公众号的唯一标识
    timestamp: options.timestamp,
    // 必填，生成签名的时间戳
    nonceStr: options.nonceStr,
    // 必填，生成签名的随机串
    signature: options.signature,
    // 必填，签名
    jsApiList: ['scanQRCode', 'openAddress'] // 必填，需要使用的JS接口列表
  });

  jweixin.ready(function () {
    jweixin.scanQRCode({
      needResult: 0,
      // 默认为0，扫描结果由微信处理，1则直接返回扫描结果，
      scanType: ["qrCode", "barCode"],
      // 可以指定扫二维码还是一维码，默认二者都有
      success: function success(res) {
        var result = res.resultStr; // 当needResult 为 1 时，扫码返回的结果
      }
    });
  });
};
// 公众号获取收货地址
util.jwxAddress = function (options) {
  options = options.options;
  console.log("地址信息", options);
  console.log("地址", {
    appId: options.appId,
    // 必填，公众号的唯一标识
    timestamp: options.timestamp,
    // 必填，生成签名的时间戳
    nonceStr: options.nonceStr,
    // 必填，生成签名的随机串
    signature: options.signature,
    // 必填，签名
    jsApiList: ['openAddress'] // 必填，需要使用的JS接口列表
  });

  jweixin.config({
    appId: options.appId,
    // 必填，公众号的唯一标识
    timestamp: options.timestamp,
    // 必填，生成签名的时间戳
    nonceStr: options.nonceStr,
    // 必填，生成签名的随机串
    signature: options.signature,
    // 必填，签名
    jsApiList: ['openAddress'] // 必填，需要使用的JS接口列表
  });

  jweixin.ready(function () {
    jweixin.openAddress({
      success: function success(res) {
        console.log("---a---", res);
        typeof options.success == 'function' ? options.success(res) : '';
      },
      fail: function fail(res) {
        typeof options.fail == 'function' ? options.fail(res) : '';
      }
    });
  });
};
// 获取经纬度
util.get_address = function (options) {
  uni.getLocation({
    type: options.type,
    success: function success(res) {
      typeof options.success == 'function' ? options.success(res) : '';
    },
    fail: function fail(res) {
      typeof options.fail == 'function' ? options.fail(res) : '';
    }
  });
};
// 经纬度逆解析
util.getCity = function (option) {
  var qqmapsdk;
  qqmapsdk = new _qqmapWxJssdkMin.default({
    key: option.key
  });
  qqmapsdk.reverseGeocoder({
    location: {
      latitude: option.lat,
      longitude: option.lng
    },
    success: function success(res) {
      typeof option.success == 'function' ? option.success(res) : '';
    },
    fail: function fail(res) {
      typeof option.fail == 'function' ? option.fail(res) : '';
    }
  });
};
util.save_poster = function (options) {
  uni.saveImageToPhotosAlbum({
    filePath: options.poster,
    success: function success(res) {
      console.log("保存海报", res);
      typeof options.success == 'function' ? options.success(res) : '';
    },
    fail: function fail(err) {
      console.log("保存海报", err);
      typeof options.fail == 'function' ? options.fail(err) : '';
    }
  });
};
util.isIosX = function () {
  var isIos = false;
  uni.getSystemInfo({
    success: function success(res) {
      var modelmes = res.model;
      // 得到安全区域高度
      if (modelmes.search('iPhone X') != -1 || modelmes.search('iPhone 11') != -1) {
        //IPhoneX底部大约为68rpx
        isIos = true;
      } else {
        isIos = false;
      }
    }
  });
  return isIos;
};

//日期格式化
util.formatDate = function (formatStr, fdate) {
  if (fdate) {
    if (~fdate.indexOf('.')) {
      fdate = fdate.substring(0, fdate.indexOf('.'));
    }
    fdate = fdate.toString().replace('T', ' ').replace(/\-/g, '/');
    var fTime,
      fStr = 'ymdhis';
    if (!formatStr) formatStr = "y-m-d h:i:s";
    if (fdate) fTime = new Date(fdate);else fTime = new Date();
    var month = fTime.getMonth() + 1;
    var day = fTime.getDate();
    var hours = fTime.getHours();
    var minu = fTime.getMinutes();
    var second = fTime.getSeconds();
    month = month < 10 ? '0' + month : month;
    day = day < 10 ? '0' + day : day;
    hours = hours < 10 ? '0' + hours : hours;
    minu = minu < 10 ? '0' + minu : minu;
    second = second < 10 ? '0' + second : second;
    var formatArr = [fTime.getFullYear().toString(), month.toString(), day.toString(), hours.toString(), minu.toString(), second.toString()];
    for (var i = 0; i < formatArr.length; i++) {
      formatStr = formatStr.replace(fStr.charAt(i), formatArr[i]);
    }
    return formatStr;
  } else {
    return "";
  }
}, util.timetoformat = function (shijianchuo) {
  //shijianchuo是整数，否则要parseInt转换
  function add0(m) {
    return m < 10 ? '0' + m : m;
  }
  var time = new Date(shijianchuo * 1000);
  var y = time.getFullYear();
  var m = time.getMonth() + 1;
  var d = time.getDate();
  var h = time.getHours();
  var mm = time.getMinutes();
  var s = time.getSeconds();
  return y + '-' + add0(m) + '-' + add0(d) + ' ' + add0(h) + ':' + add0(mm) + ':' + add0(s);
}, util.timetodaystr = function (datetime) {
  var filmuxtime = new Date(this.formatDate('y/m/d h:i:s', datetime)).getTime() / 1000;
  var nowuxtime = new Date().getTime() / 1000;
  var todayuxtime = new Date(this.formatDate('y-m-d 23:59:59', this.timetoformat(nowuxtime))).getTime() / 1000;
  var ctime = (todayuxtime - filmuxtime) / 60 / 60 / 24;
  var dateyy = new Date(this.formatDate('y/m/d h:i:s', datetime));
  var myddy = dateyy.getDay();
  var weekday = ["周日", "周一", "周二", "周三", "周四", "周五", "周六"];
  var datestr = this.formatDate('m月d日', datetime);
  if (ctime <= 1 && ctime > 0) {
    // 今天
    var str = '今天 ' + datestr;
  } else if (ctime <= 0 && ctime > -1) {
    // 明天
    var str = '明天 ' + datestr;
  } else if (ctime <= -1 && ctime > -2) {
    // 后天
    var str = '后天 ' + datestr;
  } else if (ctime <= 2 && ctime > 1) {
    // 昨天
    var str = '昨天 ' + datestr;
  } else if (weekday[myddy]) {
    var str = weekday[myddy] + ' ' + datestr;
  } else {
    var str = datestr;
  }
  return str;
}, module.exports = util;
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/uni-mp-weixin/dist/index.js */ 2)["default"], __webpack_require__(/*! ./node_modules/@dcloudio/uni-mp-weixin/dist/wx.js */ 1)["default"]))

/***/ }),
/* 39 */
/*!****************************************************************!*\
  !*** F:/project/qianduan/zhanhuitong_yudengji_git/siteinfo.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

var siteinfo = {
  "siteroot": "https://frdzlfapi.zsyflive.com"
};
module.exports = siteinfo;

/***/ }),
/* 40 */
/*!************************************************************************************!*\
  !*** F:/project/qianduan/zhanhuitong_yudengji_git/common/js/qqmap-wx-jssdk.min.js ***!
  \************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(wx) {var _classCallCheck = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ 23);
var _createClass = __webpack_require__(/*! @babel/runtime/helpers/createClass */ 24);
var ERROR_CONF = {
  KEY_ERR: 311,
  KEY_ERR_MSG: 'key格式错误',
  PARAM_ERR: 310,
  PARAM_ERR_MSG: '请求参数信息有误',
  SYSTEM_ERR: 600,
  SYSTEM_ERR_MSG: '系统错误',
  WX_ERR_CODE: 1000,
  WX_OK_CODE: 200
};
var BASE_URL = 'https://apis.map.qq.com/ws/';
var URL_SEARCH = BASE_URL + 'place/v1/search';
var URL_SUGGESTION = BASE_URL + 'place/v1/suggestion';
var URL_GET_GEOCODER = BASE_URL + 'geocoder/v1/';
var URL_CITY_LIST = BASE_URL + 'district/v1/list';
var URL_AREA_LIST = BASE_URL + 'district/v1/getchildren';
var URL_DISTANCE = BASE_URL + 'distance/v1/';
var URL_DIRECTION = BASE_URL + 'direction/v1/';
var MODE = {
  driving: 'driving',
  transit: 'transit'
};
var EARTH_RADIUS = 6378136.49;
var Utils = {
  safeAdd: function safeAdd(x, y) {
    var lsw = (x & 0xffff) + (y & 0xffff);
    var msw = (x >> 16) + (y >> 16) + (lsw >> 16);
    return msw << 16 | lsw & 0xffff;
  },
  bitRotateLeft: function bitRotateLeft(num, cnt) {
    return num << cnt | num >>> 32 - cnt;
  },
  md5cmn: function md5cmn(q, a, b, x, s, t) {
    return this.safeAdd(this.bitRotateLeft(this.safeAdd(this.safeAdd(a, q), this.safeAdd(x, t)), s), b);
  },
  md5ff: function md5ff(a, b, c, d, x, s, t) {
    return this.md5cmn(b & c | ~b & d, a, b, x, s, t);
  },
  md5gg: function md5gg(a, b, c, d, x, s, t) {
    return this.md5cmn(b & d | c & ~d, a, b, x, s, t);
  },
  md5hh: function md5hh(a, b, c, d, x, s, t) {
    return this.md5cmn(b ^ c ^ d, a, b, x, s, t);
  },
  md5ii: function md5ii(a, b, c, d, x, s, t) {
    return this.md5cmn(c ^ (b | ~d), a, b, x, s, t);
  },
  binlMD5: function binlMD5(x, len) {
    x[len >> 5] |= 0x80 << len % 32;
    x[(len + 64 >>> 9 << 4) + 14] = len;
    var i;
    var olda;
    var oldb;
    var oldc;
    var oldd;
    var a = 1732584193;
    var b = -271733879;
    var c = -1732584194;
    var d = 271733878;
    for (i = 0; i < x.length; i += 16) {
      olda = a;
      oldb = b;
      oldc = c;
      oldd = d;
      a = this.md5ff(a, b, c, d, x[i], 7, -680876936);
      d = this.md5ff(d, a, b, c, x[i + 1], 12, -389564586);
      c = this.md5ff(c, d, a, b, x[i + 2], 17, 606105819);
      b = this.md5ff(b, c, d, a, x[i + 3], 22, -1044525330);
      a = this.md5ff(a, b, c, d, x[i + 4], 7, -176418897);
      d = this.md5ff(d, a, b, c, x[i + 5], 12, 1200080426);
      c = this.md5ff(c, d, a, b, x[i + 6], 17, -1473231341);
      b = this.md5ff(b, c, d, a, x[i + 7], 22, -45705983);
      a = this.md5ff(a, b, c, d, x[i + 8], 7, 1770035416);
      d = this.md5ff(d, a, b, c, x[i + 9], 12, -1958414417);
      c = this.md5ff(c, d, a, b, x[i + 10], 17, -42063);
      b = this.md5ff(b, c, d, a, x[i + 11], 22, -1990404162);
      a = this.md5ff(a, b, c, d, x[i + 12], 7, 1804603682);
      d = this.md5ff(d, a, b, c, x[i + 13], 12, -40341101);
      c = this.md5ff(c, d, a, b, x[i + 14], 17, -1502002290);
      b = this.md5ff(b, c, d, a, x[i + 15], 22, 1236535329);
      a = this.md5gg(a, b, c, d, x[i + 1], 5, -165796510);
      d = this.md5gg(d, a, b, c, x[i + 6], 9, -1069501632);
      c = this.md5gg(c, d, a, b, x[i + 11], 14, 643717713);
      b = this.md5gg(b, c, d, a, x[i], 20, -373897302);
      a = this.md5gg(a, b, c, d, x[i + 5], 5, -701558691);
      d = this.md5gg(d, a, b, c, x[i + 10], 9, 38016083);
      c = this.md5gg(c, d, a, b, x[i + 15], 14, -660478335);
      b = this.md5gg(b, c, d, a, x[i + 4], 20, -405537848);
      a = this.md5gg(a, b, c, d, x[i + 9], 5, 568446438);
      d = this.md5gg(d, a, b, c, x[i + 14], 9, -1019803690);
      c = this.md5gg(c, d, a, b, x[i + 3], 14, -187363961);
      b = this.md5gg(b, c, d, a, x[i + 8], 20, 1163531501);
      a = this.md5gg(a, b, c, d, x[i + 13], 5, -1444681467);
      d = this.md5gg(d, a, b, c, x[i + 2], 9, -51403784);
      c = this.md5gg(c, d, a, b, x[i + 7], 14, 1735328473);
      b = this.md5gg(b, c, d, a, x[i + 12], 20, -1926607734);
      a = this.md5hh(a, b, c, d, x[i + 5], 4, -378558);
      d = this.md5hh(d, a, b, c, x[i + 8], 11, -2022574463);
      c = this.md5hh(c, d, a, b, x[i + 11], 16, 1839030562);
      b = this.md5hh(b, c, d, a, x[i + 14], 23, -35309556);
      a = this.md5hh(a, b, c, d, x[i + 1], 4, -1530992060);
      d = this.md5hh(d, a, b, c, x[i + 4], 11, 1272893353);
      c = this.md5hh(c, d, a, b, x[i + 7], 16, -155497632);
      b = this.md5hh(b, c, d, a, x[i + 10], 23, -1094730640);
      a = this.md5hh(a, b, c, d, x[i + 13], 4, 681279174);
      d = this.md5hh(d, a, b, c, x[i], 11, -358537222);
      c = this.md5hh(c, d, a, b, x[i + 3], 16, -722521979);
      b = this.md5hh(b, c, d, a, x[i + 6], 23, 76029189);
      a = this.md5hh(a, b, c, d, x[i + 9], 4, -640364487);
      d = this.md5hh(d, a, b, c, x[i + 12], 11, -421815835);
      c = this.md5hh(c, d, a, b, x[i + 15], 16, 530742520);
      b = this.md5hh(b, c, d, a, x[i + 2], 23, -995338651);
      a = this.md5ii(a, b, c, d, x[i], 6, -198630844);
      d = this.md5ii(d, a, b, c, x[i + 7], 10, 1126891415);
      c = this.md5ii(c, d, a, b, x[i + 14], 15, -1416354905);
      b = this.md5ii(b, c, d, a, x[i + 5], 21, -57434055);
      a = this.md5ii(a, b, c, d, x[i + 12], 6, 1700485571);
      d = this.md5ii(d, a, b, c, x[i + 3], 10, -1894986606);
      c = this.md5ii(c, d, a, b, x[i + 10], 15, -1051523);
      b = this.md5ii(b, c, d, a, x[i + 1], 21, -2054922799);
      a = this.md5ii(a, b, c, d, x[i + 8], 6, 1873313359);
      d = this.md5ii(d, a, b, c, x[i + 15], 10, -30611744);
      c = this.md5ii(c, d, a, b, x[i + 6], 15, -1560198380);
      b = this.md5ii(b, c, d, a, x[i + 13], 21, 1309151649);
      a = this.md5ii(a, b, c, d, x[i + 4], 6, -145523070);
      d = this.md5ii(d, a, b, c, x[i + 11], 10, -1120210379);
      c = this.md5ii(c, d, a, b, x[i + 2], 15, 718787259);
      b = this.md5ii(b, c, d, a, x[i + 9], 21, -343485551);
      a = this.safeAdd(a, olda);
      b = this.safeAdd(b, oldb);
      c = this.safeAdd(c, oldc);
      d = this.safeAdd(d, oldd);
    }
    return [a, b, c, d];
  },
  binl2rstr: function binl2rstr(input) {
    var i;
    var output = '';
    var length32 = input.length * 32;
    for (i = 0; i < length32; i += 8) {
      output += String.fromCharCode(input[i >> 5] >>> i % 32 & 0xff);
    }
    return output;
  },
  rstr2binl: function rstr2binl(input) {
    var i;
    var output = [];
    output[(input.length >> 2) - 1] = undefined;
    for (i = 0; i < output.length; i += 1) {
      output[i] = 0;
    }
    var length8 = input.length * 8;
    for (i = 0; i < length8; i += 8) {
      output[i >> 5] |= (input.charCodeAt(i / 8) & 0xff) << i % 32;
    }
    return output;
  },
  rstrMD5: function rstrMD5(s) {
    return this.binl2rstr(this.binlMD5(this.rstr2binl(s), s.length * 8));
  },
  rstrHMACMD5: function rstrHMACMD5(key, data) {
    var i;
    var bkey = this.rstr2binl(key);
    var ipad = [];
    var opad = [];
    var hash;
    ipad[15] = opad[15] = undefined;
    if (bkey.length > 16) {
      bkey = this.binlMD5(bkey, key.length * 8);
    }
    for (i = 0; i < 16; i += 1) {
      ipad[i] = bkey[i] ^ 0x36363636;
      opad[i] = bkey[i] ^ 0x5c5c5c5c;
    }
    hash = this.binlMD5(ipad.concat(this.rstr2binl(data)), 512 + data.length * 8);
    return this.binl2rstr(this.binlMD5(opad.concat(hash), 512 + 128));
  },
  rstr2hex: function rstr2hex(input) {
    var hexTab = '0123456789abcdef';
    var output = '';
    var x;
    var i;
    for (i = 0; i < input.length; i += 1) {
      x = input.charCodeAt(i);
      output += hexTab.charAt(x >>> 4 & 0x0f) + hexTab.charAt(x & 0x0f);
    }
    return output;
  },
  str2rstrUTF8: function str2rstrUTF8(input) {
    return unescape(encodeURIComponent(input));
  },
  rawMD5: function rawMD5(s) {
    return this.rstrMD5(this.str2rstrUTF8(s));
  },
  hexMD5: function hexMD5(s) {
    return this.rstr2hex(this.rawMD5(s));
  },
  rawHMACMD5: function rawHMACMD5(k, d) {
    return this.rstrHMACMD5(this.str2rstrUTF8(k), str2rstrUTF8(d));
  },
  hexHMACMD5: function hexHMACMD5(k, d) {
    return this.rstr2hex(this.rawHMACMD5(k, d));
  },
  md5: function md5(string, key, raw) {
    if (!key) {
      if (!raw) {
        return this.hexMD5(string);
      }
      return this.rawMD5(string);
    }
    if (!raw) {
      return this.hexHMACMD5(key, string);
    }
    return this.rawHMACMD5(key, string);
  },
  getSig: function getSig(requestParam, sk, feature, mode) {
    var sig = null;
    var requestArr = [];
    Object.keys(requestParam).sort().forEach(function (key) {
      requestArr.push(key + '=' + requestParam[key]);
    });
    if (feature == 'search') {
      sig = '/ws/place/v1/search?' + requestArr.join('&') + sk;
    }
    if (feature == 'suggest') {
      sig = '/ws/place/v1/suggestion?' + requestArr.join('&') + sk;
    }
    if (feature == 'reverseGeocoder') {
      sig = '/ws/geocoder/v1/?' + requestArr.join('&') + sk;
    }
    if (feature == 'geocoder') {
      sig = '/ws/geocoder/v1/?' + requestArr.join('&') + sk;
    }
    if (feature == 'getCityList') {
      sig = '/ws/district/v1/list?' + requestArr.join('&') + sk;
    }
    if (feature == 'getDistrictByCityId') {
      sig = '/ws/district/v1/getchildren?' + requestArr.join('&') + sk;
    }
    if (feature == 'calculateDistance') {
      sig = '/ws/distance/v1/?' + requestArr.join('&') + sk;
    }
    if (feature == 'direction') {
      sig = '/ws/direction/v1/' + mode + '?' + requestArr.join('&') + sk;
    }
    sig = this.md5(sig);
    return sig;
  },
  location2query: function location2query(data) {
    if (typeof data == 'string') {
      return data;
    }
    var query = '';
    for (var i = 0; i < data.length; i++) {
      var d = data[i];
      if (!!query) {
        query += ';';
      }
      if (d.location) {
        query = query + d.location.lat + ',' + d.location.lng;
      }
      if (d.latitude && d.longitude) {
        query = query + d.latitude + ',' + d.longitude;
      }
    }
    return query;
  },
  rad: function rad(d) {
    return d * Math.PI / 180.0;
  },
  getEndLocation: function getEndLocation(location) {
    var to = location.split(';');
    var endLocation = [];
    for (var i = 0; i < to.length; i++) {
      endLocation.push({
        lat: parseFloat(to[i].split(',')[0]),
        lng: parseFloat(to[i].split(',')[1])
      });
    }
    return endLocation;
  },
  getDistance: function getDistance(latFrom, lngFrom, latTo, lngTo) {
    var radLatFrom = this.rad(latFrom);
    var radLatTo = this.rad(latTo);
    var a = radLatFrom - radLatTo;
    var b = this.rad(lngFrom) - this.rad(lngTo);
    var distance = 2 * Math.asin(Math.sqrt(Math.pow(Math.sin(a / 2), 2) + Math.cos(radLatFrom) * Math.cos(radLatTo) * Math.pow(Math.sin(b / 2), 2)));
    distance = distance * EARTH_RADIUS;
    distance = Math.round(distance * 10000) / 10000;
    return parseFloat(distance.toFixed(0));
  },
  getWXLocation: function getWXLocation(success, fail, complete) {
    wx.getLocation({
      type: 'gcj02',
      success: success,
      fail: fail,
      complete: complete
    });
  },
  getLocationParam: function getLocationParam(location) {
    if (typeof location == 'string') {
      var locationArr = location.split(',');
      if (locationArr.length === 2) {
        location = {
          latitude: location.split(',')[0],
          longitude: location.split(',')[1]
        };
      } else {
        location = {};
      }
    }
    return location;
  },
  polyfillParam: function polyfillParam(param) {
    param.success = param.success || function () {};
    param.fail = param.fail || function () {};
    param.complete = param.complete || function () {};
  },
  checkParamKeyEmpty: function checkParamKeyEmpty(param, key) {
    if (!param[key]) {
      var errconf = this.buildErrorConfig(ERROR_CONF.PARAM_ERR, ERROR_CONF.PARAM_ERR_MSG + key + '参数格式有误');
      param.fail(errconf);
      param.complete(errconf);
      return true;
    }
    return false;
  },
  checkKeyword: function checkKeyword(param) {
    return !this.checkParamKeyEmpty(param, 'keyword');
  },
  checkLocation: function checkLocation(param) {
    var location = this.getLocationParam(param.location);
    if (!location || !location.latitude || !location.longitude) {
      var errconf = this.buildErrorConfig(ERROR_CONF.PARAM_ERR, ERROR_CONF.PARAM_ERR_MSG + ' location参数格式有误');
      param.fail(errconf);
      param.complete(errconf);
      return false;
    }
    return true;
  },
  buildErrorConfig: function buildErrorConfig(errCode, errMsg) {
    return {
      status: errCode,
      message: errMsg
    };
  },
  handleData: function handleData(param, data, feature) {
    if (feature == 'search') {
      var searchResult = data.data;
      var searchSimplify = [];
      for (var i = 0; i < searchResult.length; i++) {
        searchSimplify.push({
          id: searchResult[i].id || null,
          title: searchResult[i].title || null,
          latitude: searchResult[i].location && searchResult[i].location.lat || null,
          longitude: searchResult[i].location && searchResult[i].location.lng || null,
          address: searchResult[i].address || null,
          category: searchResult[i].category || null,
          tel: searchResult[i].tel || null,
          adcode: searchResult[i].ad_info && searchResult[i].ad_info.adcode || null,
          city: searchResult[i].ad_info && searchResult[i].ad_info.city || null,
          district: searchResult[i].ad_info && searchResult[i].ad_info.district || null,
          province: searchResult[i].ad_info && searchResult[i].ad_info.province || null
        });
      }
      param.success(data, {
        searchResult: searchResult,
        searchSimplify: searchSimplify
      });
    } else if (feature == 'suggest') {
      var suggestResult = data.data;
      var suggestSimplify = [];
      for (var i = 0; i < suggestResult.length; i++) {
        suggestSimplify.push({
          adcode: suggestResult[i].adcode || null,
          address: suggestResult[i].address || null,
          category: suggestResult[i].category || null,
          city: suggestResult[i].city || null,
          district: suggestResult[i].district || null,
          id: suggestResult[i].id || null,
          latitude: suggestResult[i].location && suggestResult[i].location.lat || null,
          longitude: suggestResult[i].location && suggestResult[i].location.lng || null,
          province: suggestResult[i].province || null,
          title: suggestResult[i].title || null,
          type: suggestResult[i].type || null
        });
      }
      param.success(data, {
        suggestResult: suggestResult,
        suggestSimplify: suggestSimplify
      });
    } else if (feature == 'reverseGeocoder') {
      var reverseGeocoderResult = data.result;
      var reverseGeocoderSimplify = {
        address: reverseGeocoderResult.address || null,
        latitude: reverseGeocoderResult.location && reverseGeocoderResult.location.lat || null,
        longitude: reverseGeocoderResult.location && reverseGeocoderResult.location.lng || null,
        adcode: reverseGeocoderResult.ad_info && reverseGeocoderResult.ad_info.adcode || null,
        city: reverseGeocoderResult.address_component && reverseGeocoderResult.address_component.city || null,
        district: reverseGeocoderResult.address_component && reverseGeocoderResult.address_component.district || null,
        nation: reverseGeocoderResult.address_component && reverseGeocoderResult.address_component.nation || null,
        province: reverseGeocoderResult.address_component && reverseGeocoderResult.address_component.province || null,
        street: reverseGeocoderResult.address_component && reverseGeocoderResult.address_component.street || null,
        street_number: reverseGeocoderResult.address_component && reverseGeocoderResult.address_component.street_number || null,
        recommend: reverseGeocoderResult.formatted_addresses && reverseGeocoderResult.formatted_addresses.recommend || null,
        rough: reverseGeocoderResult.formatted_addresses && reverseGeocoderResult.formatted_addresses.rough || null
      };
      if (reverseGeocoderResult.pois) {
        var pois = reverseGeocoderResult.pois;
        var poisSimplify = [];
        for (var i = 0; i < pois.length; i++) {
          poisSimplify.push({
            id: pois[i].id || null,
            title: pois[i].title || null,
            latitude: pois[i].location && pois[i].location.lat || null,
            longitude: pois[i].location && pois[i].location.lng || null,
            address: pois[i].address || null,
            category: pois[i].category || null,
            adcode: pois[i].ad_info && pois[i].ad_info.adcode || null,
            city: pois[i].ad_info && pois[i].ad_info.city || null,
            district: pois[i].ad_info && pois[i].ad_info.district || null,
            province: pois[i].ad_info && pois[i].ad_info.province || null
          });
        }
        param.success(data, {
          reverseGeocoderResult: reverseGeocoderResult,
          reverseGeocoderSimplify: reverseGeocoderSimplify,
          pois: pois,
          poisSimplify: poisSimplify
        });
      } else {
        param.success(data, {
          reverseGeocoderResult: reverseGeocoderResult,
          reverseGeocoderSimplify: reverseGeocoderSimplify
        });
      }
    } else if (feature == 'geocoder') {
      var geocoderResult = data.result;
      var geocoderSimplify = {
        title: geocoderResult.title || null,
        latitude: geocoderResult.location && geocoderResult.location.lat || null,
        longitude: geocoderResult.location && geocoderResult.location.lng || null,
        adcode: geocoderResult.ad_info && geocoderResult.ad_info.adcode || null,
        province: geocoderResult.address_components && geocoderResult.address_components.province || null,
        city: geocoderResult.address_components && geocoderResult.address_components.city || null,
        district: geocoderResult.address_components && geocoderResult.address_components.district || null,
        street: geocoderResult.address_components && geocoderResult.address_components.street || null,
        street_number: geocoderResult.address_components && geocoderResult.address_components.street_number || null,
        level: geocoderResult.level || null
      };
      param.success(data, {
        geocoderResult: geocoderResult,
        geocoderSimplify: geocoderSimplify
      });
    } else if (feature == 'getCityList') {
      var provinceResult = data.result[0];
      var cityResult = data.result[1];
      var districtResult = data.result[2];
      param.success(data, {
        provinceResult: provinceResult,
        cityResult: cityResult,
        districtResult: districtResult
      });
    } else if (feature == 'getDistrictByCityId') {
      var districtByCity = data.result[0];
      param.success(data, districtByCity);
    } else if (feature == 'calculateDistance') {
      var calculateDistanceResult = data.result.elements;
      var distance = [];
      for (var i = 0; i < calculateDistanceResult.length; i++) {
        distance.push(calculateDistanceResult[i].distance);
      }
      param.success(data, {
        calculateDistanceResult: calculateDistanceResult,
        distance: distance
      });
    } else if (feature == 'direction') {
      var direction = data.result.routes;
      param.success(data, direction);
    } else {
      param.success(data);
    }
  },
  buildWxRequestConfig: function buildWxRequestConfig(param, options, feature) {
    var that = this;
    options.header = {
      "content-type": "application/json"
    };
    options.method = 'GET';
    options.success = function (res) {
      var data = res.data;
      if (data.status === 0) {
        that.handleData(param, data, feature);
      } else {
        param.fail(data);
      }
    };
    options.fail = function (res) {
      res.statusCode = ERROR_CONF.WX_ERR_CODE;
      param.fail(that.buildErrorConfig(ERROR_CONF.WX_ERR_CODE, res.errMsg));
    };
    options.complete = function (res) {
      var statusCode = +res.statusCode;
      switch (statusCode) {
        case ERROR_CONF.WX_ERR_CODE:
          {
            param.complete(that.buildErrorConfig(ERROR_CONF.WX_ERR_CODE, res.errMsg));
            break;
          }
        case ERROR_CONF.WX_OK_CODE:
          {
            var data = res.data;
            if (data.status === 0) {
              param.complete(data);
            } else {
              param.complete(that.buildErrorConfig(data.status, data.message));
            }
            break;
          }
        default:
          {
            param.complete(that.buildErrorConfig(ERROR_CONF.SYSTEM_ERR, ERROR_CONF.SYSTEM_ERR_MSG));
          }
      }
    };
    return options;
  },
  locationProcess: function locationProcess(param, locationsuccess, locationfail, locationcomplete) {
    var that = this;
    locationfail = locationfail || function (res) {
      res.statusCode = ERROR_CONF.WX_ERR_CODE;
      param.fail(that.buildErrorConfig(ERROR_CONF.WX_ERR_CODE, res.errMsg));
    };
    locationcomplete = locationcomplete || function (res) {
      if (res.statusCode == ERROR_CONF.WX_ERR_CODE) {
        param.complete(that.buildErrorConfig(ERROR_CONF.WX_ERR_CODE, res.errMsg));
      }
    };
    if (!param.location) {
      that.getWXLocation(locationsuccess, locationfail, locationcomplete);
    } else if (that.checkLocation(param)) {
      var location = Utils.getLocationParam(param.location);
      locationsuccess(location);
    }
  }
};
var QQMapWX = /*#__PURE__*/function () {
  "use strict";

  function QQMapWX(options) {
    _classCallCheck(this, QQMapWX);
    if (!options.key) {
      throw Error('key值不能为空');
    }
    this.key = options.key;
  }
  _createClass(QQMapWX, [{
    key: "search",
    value: function search(options) {
      var that = this;
      options = options || {};
      Utils.polyfillParam(options);
      if (!Utils.checkKeyword(options)) {
        return;
      }
      var requestParam = {
        keyword: options.keyword,
        orderby: options.orderby || '_distance',
        page_size: options.page_size || 10,
        page_index: options.page_index || 1,
        output: 'json',
        key: that.key
      };
      if (options.address_format) {
        requestParam.address_format = options.address_format;
      }
      if (options.filter) {
        requestParam.filter = options.filter;
      }
      var distance = options.distance || "1000";
      var auto_extend = options.auto_extend || 1;
      var region = null;
      var rectangle = null;
      if (options.region) {
        region = options.region;
      }
      if (options.rectangle) {
        rectangle = options.rectangle;
      }
      var locationsuccess = function locationsuccess(result) {
        if (region && !rectangle) {
          requestParam.boundary = "region(" + region + "," + auto_extend + "," + result.latitude + "," + result.longitude + ")";
          if (options.sig) {
            requestParam.sig = Utils.getSig(requestParam, options.sig, 'search');
          }
        } else if (rectangle && !region) {
          requestParam.boundary = "rectangle(" + rectangle + ")";
          if (options.sig) {
            requestParam.sig = Utils.getSig(requestParam, options.sig, 'search');
          }
        } else {
          requestParam.boundary = "nearby(" + result.latitude + "," + result.longitude + "," + distance + "," + auto_extend + ")";
          if (options.sig) {
            requestParam.sig = Utils.getSig(requestParam, options.sig, 'search');
          }
        }
        wx.request(Utils.buildWxRequestConfig(options, {
          url: URL_SEARCH,
          data: requestParam
        }, 'search'));
      };
      Utils.locationProcess(options, locationsuccess);
    }
  }, {
    key: "getSuggestion",
    value: function getSuggestion(options) {
      var that = this;
      options = options || {};
      Utils.polyfillParam(options);
      if (!Utils.checkKeyword(options)) {
        return;
      }
      var requestParam = {
        keyword: options.keyword,
        region: options.region || '全国',
        region_fix: options.region_fix || 0,
        policy: options.policy || 0,
        page_size: options.page_size || 10,
        page_index: options.page_index || 1,
        get_subpois: options.get_subpois || 0,
        output: 'json',
        key: that.key
      };
      if (options.address_format) {
        requestParam.address_format = options.address_format;
      }
      if (options.filter) {
        requestParam.filter = options.filter;
      }
      if (options.location) {
        var locationsuccess = function locationsuccess(result) {
          requestParam.location = result.latitude + ',' + result.longitude;
          if (options.sig) {
            requestParam.sig = Utils.getSig(requestParam, options.sig, 'suggest');
          }
          wx.request(Utils.buildWxRequestConfig(options, {
            url: URL_SUGGESTION,
            data: requestParam
          }, "suggest"));
        };
        Utils.locationProcess(options, locationsuccess);
      } else {
        if (options.sig) {
          requestParam.sig = Utils.getSig(requestParam, options.sig, 'suggest');
        }
        wx.request(Utils.buildWxRequestConfig(options, {
          url: URL_SUGGESTION,
          data: requestParam
        }, "suggest"));
      }
    }
  }, {
    key: "reverseGeocoder",
    value: function reverseGeocoder(options) {
      var that = this;
      options = options || {};
      Utils.polyfillParam(options);
      var requestParam = {
        coord_type: options.coord_type || 5,
        get_poi: options.get_poi || 0,
        output: 'json',
        key: that.key
      };
      if (options.poi_options) {
        requestParam.poi_options = options.poi_options;
      }
      var locationsuccess = function locationsuccess(result) {
        requestParam.location = result.latitude + ',' + result.longitude;
        if (options.sig) {
          requestParam.sig = Utils.getSig(requestParam, options.sig, 'reverseGeocoder');
        }
        wx.request(Utils.buildWxRequestConfig(options, {
          url: URL_GET_GEOCODER,
          data: requestParam
        }, 'reverseGeocoder'));
      };
      Utils.locationProcess(options, locationsuccess);
    }
  }, {
    key: "geocoder",
    value: function geocoder(options) {
      var that = this;
      options = options || {};
      Utils.polyfillParam(options);
      if (Utils.checkParamKeyEmpty(options, 'address')) {
        return;
      }
      var requestParam = {
        address: options.address,
        output: 'json',
        key: that.key
      };
      if (options.region) {
        requestParam.region = options.region;
      }
      if (options.sig) {
        requestParam.sig = Utils.getSig(requestParam, options.sig, 'geocoder');
      }
      wx.request(Utils.buildWxRequestConfig(options, {
        url: URL_GET_GEOCODER,
        data: requestParam
      }, 'geocoder'));
    }
  }, {
    key: "getCityList",
    value: function getCityList(options) {
      var that = this;
      options = options || {};
      Utils.polyfillParam(options);
      var requestParam = {
        output: 'json',
        key: that.key
      };
      if (options.sig) {
        requestParam.sig = Utils.getSig(requestParam, options.sig, 'getCityList');
      }
      wx.request(Utils.buildWxRequestConfig(options, {
        url: URL_CITY_LIST,
        data: requestParam
      }, 'getCityList'));
    }
  }, {
    key: "getDistrictByCityId",
    value: function getDistrictByCityId(options) {
      var that = this;
      options = options || {};
      Utils.polyfillParam(options);
      if (Utils.checkParamKeyEmpty(options, 'id')) {
        return;
      }
      var requestParam = {
        id: options.id || '',
        output: 'json',
        key: that.key
      };
      if (options.sig) {
        requestParam.sig = Utils.getSig(requestParam, options.sig, 'getDistrictByCityId');
      }
      wx.request(Utils.buildWxRequestConfig(options, {
        url: URL_AREA_LIST,
        data: requestParam
      }, 'getDistrictByCityId'));
    }
  }, {
    key: "calculateDistance",
    value: function calculateDistance(options) {
      var that = this;
      options = options || {};
      Utils.polyfillParam(options);
      if (Utils.checkParamKeyEmpty(options, 'to')) {
        return;
      }
      var requestParam = {
        mode: options.mode || 'walking',
        to: Utils.location2query(options.to),
        output: 'json',
        key: that.key
      };
      if (options.from) {
        options.location = options.from;
      }
      if (requestParam.mode == 'straight') {
        var locationsuccess = function locationsuccess(result) {
          var locationTo = Utils.getEndLocation(requestParam.to);
          var data = {
            message: "query ok",
            result: {
              elements: []
            },
            status: 0
          };
          for (var i = 0; i < locationTo.length; i++) {
            data.result.elements.push({
              distance: Utils.getDistance(result.latitude, result.longitude, locationTo[i].lat, locationTo[i].lng),
              duration: 0,
              from: {
                lat: result.latitude,
                lng: result.longitude
              },
              to: {
                lat: locationTo[i].lat,
                lng: locationTo[i].lng
              }
            });
          }
          var calculateResult = data.result.elements;
          var distanceResult = [];
          for (var i = 0; i < calculateResult.length; i++) {
            distanceResult.push(calculateResult[i].distance);
          }
          return options.success(data, {
            calculateResult: calculateResult,
            distanceResult: distanceResult
          });
        };
        Utils.locationProcess(options, locationsuccess);
      } else {
        var locationsuccess = function locationsuccess(result) {
          requestParam.from = result.latitude + ',' + result.longitude;
          if (options.sig) {
            requestParam.sig = Utils.getSig(requestParam, options.sig, 'calculateDistance');
          }
          wx.request(Utils.buildWxRequestConfig(options, {
            url: URL_DISTANCE,
            data: requestParam
          }, 'calculateDistance'));
        };
        Utils.locationProcess(options, locationsuccess);
      }
    }
  }, {
    key: "direction",
    value: function direction(options) {
      var that = this;
      options = options || {};
      Utils.polyfillParam(options);
      if (Utils.checkParamKeyEmpty(options, 'to')) {
        return;
      }
      var requestParam = {
        output: 'json',
        key: that.key
      };
      if (typeof options.to == 'string') {
        requestParam.to = options.to;
      } else {
        requestParam.to = options.to.latitude + ',' + options.to.longitude;
      }
      var SET_URL_DIRECTION = null;
      options.mode = options.mode || MODE.driving;
      SET_URL_DIRECTION = URL_DIRECTION + options.mode;
      if (options.from) {
        options.location = options.from;
      }
      if (options.mode == MODE.driving) {
        if (options.from_poi) {
          requestParam.from_poi = options.from_poi;
        }
        if (options.heading) {
          requestParam.heading = options.heading;
        }
        if (options.speed) {
          requestParam.speed = options.speed;
        }
        if (options.accuracy) {
          requestParam.accuracy = options.accuracy;
        }
        if (options.road_type) {
          requestParam.road_type = options.road_type;
        }
        if (options.to_poi) {
          requestParam.to_poi = options.to_poi;
        }
        if (options.from_track) {
          requestParam.from_track = options.from_track;
        }
        if (options.waypoints) {
          requestParam.waypoints = options.waypoints;
        }
        if (options.policy) {
          requestParam.policy = options.policy;
        }
        if (options.plate_number) {
          requestParam.plate_number = options.plate_number;
        }
      }
      if (options.mode == MODE.transit) {
        if (options.departure_time) {
          requestParam.departure_time = options.departure_time;
        }
        if (options.policy) {
          requestParam.policy = options.policy;
        }
      }
      var locationsuccess = function locationsuccess(result) {
        requestParam.from = result.latitude + ',' + result.longitude;
        if (options.sig) {
          requestParam.sig = Utils.getSig(requestParam, options.sig, 'direction', options.mode);
        }
        wx.request(Utils.buildWxRequestConfig(options, {
          url: SET_URL_DIRECTION,
          data: requestParam
        }, 'direction'));
      };
      Utils.locationProcess(options, locationsuccess);
    }
  }]);
  return QQMapWX;
}();
;
module.exports = QQMapWX;
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/uni-mp-weixin/dist/wx.js */ 1)["default"]))

/***/ }),
/* 41 */
/*!********************************************************************!*\
  !*** F:/project/qianduan/zhanhuitong_yudengji_git/style/style.css ***!
  \********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin
    if(false) { var cssReload; }
  

/***/ }),
/* 42 */
/*!************************************************************************!*\
  !*** F:/project/qianduan/zhanhuitong_yudengji_git/style/style_rpx.css ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin
    if(false) { var cssReload; }
  

/***/ }),
/* 43 */
/*!*************************************************************************************************!*\
  !*** F:/project/qianduan/zhanhuitong_yudengji_git/node_modules/vue-clipboard2/vue-clipboard.js ***!
  \*************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;var _typeof = __webpack_require__(/*! @babel/runtime/helpers/typeof */ 13);
var Clipboard = __webpack_require__(/*! clipboard/dist/clipboard.min.js */ 44); // FIXME: workaround for browserify

var VueClipboardConfig = {
  autoSetContainer: false,
  appendToBody: true // This fixes IE, see #50
};

var VueClipboard = {
  install: function install(Vue) {
    var globalPrototype = Vue.version.slice(0, 2) === '3.' ? Vue.config.globalProperties : Vue.prototype;
    globalPrototype.$clipboardConfig = VueClipboardConfig;
    globalPrototype.$copyText = function (_text, container) {
      return new Promise(function (resolve, reject) {
        var fakeElement = document.createElement('button');
        var clipboard = new Clipboard(fakeElement, {
          text: function text() {
            return _text;
          },
          action: function action() {
            return 'copy';
          },
          container: _typeof(container) === 'object' ? container : document.body
        });
        clipboard.on('success', function (e) {
          clipboard.destroy();
          resolve(e);
        });
        clipboard.on('error', function (e) {
          clipboard.destroy();
          reject(e);
        });
        if (VueClipboardConfig.appendToBody) document.body.appendChild(fakeElement);
        fakeElement.click();
        if (VueClipboardConfig.appendToBody) document.body.removeChild(fakeElement);
      });
    };
    Vue.directive('clipboard', {
      bind: function bind(el, binding, vnode) {
        if (binding.arg === 'success') {
          el._vClipboard_success = binding.value;
        } else if (binding.arg === 'error') {
          el._vClipboard_error = binding.value;
        } else {
          var clipboard = new Clipboard(el, {
            text: function text() {
              return binding.value;
            },
            action: function action() {
              return binding.arg === 'cut' ? 'cut' : 'copy';
            },
            container: VueClipboardConfig.autoSetContainer ? el : undefined
          });
          clipboard.on('success', function (e) {
            var callback = el._vClipboard_success;
            callback && callback(e);
          });
          clipboard.on('error', function (e) {
            var callback = el._vClipboard_error;
            callback && callback(e);
          });
          el._vClipboard = clipboard;
        }
      },
      update: function update(el, binding) {
        if (binding.arg === 'success') {
          el._vClipboard_success = binding.value;
        } else if (binding.arg === 'error') {
          el._vClipboard_error = binding.value;
        } else {
          el._vClipboard.text = function () {
            return binding.value;
          };
          el._vClipboard.action = function () {
            return binding.arg === 'cut' ? 'cut' : 'copy';
          };
        }
      },
      unbind: function unbind(el, binding) {
        // FIXME: investigate why $element._vClipboard was missing
        if (!el._vClipboard) return;
        if (binding.arg === 'success') {
          delete el._vClipboard_success;
        } else if (binding.arg === 'error') {
          delete el._vClipboard_error;
        } else {
          el._vClipboard.destroy();
          delete el._vClipboard;
        }
      }
    });
  },
  config: VueClipboardConfig
};
if (( false ? undefined : _typeof(exports)) === 'object') {
  module.exports = VueClipboard;
} else if (true) {
  !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = (function () {
    return VueClipboard;
  }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
}

/***/ }),
/* 44 */
/*!*************************************************************************************************!*\
  !*** F:/project/qianduan/zhanhuitong_yudengji_git/node_modules/clipboard/dist/clipboard.min.js ***!
  \*************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(module) {var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;var _typeof = __webpack_require__(/*! @babel/runtime/helpers/typeof */ 13);
/*!
 * clipboard.js v2.0.11
 * https://clipboardjs.com/
 *
 * Licensed MIT © Zeno Rocha
 */
!function (t, e) {
  "object" == ( false ? undefined : _typeof(exports)) && "object" == ( false ? undefined : _typeof(module)) ? module.exports = e() :  true ? !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (e),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : undefined;
}(this, function () {
  return n = {
    686: function _(t, e, n) {
      "use strict";

      n.d(e, {
        default: function _default() {
          return b;
        }
      });
      var e = n(279),
        i = n.n(e),
        e = n(370),
        u = n.n(e),
        e = n(817),
        r = n.n(e);
      function c(t) {
        try {
          return document.execCommand(t);
        } catch (t) {
          return;
        }
      }
      var a = function a(t) {
        t = r()(t);
        return c("cut"), t;
      };
      function o(t, e) {
        var n,
          o,
          t = (n = t, o = "rtl" === document.documentElement.getAttribute("dir"), (t = document.createElement("textarea")).style.fontSize = "12pt", t.style.border = "0", t.style.padding = "0", t.style.margin = "0", t.style.position = "absolute", t.style[o ? "right" : "left"] = "-9999px", o = window.pageYOffset || document.documentElement.scrollTop, t.style.top = "".concat(o, "px"), t.setAttribute("readonly", ""), t.value = n, t);
        return e.container.appendChild(t), e = r()(t), c("copy"), t.remove(), e;
      }
      var f = function f(t) {
        var e = 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : {
            container: document.body
          },
          n = "";
        return "string" == typeof t ? n = o(t, e) : t instanceof HTMLInputElement && !["text", "search", "url", "tel", "password"].includes(null == t ? void 0 : t.type) ? n = o(t.value, e) : (n = r()(t), c("copy")), n;
      };
      function l(t) {
        return (l = "function" == typeof Symbol && "symbol" == _typeof(Symbol.iterator) ? function (t) {
          return _typeof(t);
        } : function (t) {
          return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : _typeof(t);
        })(t);
      }
      var s = function s() {
        var t = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : {},
          e = t.action,
          n = void 0 === e ? "copy" : e,
          o = t.container,
          e = t.target,
          t = t.text;
        if ("copy" !== n && "cut" !== n) throw new Error('Invalid "action" value, use either "copy" or "cut"');
        if (void 0 !== e) {
          if (!e || "object" !== l(e) || 1 !== e.nodeType) throw new Error('Invalid "target" value, use a valid Element');
          if ("copy" === n && e.hasAttribute("disabled")) throw new Error('Invalid "target" attribute. Please use "readonly" instead of "disabled" attribute');
          if ("cut" === n && (e.hasAttribute("readonly") || e.hasAttribute("disabled"))) throw new Error('Invalid "target" attribute. You can\'t cut text from elements with "readonly" or "disabled" attributes');
        }
        return t ? f(t, {
          container: o
        }) : e ? "cut" === n ? a(e) : f(e, {
          container: o
        }) : void 0;
      };
      function p(t) {
        return (p = "function" == typeof Symbol && "symbol" == _typeof(Symbol.iterator) ? function (t) {
          return _typeof(t);
        } : function (t) {
          return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : _typeof(t);
        })(t);
      }
      function d(t, e) {
        for (var n = 0; n < e.length; n++) {
          var o = e[n];
          o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(t, o.key, o);
        }
      }
      function y(t, e) {
        return (y = Object.setPrototypeOf || function (t, e) {
          return t.__proto__ = e, t;
        })(t, e);
      }
      function h(n) {
        var o = function () {
          if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
          if (Reflect.construct.sham) return !1;
          if ("function" == typeof Proxy) return !0;
          try {
            return Date.prototype.toString.call(Reflect.construct(Date, [], function () {})), !0;
          } catch (t) {
            return !1;
          }
        }();
        return function () {
          var t,
            e = v(n);
          return t = o ? (t = v(this).constructor, Reflect.construct(e, arguments, t)) : e.apply(this, arguments), e = this, !(t = t) || "object" !== p(t) && "function" != typeof t ? function (t) {
            if (void 0 !== t) return t;
            throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
          }(e) : t;
        };
      }
      function v(t) {
        return (v = Object.setPrototypeOf ? Object.getPrototypeOf : function (t) {
          return t.__proto__ || Object.getPrototypeOf(t);
        })(t);
      }
      function m(t, e) {
        t = "data-clipboard-".concat(t);
        if (e.hasAttribute(t)) return e.getAttribute(t);
      }
      var b = function () {
        !function (t, e) {
          if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");
          t.prototype = Object.create(e && e.prototype, {
            constructor: {
              value: t,
              writable: !0,
              configurable: !0
            }
          }), e && y(t, e);
        }(r, i());
        var t,
          e,
          n,
          o = h(r);
        function r(t, e) {
          var n;
          return function (t) {
            if (!(t instanceof r)) throw new TypeError("Cannot call a class as a function");
          }(this), (n = o.call(this)).resolveOptions(e), n.listenClick(t), n;
        }
        return t = r, n = [{
          key: "copy",
          value: function value(t) {
            var e = 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : {
              container: document.body
            };
            return f(t, e);
          }
        }, {
          key: "cut",
          value: function value(t) {
            return a(t);
          }
        }, {
          key: "isSupported",
          value: function value() {
            var t = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : ["copy", "cut"],
              t = "string" == typeof t ? [t] : t,
              e = !!document.queryCommandSupported;
            return t.forEach(function (t) {
              e = e && !!document.queryCommandSupported(t);
            }), e;
          }
        }], (e = [{
          key: "resolveOptions",
          value: function value() {
            var t = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : {};
            this.action = "function" == typeof t.action ? t.action : this.defaultAction, this.target = "function" == typeof t.target ? t.target : this.defaultTarget, this.text = "function" == typeof t.text ? t.text : this.defaultText, this.container = "object" === p(t.container) ? t.container : document.body;
          }
        }, {
          key: "listenClick",
          value: function value(t) {
            var e = this;
            this.listener = u()(t, "click", function (t) {
              return e.onClick(t);
            });
          }
        }, {
          key: "onClick",
          value: function value(t) {
            var e = t.delegateTarget || t.currentTarget,
              n = this.action(e) || "copy",
              t = s({
                action: n,
                container: this.container,
                target: this.target(e),
                text: this.text(e)
              });
            this.emit(t ? "success" : "error", {
              action: n,
              text: t,
              trigger: e,
              clearSelection: function clearSelection() {
                e && e.focus(), window.getSelection().removeAllRanges();
              }
            });
          }
        }, {
          key: "defaultAction",
          value: function value(t) {
            return m("action", t);
          }
        }, {
          key: "defaultTarget",
          value: function value(t) {
            t = m("target", t);
            if (t) return document.querySelector(t);
          }
        }, {
          key: "defaultText",
          value: function value(t) {
            return m("text", t);
          }
        }, {
          key: "destroy",
          value: function value() {
            this.listener.destroy();
          }
        }]) && d(t.prototype, e), n && d(t, n), r;
      }();
    },
    828: function _(t) {
      var e;
      "undefined" == typeof Element || Element.prototype.matches || ((e = Element.prototype).matches = e.matchesSelector || e.mozMatchesSelector || e.msMatchesSelector || e.oMatchesSelector || e.webkitMatchesSelector), t.exports = function (t, e) {
        for (; t && 9 !== t.nodeType;) {
          if ("function" == typeof t.matches && t.matches(e)) return t;
          t = t.parentNode;
        }
      };
    },
    438: function _(t, e, n) {
      var u = n(828);
      function i(t, e, n, o, r) {
        var i = function (e, n, t, o) {
          return function (t) {
            t.delegateTarget = u(t.target, n), t.delegateTarget && o.call(e, t);
          };
        }.apply(this, arguments);
        return t.addEventListener(n, i, r), {
          destroy: function destroy() {
            t.removeEventListener(n, i, r);
          }
        };
      }
      t.exports = function (t, e, n, o, r) {
        return "function" == typeof t.addEventListener ? i.apply(null, arguments) : "function" == typeof n ? i.bind(null, document).apply(null, arguments) : ("string" == typeof t && (t = document.querySelectorAll(t)), Array.prototype.map.call(t, function (t) {
          return i(t, e, n, o, r);
        }));
      };
    },
    879: function _(t, n) {
      n.node = function (t) {
        return void 0 !== t && t instanceof HTMLElement && 1 === t.nodeType;
      }, n.nodeList = function (t) {
        var e = Object.prototype.toString.call(t);
        return void 0 !== t && ("[object NodeList]" === e || "[object HTMLCollection]" === e) && "length" in t && (0 === t.length || n.node(t[0]));
      }, n.string = function (t) {
        return "string" == typeof t || t instanceof String;
      }, n.fn = function (t) {
        return "[object Function]" === Object.prototype.toString.call(t);
      };
    },
    370: function _(t, e, n) {
      var f = n(879),
        l = n(438);
      t.exports = function (t, e, n) {
        if (!t && !e && !n) throw new Error("Missing required arguments");
        if (!f.string(e)) throw new TypeError("Second argument must be a String");
        if (!f.fn(n)) throw new TypeError("Third argument must be a Function");
        if (f.node(t)) return c = e, a = n, (u = t).addEventListener(c, a), {
          destroy: function destroy() {
            u.removeEventListener(c, a);
          }
        };
        if (f.nodeList(t)) return o = t, r = e, i = n, Array.prototype.forEach.call(o, function (t) {
          t.addEventListener(r, i);
        }), {
          destroy: function destroy() {
            Array.prototype.forEach.call(o, function (t) {
              t.removeEventListener(r, i);
            });
          }
        };
        if (f.string(t)) return t = t, e = e, n = n, l(document.body, t, e, n);
        throw new TypeError("First argument must be a String, HTMLElement, HTMLCollection, or NodeList");
        var o, r, i, u, c, a;
      };
    },
    817: function _(t) {
      t.exports = function (t) {
        var e,
          n = "SELECT" === t.nodeName ? (t.focus(), t.value) : "INPUT" === t.nodeName || "TEXTAREA" === t.nodeName ? ((e = t.hasAttribute("readonly")) || t.setAttribute("readonly", ""), t.select(), t.setSelectionRange(0, t.value.length), e || t.removeAttribute("readonly"), t.value) : (t.hasAttribute("contenteditable") && t.focus(), n = window.getSelection(), (e = document.createRange()).selectNodeContents(t), n.removeAllRanges(), n.addRange(e), n.toString());
        return n;
      };
    },
    279: function _(t) {
      function e() {}
      e.prototype = {
        on: function on(t, e, n) {
          var o = this.e || (this.e = {});
          return (o[t] || (o[t] = [])).push({
            fn: e,
            ctx: n
          }), this;
        },
        once: function once(t, e, n) {
          var o = this;
          function r() {
            o.off(t, r), e.apply(n, arguments);
          }
          return r._ = e, this.on(t, r, n);
        },
        emit: function emit(t) {
          for (var e = [].slice.call(arguments, 1), n = ((this.e || (this.e = {}))[t] || []).slice(), o = 0, r = n.length; o < r; o++) {
            n[o].fn.apply(n[o].ctx, e);
          }
          return this;
        },
        off: function off(t, e) {
          var n = this.e || (this.e = {}),
            o = n[t],
            r = [];
          if (o && e) for (var i = 0, u = o.length; i < u; i++) {
            o[i].fn !== e && o[i].fn._ !== e && r.push(o[i]);
          }
          return r.length ? n[t] = r : delete n[t], this;
        }
      }, t.exports = e, t.exports.TinyEmitter = e;
    }
  }, r = {}, o.n = function (t) {
    var e = t && t.__esModule ? function () {
      return t.default;
    } : function () {
      return t;
    };
    return o.d(e, {
      a: e
    }), e;
  }, o.d = function (t, e) {
    for (var n in e) {
      o.o(e, n) && !o.o(t, n) && Object.defineProperty(t, n, {
        enumerable: !0,
        get: e[n]
      });
    }
  }, o.o = function (t, e) {
    return Object.prototype.hasOwnProperty.call(t, e);
  }, o(686).default;
  function o(t) {
    if (r[t]) return r[t].exports;
    var e = r[t] = {
      exports: {}
    };
    return n[t](e, e.exports, o), e.exports;
  }
  var n, r;
});
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../../../idea/HBuilderX/plugins/uniapp-cli/node_modules/webpack/buildin/module.js */ 45)(module)))

/***/ }),
/* 45 */
/*!***********************************!*\
  !*** (webpack)/buildin/module.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = function(module) {
	if (!module.webpackPolyfill) {
		module.deprecate = function() {};
		module.paths = [];
		// module.parent = undefined by default
		if (!module.children) module.children = [];
		Object.defineProperty(module, "loaded", {
			enumerable: true,
			get: function() {
				return module.l;
			}
		});
		Object.defineProperty(module, "id", {
			enumerable: true,
			get: function() {
				return module.i;
			}
		});
		module.webpackPolyfill = 1;
	}
	return module;
};


/***/ }),
/* 46 */
/*!****************************************************************************!*\
  !*** F:/project/qianduan/zhanhuitong_yudengji_git/js_sdk/ar-aes/ar-aes.js ***!
  \****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _typeof = __webpack_require__(/*! @babel/runtime/helpers/typeof */ 13);
var CryptoJS = CryptoJS || function (u, p) {
  var d = {},
    l = d.lib = {},
    s = function s() {},
    t = l.Base = {
      extend: function extend(a) {
        s.prototype = this;
        var c = new s();
        a && c.mixIn(a);
        c.hasOwnProperty("init") || (c.init = function () {
          c.$super.init.apply(this, arguments);
        });
        c.init.prototype = c;
        c.$super = this;
        return c;
      },
      create: function create() {
        var a = this.extend();
        a.init.apply(a, arguments);
        return a;
      },
      init: function init() {},
      mixIn: function mixIn(a) {
        for (var c in a) {
          a.hasOwnProperty(c) && (this[c] = a[c]);
        }
        a.hasOwnProperty("toString") && (this.toString = a.toString);
      },
      clone: function clone() {
        return this.init.prototype.extend(this);
      }
    },
    r = l.WordArray = t.extend({
      init: function init(a, c) {
        a = this.words = a || [];
        this.sigBytes = c != p ? c : 4 * a.length;
      },
      toString: function toString(a) {
        return (a || v).stringify(this);
      },
      concat: function concat(a) {
        var c = this.words,
          e = a.words,
          j = this.sigBytes;
        a = a.sigBytes;
        this.clamp();
        if (j % 4) for (var k = 0; k < a; k++) {
          c[j + k >>> 2] |= (e[k >>> 2] >>> 24 - 8 * (k % 4) & 255) << 24 - 8 * ((j + k) % 4);
        } else if (65535 < e.length) for (k = 0; k < a; k += 4) {
          c[j + k >>> 2] = e[k >>> 2];
        } else c.push.apply(c, e);
        this.sigBytes += a;
        return this;
      },
      clamp: function clamp() {
        var a = this.words,
          c = this.sigBytes;
        a[c >>> 2] &= 4294967295 << 32 - 8 * (c % 4);
        a.length = u.ceil(c / 4);
      },
      clone: function clone() {
        var a = t.clone.call(this);
        a.words = this.words.slice(0);
        return a;
      },
      random: function random(a) {
        for (var c = [], e = 0; e < a; e += 4) {
          c.push(4294967296 * u.random() | 0);
        }
        return new r.init(c, a);
      }
    }),
    w = d.enc = {},
    v = w.Hex = {
      stringify: function stringify(a) {
        var c = a.words;
        a = a.sigBytes;
        for (var e = [], j = 0; j < a; j++) {
          var k = c[j >>> 2] >>> 24 - 8 * (j % 4) & 255;
          e.push((k >>> 4).toString(16));
          e.push((k & 15).toString(16));
        }
        return e.join("");
      },
      parse: function parse(a) {
        for (var c = a.length, e = [], j = 0; j < c; j += 2) {
          e[j >>> 3] |= parseInt(a.substr(j, 2), 16) << 24 - 4 * (j % 8);
        }
        return new r.init(e, c / 2);
      }
    },
    b = w.Latin1 = {
      stringify: function stringify(a) {
        var c = a.words;
        a = a.sigBytes;
        for (var e = [], j = 0; j < a; j++) {
          e.push(String.fromCharCode(c[j >>> 2] >>> 24 - 8 * (j % 4) & 255));
        }
        return e.join("");
      },
      parse: function parse(a) {
        for (var c = a.length, e = [], j = 0; j < c; j++) {
          e[j >>> 2] |= (a.charCodeAt(j) & 255) << 24 - 8 * (j % 4);
        }
        return new r.init(e, c);
      }
    },
    x = w.Utf8 = {
      stringify: function stringify(a) {
        try {
          return decodeURIComponent(escape(b.stringify(a)));
        } catch (c) {
          throw Error("Malformed UTF-8 data");
        }
      },
      parse: function parse(a) {
        return b.parse(unescape(encodeURIComponent(a)));
      }
    },
    q = l.BufferedBlockAlgorithm = t.extend({
      reset: function reset() {
        this._data = new r.init();
        this._nDataBytes = 0;
      },
      _append: function _append(a) {
        "string" == typeof a && (a = x.parse(a));
        this._data.concat(a);
        this._nDataBytes += a.sigBytes;
      },
      _process: function _process(a) {
        var c = this._data,
          e = c.words,
          j = c.sigBytes,
          k = this.blockSize,
          b = j / (4 * k),
          b = a ? u.ceil(b) : u.max((b | 0) - this._minBufferSize, 0);
        a = b * k;
        j = u.min(4 * a, j);
        if (a) {
          for (var q = 0; q < a; q += k) {
            this._doProcessBlock(e, q);
          }
          q = e.splice(0, a);
          c.sigBytes -= j;
        }
        return new r.init(q, j);
      },
      clone: function clone() {
        var a = t.clone.call(this);
        a._data = this._data.clone();
        return a;
      },
      _minBufferSize: 0
    });
  l.Hasher = q.extend({
    cfg: t.extend(),
    init: function init(a) {
      this.cfg = this.cfg.extend(a);
      this.reset();
    },
    reset: function reset() {
      q.reset.call(this);
      this._doReset();
    },
    update: function update(a) {
      this._append(a);
      this._process();
      return this;
    },
    finalize: function finalize(a) {
      a && this._append(a);
      return this._doFinalize();
    },
    blockSize: 16,
    _createHelper: function _createHelper(a) {
      return function (b, e) {
        return new a.init(e).finalize(b);
      };
    },
    _createHmacHelper: function _createHmacHelper(a) {
      return function (b, e) {
        return new n.HMAC.init(a, e).finalize(b);
      };
    }
  });
  var n = d.algo = {};
  return d;
}(Math);
(function () {
  var u = CryptoJS,
    p = u.lib.WordArray;
  u.enc.Base64 = {
    stringify: function stringify(d) {
      var l = d.words,
        p = d.sigBytes,
        t = this._map;
      d.clamp();
      d = [];
      for (var r = 0; r < p; r += 3) {
        for (var w = (l[r >>> 2] >>> 24 - 8 * (r % 4) & 255) << 16 | (l[r + 1 >>> 2] >>> 24 - 8 * ((r + 1) % 4) & 255) << 8 | l[r + 2 >>> 2] >>> 24 - 8 * ((r + 2) % 4) & 255, v = 0; 4 > v && r + 0.75 * v < p; v++) {
          d.push(t.charAt(w >>> 6 * (3 - v) & 63));
        }
      }
      if (l = t.charAt(64)) for (; d.length % 4;) {
        d.push(l);
      }
      return d.join("");
    },
    parse: function parse(d) {
      var l = d.length,
        s = this._map,
        t = s.charAt(64);
      t && (t = d.indexOf(t), -1 != t && (l = t));
      for (var t = [], r = 0, w = 0; w < l; w++) {
        if (w % 4) {
          var v = s.indexOf(d.charAt(w - 1)) << 2 * (w % 4),
            b = s.indexOf(d.charAt(w)) >>> 6 - 2 * (w % 4);
          t[r >>> 2] |= (v | b) << 24 - 8 * (r % 4);
          r++;
        }
      }
      return p.create(t, r);
    },
    _map: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+@="
  };
})();
(function (u) {
  function p(b, n, a, c, e, j, k) {
    b = b + (n & a | ~n & c) + e + k;
    return (b << j | b >>> 32 - j) + n;
  }
  function d(b, n, a, c, e, j, k) {
    b = b + (n & c | a & ~c) + e + k;
    return (b << j | b >>> 32 - j) + n;
  }
  function l(b, n, a, c, e, j, k) {
    b = b + (n ^ a ^ c) + e + k;
    return (b << j | b >>> 32 - j) + n;
  }
  function s(b, n, a, c, e, j, k) {
    b = b + (a ^ (n | ~c)) + e + k;
    return (b << j | b >>> 32 - j) + n;
  }
  for (var t = CryptoJS, r = t.lib, w = r.WordArray, v = r.Hasher, r = t.algo, b = [], x = 0; 64 > x; x++) {
    b[x] = 4294967296 * u.abs(u.sin(x + 1)) | 0;
  }
  r = r.MD5 = v.extend({
    _doReset: function _doReset() {
      this._hash = new w.init([1732584193, 4023233417, 2562383102, 271733878]);
    },
    _doProcessBlock: function _doProcessBlock(q, n) {
      for (var a = 0; 16 > a; a++) {
        var c = n + a,
          e = q[c];
        q[c] = (e << 8 | e >>> 24) & 16711935 | (e << 24 | e >>> 8) & 4278255360;
      }
      var a = this._hash.words,
        c = q[n + 0],
        e = q[n + 1],
        j = q[n + 2],
        k = q[n + 3],
        z = q[n + 4],
        r = q[n + 5],
        t = q[n + 6],
        w = q[n + 7],
        v = q[n + 8],
        A = q[n + 9],
        B = q[n + 10],
        C = q[n + 11],
        u = q[n + 12],
        D = q[n + 13],
        E = q[n + 14],
        x = q[n + 15],
        f = a[0],
        m = a[1],
        g = a[2],
        h = a[3],
        f = p(f, m, g, h, c, 7, b[0]),
        h = p(h, f, m, g, e, 12, b[1]),
        g = p(g, h, f, m, j, 17, b[2]),
        m = p(m, g, h, f, k, 22, b[3]),
        f = p(f, m, g, h, z, 7, b[4]),
        h = p(h, f, m, g, r, 12, b[5]),
        g = p(g, h, f, m, t, 17, b[6]),
        m = p(m, g, h, f, w, 22, b[7]),
        f = p(f, m, g, h, v, 7, b[8]),
        h = p(h, f, m, g, A, 12, b[9]),
        g = p(g, h, f, m, B, 17, b[10]),
        m = p(m, g, h, f, C, 22, b[11]),
        f = p(f, m, g, h, u, 7, b[12]),
        h = p(h, f, m, g, D, 12, b[13]),
        g = p(g, h, f, m, E, 17, b[14]),
        m = p(m, g, h, f, x, 22, b[15]),
        f = d(f, m, g, h, e, 5, b[16]),
        h = d(h, f, m, g, t, 9, b[17]),
        g = d(g, h, f, m, C, 14, b[18]),
        m = d(m, g, h, f, c, 20, b[19]),
        f = d(f, m, g, h, r, 5, b[20]),
        h = d(h, f, m, g, B, 9, b[21]),
        g = d(g, h, f, m, x, 14, b[22]),
        m = d(m, g, h, f, z, 20, b[23]),
        f = d(f, m, g, h, A, 5, b[24]),
        h = d(h, f, m, g, E, 9, b[25]),
        g = d(g, h, f, m, k, 14, b[26]),
        m = d(m, g, h, f, v, 20, b[27]),
        f = d(f, m, g, h, D, 5, b[28]),
        h = d(h, f, m, g, j, 9, b[29]),
        g = d(g, h, f, m, w, 14, b[30]),
        m = d(m, g, h, f, u, 20, b[31]),
        f = l(f, m, g, h, r, 4, b[32]),
        h = l(h, f, m, g, v, 11, b[33]),
        g = l(g, h, f, m, C, 16, b[34]),
        m = l(m, g, h, f, E, 23, b[35]),
        f = l(f, m, g, h, e, 4, b[36]),
        h = l(h, f, m, g, z, 11, b[37]),
        g = l(g, h, f, m, w, 16, b[38]),
        m = l(m, g, h, f, B, 23, b[39]),
        f = l(f, m, g, h, D, 4, b[40]),
        h = l(h, f, m, g, c, 11, b[41]),
        g = l(g, h, f, m, k, 16, b[42]),
        m = l(m, g, h, f, t, 23, b[43]),
        f = l(f, m, g, h, A, 4, b[44]),
        h = l(h, f, m, g, u, 11, b[45]),
        g = l(g, h, f, m, x, 16, b[46]),
        m = l(m, g, h, f, j, 23, b[47]),
        f = s(f, m, g, h, c, 6, b[48]),
        h = s(h, f, m, g, w, 10, b[49]),
        g = s(g, h, f, m, E, 15, b[50]),
        m = s(m, g, h, f, r, 21, b[51]),
        f = s(f, m, g, h, u, 6, b[52]),
        h = s(h, f, m, g, k, 10, b[53]),
        g = s(g, h, f, m, B, 15, b[54]),
        m = s(m, g, h, f, e, 21, b[55]),
        f = s(f, m, g, h, v, 6, b[56]),
        h = s(h, f, m, g, x, 10, b[57]),
        g = s(g, h, f, m, t, 15, b[58]),
        m = s(m, g, h, f, D, 21, b[59]),
        f = s(f, m, g, h, z, 6, b[60]),
        h = s(h, f, m, g, C, 10, b[61]),
        g = s(g, h, f, m, j, 15, b[62]),
        m = s(m, g, h, f, A, 21, b[63]);
      a[0] = a[0] + f | 0;
      a[1] = a[1] + m | 0;
      a[2] = a[2] + g | 0;
      a[3] = a[3] + h | 0;
    },
    _doFinalize: function _doFinalize() {
      var b = this._data,
        n = b.words,
        a = 8 * this._nDataBytes,
        c = 8 * b.sigBytes;
      n[c >>> 5] |= 128 << 24 - c % 32;
      var e = u.floor(a / 4294967296);
      n[(c + 64 >>> 9 << 4) + 15] = (e << 8 | e >>> 24) & 16711935 | (e << 24 | e >>> 8) & 4278255360;
      n[(c + 64 >>> 9 << 4) + 14] = (a << 8 | a >>> 24) & 16711935 | (a << 24 | a >>> 8) & 4278255360;
      b.sigBytes = 4 * (n.length + 1);
      this._process();
      b = this._hash;
      n = b.words;
      for (a = 0; 4 > a; a++) {
        c = n[a], n[a] = (c << 8 | c >>> 24) & 16711935 | (c << 24 | c >>> 8) & 4278255360;
      }
      return b;
    },
    clone: function clone() {
      var b = v.clone.call(this);
      b._hash = this._hash.clone();
      return b;
    }
  });
  t.MD5 = v._createHelper(r);
  t.HmacMD5 = v._createHmacHelper(r);
})(Math);
(function () {
  var u = CryptoJS,
    p = u.lib,
    d = p.Base,
    l = p.WordArray,
    p = u.algo,
    s = p.EvpKDF = d.extend({
      cfg: d.extend({
        keySize: 4,
        hasher: p.MD5,
        iterations: 1
      }),
      init: function init(d) {
        this.cfg = this.cfg.extend(d);
      },
      compute: function compute(d, r) {
        for (var p = this.cfg, s = p.hasher.create(), b = l.create(), u = b.words, q = p.keySize, p = p.iterations; u.length < q;) {
          n && s.update(n);
          var n = s.update(d).finalize(r);
          s.reset();
          for (var a = 1; a < p; a++) {
            n = s.finalize(n), s.reset();
          }
          b.concat(n);
        }
        b.sigBytes = 4 * q;
        return b;
      }
    });
  u.EvpKDF = function (d, l, p) {
    return s.create(p).compute(d, l);
  };
})();
CryptoJS.lib.Cipher || function (u) {
  var p = CryptoJS,
    d = p.lib,
    l = d.Base,
    s = d.WordArray,
    t = d.BufferedBlockAlgorithm,
    r = p.enc.Base64,
    w = p.algo.EvpKDF,
    v = d.Cipher = t.extend({
      cfg: l.extend(),
      createEncryptor: function createEncryptor(e, a) {
        return this.create(this._ENC_XFORM_MODE, e, a);
      },
      createDecryptor: function createDecryptor(e, a) {
        return this.create(this._DEC_XFORM_MODE, e, a);
      },
      init: function init(e, a, b) {
        this.cfg = this.cfg.extend(b);
        this._xformMode = e;
        this._key = a;
        this.reset();
      },
      reset: function reset() {
        t.reset.call(this);
        this._doReset();
      },
      process: function process(e) {
        this._append(e);
        return this._process();
      },
      finalize: function finalize(e) {
        e && this._append(e);
        return this._doFinalize();
      },
      keySize: 4,
      ivSize: 4,
      _ENC_XFORM_MODE: 1,
      _DEC_XFORM_MODE: 2,
      _createHelper: function _createHelper(e) {
        return {
          encrypt: function encrypt(b, k, d) {
            return ("string" == typeof k ? c : a).encrypt(e, b, k, d);
          },
          decrypt: function decrypt(b, k, d) {
            return ("string" == typeof k ? c : a).decrypt(e, b, k, d);
          }
        };
      }
    });
  d.StreamCipher = v.extend({
    _doFinalize: function _doFinalize() {
      return this._process(!0);
    },
    blockSize: 1
  });
  var b = p.mode = {},
    x = function x(e, a, b) {
      var c = this._iv;
      c ? this._iv = u : c = this._prevBlock;
      for (var d = 0; d < b; d++) {
        e[a + d] ^= c[d];
      }
    },
    q = (d.BlockCipherMode = l.extend({
      createEncryptor: function createEncryptor(e, a) {
        return this.Encryptor.create(e, a);
      },
      createDecryptor: function createDecryptor(e, a) {
        return this.Decryptor.create(e, a);
      },
      init: function init(e, a) {
        this._cipher = e;
        this._iv = a;
      }
    })).extend();
  q.Encryptor = q.extend({
    processBlock: function processBlock(e, a) {
      var b = this._cipher,
        c = b.blockSize;
      x.call(this, e, a, c);
      b.encryptBlock(e, a);
      this._prevBlock = e.slice(a, a + c);
    }
  });
  q.Decryptor = q.extend({
    processBlock: function processBlock(e, a) {
      var b = this._cipher,
        c = b.blockSize,
        d = e.slice(a, a + c);
      b.decryptBlock(e, a);
      x.call(this, e, a, c);
      this._prevBlock = d;
    }
  });
  b = b.CBC = q;
  q = (p.pad = {}).Pkcs7 = {
    pad: function pad(a, b) {
      for (var c = 4 * b, c = c - a.sigBytes % c, d = c << 24 | c << 16 | c << 8 | c, l = [], n = 0; n < c; n += 4) {
        l.push(d);
      }
      c = s.create(l, c);
      a.concat(c);
    },
    unpad: function unpad(a) {
      a.sigBytes -= a.words[a.sigBytes - 1 >>> 2] & 255;
    }
  };
  d.BlockCipher = v.extend({
    cfg: v.cfg.extend({
      mode: b,
      padding: q
    }),
    reset: function reset() {
      v.reset.call(this);
      var a = this.cfg,
        b = a.iv,
        a = a.mode;
      if (this._xformMode == this._ENC_XFORM_MODE) var c = a.createEncryptor;else c = a.createDecryptor, this._minBufferSize = 1;
      this._mode = c.call(a, this, b && b.words);
    },
    _doProcessBlock: function _doProcessBlock(a, b) {
      this._mode.processBlock(a, b);
    },
    _doFinalize: function _doFinalize() {
      var a = this.cfg.padding;
      if (this._xformMode == this._ENC_XFORM_MODE) {
        a.pad(this._data, this.blockSize);
        var b = this._process(!0);
      } else b = this._process(!0), a.unpad(b);
      return b;
    },
    blockSize: 4
  });
  var n = d.CipherParams = l.extend({
      init: function init(a) {
        this.mixIn(a);
      },
      toString: function toString(a) {
        return (a || this.formatter).stringify(this);
      }
    }),
    b = (p.format = {}).OpenSSL = {
      stringify: function stringify(a) {
        var b = a.ciphertext;
        a = a.salt;
        return (a ? s.create([1398893684, 1701076831]).concat(a).concat(b) : b).toString(r);
      },
      parse: function parse(a) {
        a = r.parse(a);
        var b = a.words;
        if (1398893684 == b[0] && 1701076831 == b[1]) {
          var c = s.create(b.slice(2, 4));
          b.splice(0, 4);
          a.sigBytes -= 16;
        }
        return n.create({
          ciphertext: a,
          salt: c
        });
      }
    },
    a = d.SerializableCipher = l.extend({
      cfg: l.extend({
        format: b
      }),
      encrypt: function encrypt(a, b, c, d) {
        d = this.cfg.extend(d);
        var l = a.createEncryptor(c, d);
        b = l.finalize(b);
        l = l.cfg;
        return n.create({
          ciphertext: b,
          key: c,
          iv: l.iv,
          algorithm: a,
          mode: l.mode,
          padding: l.padding,
          blockSize: a.blockSize,
          formatter: d.format
        });
      },
      decrypt: function decrypt(a, b, c, d) {
        d = this.cfg.extend(d);
        b = this._parse(b, d.format);
        return a.createDecryptor(c, d).finalize(b.ciphertext);
      },
      _parse: function _parse(a, b) {
        return "string" == typeof a ? b.parse(a, this) : a;
      }
    }),
    p = (p.kdf = {}).OpenSSL = {
      execute: function execute(a, b, c, d) {
        d || (d = s.random(8));
        a = w.create({
          keySize: b + c
        }).compute(a, d);
        c = s.create(a.words.slice(b), 4 * c);
        a.sigBytes = 4 * b;
        return n.create({
          key: a,
          iv: c,
          salt: d
        });
      }
    },
    c = d.PasswordBasedCipher = a.extend({
      cfg: a.cfg.extend({
        kdf: p
      }),
      encrypt: function encrypt(b, c, d, l) {
        l = this.cfg.extend(l);
        d = l.kdf.execute(d, b.keySize, b.ivSize);
        l.iv = d.iv;
        b = a.encrypt.call(this, b, c, d.key, l);
        b.mixIn(d);
        return b;
      },
      decrypt: function decrypt(b, c, d, l) {
        l = this.cfg.extend(l);
        c = this._parse(c, l.format);
        d = l.kdf.execute(d, b.keySize, b.ivSize, c.salt);
        l.iv = d.iv;
        return a.decrypt.call(this, b, c, d.key, l);
      }
    });
}();
(function () {
  for (var u = CryptoJS, p = u.lib.BlockCipher, d = u.algo, l = [], s = [], t = [], r = [], w = [], v = [], b = [], x = [], q = [], n = [], a = [], c = 0; 256 > c; c++) {
    a[c] = 128 > c ? c << 1 : c << 1 ^ 283;
  }
  for (var e = 0, j = 0, c = 0; 256 > c; c++) {
    var k = j ^ j << 1 ^ j << 2 ^ j << 3 ^ j << 4,
      k = k >>> 8 ^ k & 255 ^ 99;
    l[e] = k;
    s[k] = e;
    var z = a[e],
      F = a[z],
      G = a[F],
      y = 257 * a[k] ^ 16843008 * k;
    t[e] = y << 24 | y >>> 8;
    r[e] = y << 16 | y >>> 16;
    w[e] = y << 8 | y >>> 24;
    v[e] = y;
    y = 16843009 * G ^ 65537 * F ^ 257 * z ^ 16843008 * e;
    b[k] = y << 24 | y >>> 8;
    x[k] = y << 16 | y >>> 16;
    q[k] = y << 8 | y >>> 24;
    n[k] = y;
    e ? (e = z ^ a[a[a[G ^ z]]], j ^= a[a[j]]) : e = j = 1;
  }
  var H = [0, 1, 2, 4, 8, 16, 32, 64, 128, 27, 54],
    d = d.AES = p.extend({
      _doReset: function _doReset() {
        for (var a = this._key, c = a.words, d = a.sigBytes / 4, a = 4 * ((this._nRounds = d + 6) + 1), e = this._keySchedule = [], j = 0; j < a; j++) {
          if (j < d) e[j] = c[j];else {
            var k = e[j - 1];
            j % d ? 6 < d && 4 == j % d && (k = l[k >>> 24] << 24 | l[k >>> 16 & 255] << 16 | l[k >>> 8 & 255] << 8 | l[k & 255]) : (k = k << 8 | k >>> 24, k = l[k >>> 24] << 24 | l[k >>> 16 & 255] << 16 | l[k >>> 8 & 255] << 8 | l[k & 255], k ^= H[j / d | 0] << 24);
            e[j] = e[j - d] ^ k;
          }
        }
        c = this._invKeySchedule = [];
        for (d = 0; d < a; d++) {
          j = a - d, k = d % 4 ? e[j] : e[j - 4], c[d] = 4 > d || 4 >= j ? k : b[l[k >>> 24]] ^ x[l[k >>> 16 & 255]] ^ q[l[k >>> 8 & 255]] ^ n[l[k & 255]];
        }
      },
      encryptBlock: function encryptBlock(a, b) {
        this._doCryptBlock(a, b, this._keySchedule, t, r, w, v, l);
      },
      decryptBlock: function decryptBlock(a, c) {
        var d = a[c + 1];
        a[c + 1] = a[c + 3];
        a[c + 3] = d;
        this._doCryptBlock(a, c, this._invKeySchedule, b, x, q, n, s);
        d = a[c + 1];
        a[c + 1] = a[c + 3];
        a[c + 3] = d;
      },
      _doCryptBlock: function _doCryptBlock(a, b, c, d, e, j, l, f) {
        for (var m = this._nRounds, g = a[b] ^ c[0], h = a[b + 1] ^ c[1], k = a[b + 2] ^ c[2], n = a[b + 3] ^ c[3], p = 4, r = 1; r < m; r++) {
          var q = d[g >>> 24] ^ e[h >>> 16 & 255] ^ j[k >>> 8 & 255] ^ l[n & 255] ^ c[p++],
            s = d[h >>> 24] ^ e[k >>> 16 & 255] ^ j[n >>> 8 & 255] ^ l[g & 255] ^ c[p++],
            t = d[k >>> 24] ^ e[n >>> 16 & 255] ^ j[g >>> 8 & 255] ^ l[h & 255] ^ c[p++],
            n = d[n >>> 24] ^ e[g >>> 16 & 255] ^ j[h >>> 8 & 255] ^ l[k & 255] ^ c[p++],
            g = q,
            h = s,
            k = t;
        }
        q = (f[g >>> 24] << 24 | f[h >>> 16 & 255] << 16 | f[k >>> 8 & 255] << 8 | f[n & 255]) ^ c[p++];
        s = (f[h >>> 24] << 24 | f[k >>> 16 & 255] << 16 | f[n >>> 8 & 255] << 8 | f[g & 255]) ^ c[p++];
        t = (f[k >>> 24] << 24 | f[n >>> 16 & 255] << 16 | f[g >>> 8 & 255] << 8 | f[h & 255]) ^ c[p++];
        n = (f[n >>> 24] << 24 | f[g >>> 16 & 255] << 16 | f[h >>> 8 & 255] << 8 | f[k & 255]) ^ c[p++];
        a[b] = q;
        a[b + 1] = s;
        a[b + 2] = t;
        a[b + 3] = n;
      },
      keySize: 8
    });
  u.AES = p._createHelper(d);
})();
var _0x1022 = ['parse', 'parame\x20\x22str\x22\x20is\x20not\x20a\x20string', 'Utf8', 'parame\x20\x22iv\x22\x20is\x20not\x20a\x20string', 'string', 'enc', 'AES', 'Base64', 'stringify', 'toString', 'decrypt', 'pad', 'Pkcs7'];
var _0x5722 = function _0x5722(_0x102231, _0x572227) {
  _0x102231 = _0x102231 - 0x0;
  var _0x44ca47 = _0x1022[_0x102231];
  return _0x44ca47;
};
var AES = {
  'encrypt': function encrypt(_0x4976f6, _0x387e2b, _0x5a8811) {
    if (_typeof(_0x4976f6) != _0x5722('0x4')) {
      throw new Error('parame\x20\x22str\x22\x20is\x20not\x20a\x20string');
    }
    if (_typeof(_0x387e2b) != _0x5722('0x4')) {
      throw new Error('parame\x20\x22key\x22\x20is\x20not\x20a\x20string');
    }
    if (typeof _0x5a8811 != 'string') {
      throw new Error(_0x5722('0x3'));
    }
    return CryptoJS[_0x5722('0x6')]['encrypt'](CryptoJS['enc'][_0x5722('0x2')][_0x5722('0x0')](_0x4976f6), CryptoJS['enc'][_0x5722('0x2')][_0x5722('0x0')](_0x387e2b), {
      'iv': CryptoJS[_0x5722('0x5')][_0x5722('0x2')][_0x5722('0x0')](_0x5a8811),
      'mode': CryptoJS['mode']['CBC'],
      'padding': CryptoJS['pad']['Pkcs7']
    })['toString']();
  },
  'decrypt': function decrypt(_0x5bb256, _0x35a462, _0x30d408) {
    if (typeof _0x5bb256 != 'string') {
      throw new Error(_0x5722('0x1'));
    }
    if (typeof _0x35a462 != 'string') {
      throw new Error('parame\x20\x22key\x22\x20is\x20not\x20a\x20string');
    }
    if (typeof _0x30d408 != 'string') {
      throw new Error(_0x5722('0x3'));
    }
    var _0x38f1e3 = CryptoJS[_0x5722('0x5')]['Hex']['parse'](_0x5bb256);
    var _0x5d13c2 = CryptoJS[_0x5722('0x5')][_0x5722('0x7')][_0x5722('0x8')](_0x38f1e3);
    var _0x13ff83 = CryptoJS['AES'][_0x5722('0xa')](_0x5bb256, CryptoJS[_0x5722('0x5')][_0x5722('0x2')][_0x5722('0x0')](_0x35a462), {
      'iv': CryptoJS[_0x5722('0x5')]['Utf8']['parse'](_0x30d408),
      'mode': CryptoJS['mode']['CBC'],
      'padding': CryptoJS[_0x5722('0xb')][_0x5722('0xc')]
    });
    var _0x47b25f = _0x13ff83[_0x5722('0x9')](CryptoJS[_0x5722('0x5')]['Utf8']);
    return _0x47b25f['toString']();
  }
};
module['exports'][_0x5722('0x6')] = AES;

/***/ }),
/* 47 */,
/* 48 */,
/* 49 */,
/* 50 */,
/* 51 */,
/* 52 */,
/* 53 */,
/* 54 */,
/* 55 */,
/* 56 */,
/* 57 */,
/* 58 */,
/* 59 */,
/* 60 */,
/* 61 */
/*!************************************************************************************!*\
  !*** F:/project/qianduan/zhanhuitong_yudengji_git/node_modules/crypto-js/index.js ***!
  \************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;var _typeof = __webpack_require__(/*! @babel/runtime/helpers/typeof */ 13);
;
(function (root, factory, undef) {
  if (( false ? undefined : _typeof(exports)) === "object") {
    // CommonJS
    module.exports = exports = factory(__webpack_require__(/*! ./core */ 62), __webpack_require__(/*! ./x64-core */ 64), __webpack_require__(/*! ./lib-typedarrays */ 65), __webpack_require__(/*! ./enc-utf16 */ 66), __webpack_require__(/*! ./enc-base64 */ 67), __webpack_require__(/*! ./enc-base64url */ 68), __webpack_require__(/*! ./md5 */ 69), __webpack_require__(/*! ./sha1 */ 70), __webpack_require__(/*! ./sha256 */ 71), __webpack_require__(/*! ./sha224 */ 72), __webpack_require__(/*! ./sha512 */ 73), __webpack_require__(/*! ./sha384 */ 74), __webpack_require__(/*! ./sha3 */ 75), __webpack_require__(/*! ./ripemd160 */ 76), __webpack_require__(/*! ./hmac */ 77), __webpack_require__(/*! ./pbkdf2 */ 78), __webpack_require__(/*! ./evpkdf */ 79), __webpack_require__(/*! ./cipher-core */ 80), __webpack_require__(/*! ./mode-cfb */ 81), __webpack_require__(/*! ./mode-ctr */ 82), __webpack_require__(/*! ./mode-ctr-gladman */ 83), __webpack_require__(/*! ./mode-ofb */ 84), __webpack_require__(/*! ./mode-ecb */ 85), __webpack_require__(/*! ./pad-ansix923 */ 86), __webpack_require__(/*! ./pad-iso10126 */ 87), __webpack_require__(/*! ./pad-iso97971 */ 88), __webpack_require__(/*! ./pad-zeropadding */ 89), __webpack_require__(/*! ./pad-nopadding */ 90), __webpack_require__(/*! ./format-hex */ 91), __webpack_require__(/*! ./aes */ 92), __webpack_require__(/*! ./tripledes */ 93), __webpack_require__(/*! ./rc4 */ 94), __webpack_require__(/*! ./rabbit */ 95), __webpack_require__(/*! ./rabbit-legacy */ 96), __webpack_require__(/*! ./blowfish */ 97));
  } else if (true) {
    // AMD
    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! ./core */ 62), __webpack_require__(/*! ./x64-core */ 64), __webpack_require__(/*! ./lib-typedarrays */ 65), __webpack_require__(/*! ./enc-utf16 */ 66), __webpack_require__(/*! ./enc-base64 */ 67), __webpack_require__(/*! ./enc-base64url */ 68), __webpack_require__(/*! ./md5 */ 69), __webpack_require__(/*! ./sha1 */ 70), __webpack_require__(/*! ./sha256 */ 71), __webpack_require__(/*! ./sha224 */ 72), __webpack_require__(/*! ./sha512 */ 73), __webpack_require__(/*! ./sha384 */ 74), __webpack_require__(/*! ./sha3 */ 75), __webpack_require__(/*! ./ripemd160 */ 76), __webpack_require__(/*! ./hmac */ 77), __webpack_require__(/*! ./pbkdf2 */ 78), __webpack_require__(/*! ./evpkdf */ 79), __webpack_require__(/*! ./cipher-core */ 80), __webpack_require__(/*! ./mode-cfb */ 81), __webpack_require__(/*! ./mode-ctr */ 82), __webpack_require__(/*! ./mode-ctr-gladman */ 83), __webpack_require__(/*! ./mode-ofb */ 84), __webpack_require__(/*! ./mode-ecb */ 85), __webpack_require__(/*! ./pad-ansix923 */ 86), __webpack_require__(/*! ./pad-iso10126 */ 87), __webpack_require__(/*! ./pad-iso97971 */ 88), __webpack_require__(/*! ./pad-zeropadding */ 89), __webpack_require__(/*! ./pad-nopadding */ 90), __webpack_require__(/*! ./format-hex */ 91), __webpack_require__(/*! ./aes */ 92), __webpack_require__(/*! ./tripledes */ 93), __webpack_require__(/*! ./rc4 */ 94), __webpack_require__(/*! ./rabbit */ 95), __webpack_require__(/*! ./rabbit-legacy */ 96), __webpack_require__(/*! ./blowfish */ 97)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  } else {}
})(this, function (CryptoJS) {
  return CryptoJS;
});

/***/ }),
/* 62 */
/*!***********************************************************************************!*\
  !*** F:/project/qianduan/zhanhuitong_yudengji_git/node_modules/crypto-js/core.js ***!
  \***********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global) {var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;var _typeof = __webpack_require__(/*! @babel/runtime/helpers/typeof */ 13);
;
(function (root, factory) {
  if (( false ? undefined : _typeof(exports)) === "object") {
    // CommonJS
    module.exports = exports = factory();
  } else if (true) {
    // AMD
    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  } else {}
})(this, function () {
  /*globals window, global, require*/

  /**
   * CryptoJS core components.
   */
  var CryptoJS = CryptoJS || function (Math, undefined) {
    var crypto;

    // Native crypto from window (Browser)
    if (typeof window !== 'undefined' && window.crypto) {
      crypto = window.crypto;
    }

    // Native crypto in web worker (Browser)
    if (typeof self !== 'undefined' && self.crypto) {
      crypto = self.crypto;
    }

    // Native crypto from worker
    if (typeof globalThis !== 'undefined' && globalThis.crypto) {
      crypto = globalThis.crypto;
    }

    // Native (experimental IE 11) crypto from window (Browser)
    if (!crypto && typeof window !== 'undefined' && window.msCrypto) {
      crypto = window.msCrypto;
    }

    // Native crypto from global (NodeJS)
    if (!crypto && typeof global !== 'undefined' && global.crypto) {
      crypto = global.crypto;
    }

    // Native crypto import via require (NodeJS)
    if (!crypto && "function" === 'function') {
      try {
        crypto = __webpack_require__(/*! crypto */ 63);
      } catch (err) {}
    }

    /*
     * Cryptographically secure pseudorandom number generator
     *
     * As Math.random() is cryptographically not safe to use
     */
    var cryptoSecureRandomInt = function cryptoSecureRandomInt() {
      if (crypto) {
        // Use getRandomValues method (Browser)
        if (typeof crypto.getRandomValues === 'function') {
          try {
            return crypto.getRandomValues(new Uint32Array(1))[0];
          } catch (err) {}
        }

        // Use randomBytes method (NodeJS)
        if (typeof crypto.randomBytes === 'function') {
          try {
            return crypto.randomBytes(4).readInt32LE();
          } catch (err) {}
        }
      }
      throw new Error('Native crypto module could not be used to get secure random number.');
    };

    /*
     * Local polyfill of Object.create
      */
    var create = Object.create || function () {
      function F() {}
      return function (obj) {
        var subtype;
        F.prototype = obj;
        subtype = new F();
        F.prototype = null;
        return subtype;
      };
    }();

    /**
     * CryptoJS namespace.
     */
    var C = {};

    /**
     * Library namespace.
     */
    var C_lib = C.lib = {};

    /**
     * Base object for prototypal inheritance.
     */
    var Base = C_lib.Base = function () {
      return {
        /**
         * Creates a new object that inherits from this object.
         *
         * @param {Object} overrides Properties to copy into the new object.
         *
         * @return {Object} The new object.
         *
         * @static
         *
         * @example
         *
         *     var MyType = CryptoJS.lib.Base.extend({
         *         field: 'value',
         *
         *         method: function () {
         *         }
         *     });
         */
        extend: function extend(overrides) {
          // Spawn
          var subtype = create(this);

          // Augment
          if (overrides) {
            subtype.mixIn(overrides);
          }

          // Create default initializer
          if (!subtype.hasOwnProperty('init') || this.init === subtype.init) {
            subtype.init = function () {
              subtype.$super.init.apply(this, arguments);
            };
          }

          // Initializer's prototype is the subtype object
          subtype.init.prototype = subtype;

          // Reference supertype
          subtype.$super = this;
          return subtype;
        },
        /**
         * Extends this object and runs the init method.
         * Arguments to create() will be passed to init().
         *
         * @return {Object} The new object.
         *
         * @static
         *
         * @example
         *
         *     var instance = MyType.create();
         */
        create: function create() {
          var instance = this.extend();
          instance.init.apply(instance, arguments);
          return instance;
        },
        /**
         * Initializes a newly created object.
         * Override this method to add some logic when your objects are created.
         *
         * @example
         *
         *     var MyType = CryptoJS.lib.Base.extend({
         *         init: function () {
         *             // ...
         *         }
         *     });
         */
        init: function init() {},
        /**
         * Copies properties into this object.
         *
         * @param {Object} properties The properties to mix in.
         *
         * @example
         *
         *     MyType.mixIn({
         *         field: 'value'
         *     });
         */
        mixIn: function mixIn(properties) {
          for (var propertyName in properties) {
            if (properties.hasOwnProperty(propertyName)) {
              this[propertyName] = properties[propertyName];
            }
          }

          // IE won't copy toString using the loop above
          if (properties.hasOwnProperty('toString')) {
            this.toString = properties.toString;
          }
        },
        /**
         * Creates a copy of this object.
         *
         * @return {Object} The clone.
         *
         * @example
         *
         *     var clone = instance.clone();
         */
        clone: function clone() {
          return this.init.prototype.extend(this);
        }
      };
    }();

    /**
     * An array of 32-bit words.
     *
     * @property {Array} words The array of 32-bit words.
     * @property {number} sigBytes The number of significant bytes in this word array.
     */
    var WordArray = C_lib.WordArray = Base.extend({
      /**
       * Initializes a newly created word array.
       *
       * @param {Array} words (Optional) An array of 32-bit words.
       * @param {number} sigBytes (Optional) The number of significant bytes in the words.
       *
       * @example
       *
       *     var wordArray = CryptoJS.lib.WordArray.create();
       *     var wordArray = CryptoJS.lib.WordArray.create([0x00010203, 0x04050607]);
       *     var wordArray = CryptoJS.lib.WordArray.create([0x00010203, 0x04050607], 6);
       */
      init: function init(words, sigBytes) {
        words = this.words = words || [];
        if (sigBytes != undefined) {
          this.sigBytes = sigBytes;
        } else {
          this.sigBytes = words.length * 4;
        }
      },
      /**
       * Converts this word array to a string.
       *
       * @param {Encoder} encoder (Optional) The encoding strategy to use. Default: CryptoJS.enc.Hex
       *
       * @return {string} The stringified word array.
       *
       * @example
       *
       *     var string = wordArray + '';
       *     var string = wordArray.toString();
       *     var string = wordArray.toString(CryptoJS.enc.Utf8);
       */
      toString: function toString(encoder) {
        return (encoder || Hex).stringify(this);
      },
      /**
       * Concatenates a word array to this word array.
       *
       * @param {WordArray} wordArray The word array to append.
       *
       * @return {WordArray} This word array.
       *
       * @example
       *
       *     wordArray1.concat(wordArray2);
       */
      concat: function concat(wordArray) {
        // Shortcuts
        var thisWords = this.words;
        var thatWords = wordArray.words;
        var thisSigBytes = this.sigBytes;
        var thatSigBytes = wordArray.sigBytes;

        // Clamp excess bits
        this.clamp();

        // Concat
        if (thisSigBytes % 4) {
          // Copy one byte at a time
          for (var i = 0; i < thatSigBytes; i++) {
            var thatByte = thatWords[i >>> 2] >>> 24 - i % 4 * 8 & 0xff;
            thisWords[thisSigBytes + i >>> 2] |= thatByte << 24 - (thisSigBytes + i) % 4 * 8;
          }
        } else {
          // Copy one word at a time
          for (var j = 0; j < thatSigBytes; j += 4) {
            thisWords[thisSigBytes + j >>> 2] = thatWords[j >>> 2];
          }
        }
        this.sigBytes += thatSigBytes;

        // Chainable
        return this;
      },
      /**
       * Removes insignificant bits.
       *
       * @example
       *
       *     wordArray.clamp();
       */
      clamp: function clamp() {
        // Shortcuts
        var words = this.words;
        var sigBytes = this.sigBytes;

        // Clamp
        words[sigBytes >>> 2] &= 0xffffffff << 32 - sigBytes % 4 * 8;
        words.length = Math.ceil(sigBytes / 4);
      },
      /**
       * Creates a copy of this word array.
       *
       * @return {WordArray} The clone.
       *
       * @example
       *
       *     var clone = wordArray.clone();
       */
      clone: function clone() {
        var clone = Base.clone.call(this);
        clone.words = this.words.slice(0);
        return clone;
      },
      /**
       * Creates a word array filled with random bytes.
       *
       * @param {number} nBytes The number of random bytes to generate.
       *
       * @return {WordArray} The random word array.
       *
       * @static
       *
       * @example
       *
       *     var wordArray = CryptoJS.lib.WordArray.random(16);
       */
      random: function random(nBytes) {
        var words = [];
        for (var i = 0; i < nBytes; i += 4) {
          words.push(cryptoSecureRandomInt());
        }
        return new WordArray.init(words, nBytes);
      }
    });

    /**
     * Encoder namespace.
     */
    var C_enc = C.enc = {};

    /**
     * Hex encoding strategy.
     */
    var Hex = C_enc.Hex = {
      /**
       * Converts a word array to a hex string.
       *
       * @param {WordArray} wordArray The word array.
       *
       * @return {string} The hex string.
       *
       * @static
       *
       * @example
       *
       *     var hexString = CryptoJS.enc.Hex.stringify(wordArray);
       */
      stringify: function stringify(wordArray) {
        // Shortcuts
        var words = wordArray.words;
        var sigBytes = wordArray.sigBytes;

        // Convert
        var hexChars = [];
        for (var i = 0; i < sigBytes; i++) {
          var bite = words[i >>> 2] >>> 24 - i % 4 * 8 & 0xff;
          hexChars.push((bite >>> 4).toString(16));
          hexChars.push((bite & 0x0f).toString(16));
        }
        return hexChars.join('');
      },
      /**
       * Converts a hex string to a word array.
       *
       * @param {string} hexStr The hex string.
       *
       * @return {WordArray} The word array.
       *
       * @static
       *
       * @example
       *
       *     var wordArray = CryptoJS.enc.Hex.parse(hexString);
       */
      parse: function parse(hexStr) {
        // Shortcut
        var hexStrLength = hexStr.length;

        // Convert
        var words = [];
        for (var i = 0; i < hexStrLength; i += 2) {
          words[i >>> 3] |= parseInt(hexStr.substr(i, 2), 16) << 24 - i % 8 * 4;
        }
        return new WordArray.init(words, hexStrLength / 2);
      }
    };

    /**
     * Latin1 encoding strategy.
     */
    var Latin1 = C_enc.Latin1 = {
      /**
       * Converts a word array to a Latin1 string.
       *
       * @param {WordArray} wordArray The word array.
       *
       * @return {string} The Latin1 string.
       *
       * @static
       *
       * @example
       *
       *     var latin1String = CryptoJS.enc.Latin1.stringify(wordArray);
       */
      stringify: function stringify(wordArray) {
        // Shortcuts
        var words = wordArray.words;
        var sigBytes = wordArray.sigBytes;

        // Convert
        var latin1Chars = [];
        for (var i = 0; i < sigBytes; i++) {
          var bite = words[i >>> 2] >>> 24 - i % 4 * 8 & 0xff;
          latin1Chars.push(String.fromCharCode(bite));
        }
        return latin1Chars.join('');
      },
      /**
       * Converts a Latin1 string to a word array.
       *
       * @param {string} latin1Str The Latin1 string.
       *
       * @return {WordArray} The word array.
       *
       * @static
       *
       * @example
       *
       *     var wordArray = CryptoJS.enc.Latin1.parse(latin1String);
       */
      parse: function parse(latin1Str) {
        // Shortcut
        var latin1StrLength = latin1Str.length;

        // Convert
        var words = [];
        for (var i = 0; i < latin1StrLength; i++) {
          words[i >>> 2] |= (latin1Str.charCodeAt(i) & 0xff) << 24 - i % 4 * 8;
        }
        return new WordArray.init(words, latin1StrLength);
      }
    };

    /**
     * UTF-8 encoding strategy.
     */
    var Utf8 = C_enc.Utf8 = {
      /**
       * Converts a word array to a UTF-8 string.
       *
       * @param {WordArray} wordArray The word array.
       *
       * @return {string} The UTF-8 string.
       *
       * @static
       *
       * @example
       *
       *     var utf8String = CryptoJS.enc.Utf8.stringify(wordArray);
       */
      stringify: function stringify(wordArray) {
        try {
          return decodeURIComponent(escape(Latin1.stringify(wordArray)));
        } catch (e) {
          throw new Error('Malformed UTF-8 data');
        }
      },
      /**
       * Converts a UTF-8 string to a word array.
       *
       * @param {string} utf8Str The UTF-8 string.
       *
       * @return {WordArray} The word array.
       *
       * @static
       *
       * @example
       *
       *     var wordArray = CryptoJS.enc.Utf8.parse(utf8String);
       */
      parse: function parse(utf8Str) {
        return Latin1.parse(unescape(encodeURIComponent(utf8Str)));
      }
    };

    /**
     * Abstract buffered block algorithm template.
     *
     * The property blockSize must be implemented in a concrete subtype.
     *
     * @property {number} _minBufferSize The number of blocks that should be kept unprocessed in the buffer. Default: 0
     */
    var BufferedBlockAlgorithm = C_lib.BufferedBlockAlgorithm = Base.extend({
      /**
       * Resets this block algorithm's data buffer to its initial state.
       *
       * @example
       *
       *     bufferedBlockAlgorithm.reset();
       */
      reset: function reset() {
        // Initial values
        this._data = new WordArray.init();
        this._nDataBytes = 0;
      },
      /**
       * Adds new data to this block algorithm's buffer.
       *
       * @param {WordArray|string} data The data to append. Strings are converted to a WordArray using UTF-8.
       *
       * @example
       *
       *     bufferedBlockAlgorithm._append('data');
       *     bufferedBlockAlgorithm._append(wordArray);
       */
      _append: function _append(data) {
        // Convert string to WordArray, else assume WordArray already
        if (typeof data == 'string') {
          data = Utf8.parse(data);
        }

        // Append
        this._data.concat(data);
        this._nDataBytes += data.sigBytes;
      },
      /**
       * Processes available data blocks.
       *
       * This method invokes _doProcessBlock(offset), which must be implemented by a concrete subtype.
       *
       * @param {boolean} doFlush Whether all blocks and partial blocks should be processed.
       *
       * @return {WordArray} The processed data.
       *
       * @example
       *
       *     var processedData = bufferedBlockAlgorithm._process();
       *     var processedData = bufferedBlockAlgorithm._process(!!'flush');
       */
      _process: function _process(doFlush) {
        var processedWords;

        // Shortcuts
        var data = this._data;
        var dataWords = data.words;
        var dataSigBytes = data.sigBytes;
        var blockSize = this.blockSize;
        var blockSizeBytes = blockSize * 4;

        // Count blocks ready
        var nBlocksReady = dataSigBytes / blockSizeBytes;
        if (doFlush) {
          // Round up to include partial blocks
          nBlocksReady = Math.ceil(nBlocksReady);
        } else {
          // Round down to include only full blocks,
          // less the number of blocks that must remain in the buffer
          nBlocksReady = Math.max((nBlocksReady | 0) - this._minBufferSize, 0);
        }

        // Count words ready
        var nWordsReady = nBlocksReady * blockSize;

        // Count bytes ready
        var nBytesReady = Math.min(nWordsReady * 4, dataSigBytes);

        // Process blocks
        if (nWordsReady) {
          for (var offset = 0; offset < nWordsReady; offset += blockSize) {
            // Perform concrete-algorithm logic
            this._doProcessBlock(dataWords, offset);
          }

          // Remove processed words
          processedWords = dataWords.splice(0, nWordsReady);
          data.sigBytes -= nBytesReady;
        }

        // Return processed words
        return new WordArray.init(processedWords, nBytesReady);
      },
      /**
       * Creates a copy of this object.
       *
       * @return {Object} The clone.
       *
       * @example
       *
       *     var clone = bufferedBlockAlgorithm.clone();
       */
      clone: function clone() {
        var clone = Base.clone.call(this);
        clone._data = this._data.clone();
        return clone;
      },
      _minBufferSize: 0
    });

    /**
     * Abstract hasher template.
     *
     * @property {number} blockSize The number of 32-bit words this hasher operates on. Default: 16 (512 bits)
     */
    var Hasher = C_lib.Hasher = BufferedBlockAlgorithm.extend({
      /**
       * Configuration options.
       */
      cfg: Base.extend(),
      /**
       * Initializes a newly created hasher.
       *
       * @param {Object} cfg (Optional) The configuration options to use for this hash computation.
       *
       * @example
       *
       *     var hasher = CryptoJS.algo.SHA256.create();
       */
      init: function init(cfg) {
        // Apply config defaults
        this.cfg = this.cfg.extend(cfg);

        // Set initial values
        this.reset();
      },
      /**
       * Resets this hasher to its initial state.
       *
       * @example
       *
       *     hasher.reset();
       */
      reset: function reset() {
        // Reset data buffer
        BufferedBlockAlgorithm.reset.call(this);

        // Perform concrete-hasher logic
        this._doReset();
      },
      /**
       * Updates this hasher with a message.
       *
       * @param {WordArray|string} messageUpdate The message to append.
       *
       * @return {Hasher} This hasher.
       *
       * @example
       *
       *     hasher.update('message');
       *     hasher.update(wordArray);
       */
      update: function update(messageUpdate) {
        // Append
        this._append(messageUpdate);

        // Update the hash
        this._process();

        // Chainable
        return this;
      },
      /**
       * Finalizes the hash computation.
       * Note that the finalize operation is effectively a destructive, read-once operation.
       *
       * @param {WordArray|string} messageUpdate (Optional) A final message update.
       *
       * @return {WordArray} The hash.
       *
       * @example
       *
       *     var hash = hasher.finalize();
       *     var hash = hasher.finalize('message');
       *     var hash = hasher.finalize(wordArray);
       */
      finalize: function finalize(messageUpdate) {
        // Final message update
        if (messageUpdate) {
          this._append(messageUpdate);
        }

        // Perform concrete-hasher logic
        var hash = this._doFinalize();
        return hash;
      },
      blockSize: 512 / 32,
      /**
       * Creates a shortcut function to a hasher's object interface.
       *
       * @param {Hasher} hasher The hasher to create a helper for.
       *
       * @return {Function} The shortcut function.
       *
       * @static
       *
       * @example
       *
       *     var SHA256 = CryptoJS.lib.Hasher._createHelper(CryptoJS.algo.SHA256);
       */
      _createHelper: function _createHelper(hasher) {
        return function (message, cfg) {
          return new hasher.init(cfg).finalize(message);
        };
      },
      /**
       * Creates a shortcut function to the HMAC's object interface.
       *
       * @param {Hasher} hasher The hasher to use in this HMAC helper.
       *
       * @return {Function} The shortcut function.
       *
       * @static
       *
       * @example
       *
       *     var HmacSHA256 = CryptoJS.lib.Hasher._createHmacHelper(CryptoJS.algo.SHA256);
       */
      _createHmacHelper: function _createHmacHelper(hasher) {
        return function (message, key) {
          return new C_algo.HMAC.init(hasher, key).finalize(message);
        };
      }
    });

    /**
     * Algorithm namespace.
     */
    var C_algo = C.algo = {};
    return C;
  }(Math);
  return CryptoJS;
});
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../../idea/HBuilderX/plugins/uniapp-cli/node_modules/webpack/buildin/global.js */ 3)))

/***/ }),
/* 63 */
/*!************************!*\
  !*** crypto (ignored) ***!
  \************************/
/*! no static exports found */
/***/ (function(module, exports) {

/* (ignored) */

/***/ }),
/* 64 */
/*!***************************************************************************************!*\
  !*** F:/project/qianduan/zhanhuitong_yudengji_git/node_modules/crypto-js/x64-core.js ***!
  \***************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;var _typeof = __webpack_require__(/*! @babel/runtime/helpers/typeof */ 13);
;
(function (root, factory) {
  if (( false ? undefined : _typeof(exports)) === "object") {
    // CommonJS
    module.exports = exports = factory(__webpack_require__(/*! ./core */ 62));
  } else if (true) {
    // AMD
    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! ./core */ 62)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  } else {}
})(this, function (CryptoJS) {
  (function (undefined) {
    // Shortcuts
    var C = CryptoJS;
    var C_lib = C.lib;
    var Base = C_lib.Base;
    var X32WordArray = C_lib.WordArray;

    /**
     * x64 namespace.
     */
    var C_x64 = C.x64 = {};

    /**
     * A 64-bit word.
     */
    var X64Word = C_x64.Word = Base.extend({
      /**
       * Initializes a newly created 64-bit word.
       *
       * @param {number} high The high 32 bits.
       * @param {number} low The low 32 bits.
       *
       * @example
       *
       *     var x64Word = CryptoJS.x64.Word.create(0x00010203, 0x04050607);
       */
      init: function init(high, low) {
        this.high = high;
        this.low = low;
      }

      /**
       * Bitwise NOTs this word.
       *
       * @return {X64Word} A new x64-Word object after negating.
       *
       * @example
       *
       *     var negated = x64Word.not();
       */
      // not: function () {
      // var high = ~this.high;
      // var low = ~this.low;

      // return X64Word.create(high, low);
      // },

      /**
       * Bitwise ANDs this word with the passed word.
       *
       * @param {X64Word} word The x64-Word to AND with this word.
       *
       * @return {X64Word} A new x64-Word object after ANDing.
       *
       * @example
       *
       *     var anded = x64Word.and(anotherX64Word);
       */
      // and: function (word) {
      // var high = this.high & word.high;
      // var low = this.low & word.low;

      // return X64Word.create(high, low);
      // },

      /**
       * Bitwise ORs this word with the passed word.
       *
       * @param {X64Word} word The x64-Word to OR with this word.
       *
       * @return {X64Word} A new x64-Word object after ORing.
       *
       * @example
       *
       *     var ored = x64Word.or(anotherX64Word);
       */
      // or: function (word) {
      // var high = this.high | word.high;
      // var low = this.low | word.low;

      // return X64Word.create(high, low);
      // },

      /**
       * Bitwise XORs this word with the passed word.
       *
       * @param {X64Word} word The x64-Word to XOR with this word.
       *
       * @return {X64Word} A new x64-Word object after XORing.
       *
       * @example
       *
       *     var xored = x64Word.xor(anotherX64Word);
       */
      // xor: function (word) {
      // var high = this.high ^ word.high;
      // var low = this.low ^ word.low;

      // return X64Word.create(high, low);
      // },

      /**
       * Shifts this word n bits to the left.
       *
       * @param {number} n The number of bits to shift.
       *
       * @return {X64Word} A new x64-Word object after shifting.
       *
       * @example
       *
       *     var shifted = x64Word.shiftL(25);
       */
      // shiftL: function (n) {
      // if (n < 32) {
      // var high = (this.high << n) | (this.low >>> (32 - n));
      // var low = this.low << n;
      // } else {
      // var high = this.low << (n - 32);
      // var low = 0;
      // }

      // return X64Word.create(high, low);
      // },

      /**
       * Shifts this word n bits to the right.
       *
       * @param {number} n The number of bits to shift.
       *
       * @return {X64Word} A new x64-Word object after shifting.
       *
       * @example
       *
       *     var shifted = x64Word.shiftR(7);
       */
      // shiftR: function (n) {
      // if (n < 32) {
      // var low = (this.low >>> n) | (this.high << (32 - n));
      // var high = this.high >>> n;
      // } else {
      // var low = this.high >>> (n - 32);
      // var high = 0;
      // }

      // return X64Word.create(high, low);
      // },

      /**
       * Rotates this word n bits to the left.
       *
       * @param {number} n The number of bits to rotate.
       *
       * @return {X64Word} A new x64-Word object after rotating.
       *
       * @example
       *
       *     var rotated = x64Word.rotL(25);
       */
      // rotL: function (n) {
      // return this.shiftL(n).or(this.shiftR(64 - n));
      // },

      /**
       * Rotates this word n bits to the right.
       *
       * @param {number} n The number of bits to rotate.
       *
       * @return {X64Word} A new x64-Word object after rotating.
       *
       * @example
       *
       *     var rotated = x64Word.rotR(7);
       */
      // rotR: function (n) {
      // return this.shiftR(n).or(this.shiftL(64 - n));
      // },

      /**
       * Adds this word with the passed word.
       *
       * @param {X64Word} word The x64-Word to add with this word.
       *
       * @return {X64Word} A new x64-Word object after adding.
       *
       * @example
       *
       *     var added = x64Word.add(anotherX64Word);
       */
      // add: function (word) {
      // var low = (this.low + word.low) | 0;
      // var carry = (low >>> 0) < (this.low >>> 0) ? 1 : 0;
      // var high = (this.high + word.high + carry) | 0;

      // return X64Word.create(high, low);
      // }
    });

    /**
     * An array of 64-bit words.
     *
     * @property {Array} words The array of CryptoJS.x64.Word objects.
     * @property {number} sigBytes The number of significant bytes in this word array.
     */
    var X64WordArray = C_x64.WordArray = Base.extend({
      /**
       * Initializes a newly created word array.
       *
       * @param {Array} words (Optional) An array of CryptoJS.x64.Word objects.
       * @param {number} sigBytes (Optional) The number of significant bytes in the words.
       *
       * @example
       *
       *     var wordArray = CryptoJS.x64.WordArray.create();
       *
       *     var wordArray = CryptoJS.x64.WordArray.create([
       *         CryptoJS.x64.Word.create(0x00010203, 0x04050607),
       *         CryptoJS.x64.Word.create(0x18191a1b, 0x1c1d1e1f)
       *     ]);
       *
       *     var wordArray = CryptoJS.x64.WordArray.create([
       *         CryptoJS.x64.Word.create(0x00010203, 0x04050607),
       *         CryptoJS.x64.Word.create(0x18191a1b, 0x1c1d1e1f)
       *     ], 10);
       */
      init: function init(words, sigBytes) {
        words = this.words = words || [];
        if (sigBytes != undefined) {
          this.sigBytes = sigBytes;
        } else {
          this.sigBytes = words.length * 8;
        }
      },
      /**
       * Converts this 64-bit word array to a 32-bit word array.
       *
       * @return {CryptoJS.lib.WordArray} This word array's data as a 32-bit word array.
       *
       * @example
       *
       *     var x32WordArray = x64WordArray.toX32();
       */
      toX32: function toX32() {
        // Shortcuts
        var x64Words = this.words;
        var x64WordsLength = x64Words.length;

        // Convert
        var x32Words = [];
        for (var i = 0; i < x64WordsLength; i++) {
          var x64Word = x64Words[i];
          x32Words.push(x64Word.high);
          x32Words.push(x64Word.low);
        }
        return X32WordArray.create(x32Words, this.sigBytes);
      },
      /**
       * Creates a copy of this word array.
       *
       * @return {X64WordArray} The clone.
       *
       * @example
       *
       *     var clone = x64WordArray.clone();
       */
      clone: function clone() {
        var clone = Base.clone.call(this);

        // Clone "words" array
        var words = clone.words = this.words.slice(0);

        // Clone each X64Word object
        var wordsLength = words.length;
        for (var i = 0; i < wordsLength; i++) {
          words[i] = words[i].clone();
        }
        return clone;
      }
    });
  })();
  return CryptoJS;
});

/***/ }),
/* 65 */
/*!**********************************************************************************************!*\
  !*** F:/project/qianduan/zhanhuitong_yudengji_git/node_modules/crypto-js/lib-typedarrays.js ***!
  \**********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;var _typeof = __webpack_require__(/*! @babel/runtime/helpers/typeof */ 13);
;
(function (root, factory) {
  if (( false ? undefined : _typeof(exports)) === "object") {
    // CommonJS
    module.exports = exports = factory(__webpack_require__(/*! ./core */ 62));
  } else if (true) {
    // AMD
    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! ./core */ 62)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  } else {}
})(this, function (CryptoJS) {
  (function () {
    // Check if typed arrays are supported
    if (typeof ArrayBuffer != 'function') {
      return;
    }

    // Shortcuts
    var C = CryptoJS;
    var C_lib = C.lib;
    var WordArray = C_lib.WordArray;

    // Reference original init
    var superInit = WordArray.init;

    // Augment WordArray.init to handle typed arrays
    var subInit = WordArray.init = function (typedArray) {
      // Convert buffers to uint8
      if (typedArray instanceof ArrayBuffer) {
        typedArray = new Uint8Array(typedArray);
      }

      // Convert other array views to uint8
      if (typedArray instanceof Int8Array || typeof Uint8ClampedArray !== "undefined" && typedArray instanceof Uint8ClampedArray || typedArray instanceof Int16Array || typedArray instanceof Uint16Array || typedArray instanceof Int32Array || typedArray instanceof Uint32Array || typedArray instanceof Float32Array || typedArray instanceof Float64Array) {
        typedArray = new Uint8Array(typedArray.buffer, typedArray.byteOffset, typedArray.byteLength);
      }

      // Handle Uint8Array
      if (typedArray instanceof Uint8Array) {
        // Shortcut
        var typedArrayByteLength = typedArray.byteLength;

        // Extract bytes
        var words = [];
        for (var i = 0; i < typedArrayByteLength; i++) {
          words[i >>> 2] |= typedArray[i] << 24 - i % 4 * 8;
        }

        // Initialize this word array
        superInit.call(this, words, typedArrayByteLength);
      } else {
        // Else call normal init
        superInit.apply(this, arguments);
      }
    };
    subInit.prototype = WordArray;
  })();
  return CryptoJS.lib.WordArray;
});

/***/ }),
/* 66 */
/*!****************************************************************************************!*\
  !*** F:/project/qianduan/zhanhuitong_yudengji_git/node_modules/crypto-js/enc-utf16.js ***!
  \****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;var _typeof = __webpack_require__(/*! @babel/runtime/helpers/typeof */ 13);
;
(function (root, factory) {
  if (( false ? undefined : _typeof(exports)) === "object") {
    // CommonJS
    module.exports = exports = factory(__webpack_require__(/*! ./core */ 62));
  } else if (true) {
    // AMD
    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! ./core */ 62)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  } else {}
})(this, function (CryptoJS) {
  (function () {
    // Shortcuts
    var C = CryptoJS;
    var C_lib = C.lib;
    var WordArray = C_lib.WordArray;
    var C_enc = C.enc;

    /**
     * UTF-16 BE encoding strategy.
     */
    var Utf16BE = C_enc.Utf16 = C_enc.Utf16BE = {
      /**
       * Converts a word array to a UTF-16 BE string.
       *
       * @param {WordArray} wordArray The word array.
       *
       * @return {string} The UTF-16 BE string.
       *
       * @static
       *
       * @example
       *
       *     var utf16String = CryptoJS.enc.Utf16.stringify(wordArray);
       */
      stringify: function stringify(wordArray) {
        // Shortcuts
        var words = wordArray.words;
        var sigBytes = wordArray.sigBytes;

        // Convert
        var utf16Chars = [];
        for (var i = 0; i < sigBytes; i += 2) {
          var codePoint = words[i >>> 2] >>> 16 - i % 4 * 8 & 0xffff;
          utf16Chars.push(String.fromCharCode(codePoint));
        }
        return utf16Chars.join('');
      },
      /**
       * Converts a UTF-16 BE string to a word array.
       *
       * @param {string} utf16Str The UTF-16 BE string.
       *
       * @return {WordArray} The word array.
       *
       * @static
       *
       * @example
       *
       *     var wordArray = CryptoJS.enc.Utf16.parse(utf16String);
       */
      parse: function parse(utf16Str) {
        // Shortcut
        var utf16StrLength = utf16Str.length;

        // Convert
        var words = [];
        for (var i = 0; i < utf16StrLength; i++) {
          words[i >>> 1] |= utf16Str.charCodeAt(i) << 16 - i % 2 * 16;
        }
        return WordArray.create(words, utf16StrLength * 2);
      }
    };

    /**
     * UTF-16 LE encoding strategy.
     */
    C_enc.Utf16LE = {
      /**
       * Converts a word array to a UTF-16 LE string.
       *
       * @param {WordArray} wordArray The word array.
       *
       * @return {string} The UTF-16 LE string.
       *
       * @static
       *
       * @example
       *
       *     var utf16Str = CryptoJS.enc.Utf16LE.stringify(wordArray);
       */
      stringify: function stringify(wordArray) {
        // Shortcuts
        var words = wordArray.words;
        var sigBytes = wordArray.sigBytes;

        // Convert
        var utf16Chars = [];
        for (var i = 0; i < sigBytes; i += 2) {
          var codePoint = swapEndian(words[i >>> 2] >>> 16 - i % 4 * 8 & 0xffff);
          utf16Chars.push(String.fromCharCode(codePoint));
        }
        return utf16Chars.join('');
      },
      /**
       * Converts a UTF-16 LE string to a word array.
       *
       * @param {string} utf16Str The UTF-16 LE string.
       *
       * @return {WordArray} The word array.
       *
       * @static
       *
       * @example
       *
       *     var wordArray = CryptoJS.enc.Utf16LE.parse(utf16Str);
       */
      parse: function parse(utf16Str) {
        // Shortcut
        var utf16StrLength = utf16Str.length;

        // Convert
        var words = [];
        for (var i = 0; i < utf16StrLength; i++) {
          words[i >>> 1] |= swapEndian(utf16Str.charCodeAt(i) << 16 - i % 2 * 16);
        }
        return WordArray.create(words, utf16StrLength * 2);
      }
    };
    function swapEndian(word) {
      return word << 8 & 0xff00ff00 | word >>> 8 & 0x00ff00ff;
    }
  })();
  return CryptoJS.enc.Utf16;
});

/***/ }),
/* 67 */
/*!*****************************************************************************************!*\
  !*** F:/project/qianduan/zhanhuitong_yudengji_git/node_modules/crypto-js/enc-base64.js ***!
  \*****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;var _typeof = __webpack_require__(/*! @babel/runtime/helpers/typeof */ 13);
;
(function (root, factory) {
  if (( false ? undefined : _typeof(exports)) === "object") {
    // CommonJS
    module.exports = exports = factory(__webpack_require__(/*! ./core */ 62));
  } else if (true) {
    // AMD
    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! ./core */ 62)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  } else {}
})(this, function (CryptoJS) {
  (function () {
    // Shortcuts
    var C = CryptoJS;
    var C_lib = C.lib;
    var WordArray = C_lib.WordArray;
    var C_enc = C.enc;

    /**
     * Base64 encoding strategy.
     */
    var Base64 = C_enc.Base64 = {
      /**
       * Converts a word array to a Base64 string.
       *
       * @param {WordArray} wordArray The word array.
       *
       * @return {string} The Base64 string.
       *
       * @static
       *
       * @example
       *
       *     var base64String = CryptoJS.enc.Base64.stringify(wordArray);
       */
      stringify: function stringify(wordArray) {
        // Shortcuts
        var words = wordArray.words;
        var sigBytes = wordArray.sigBytes;
        var map = this._map;

        // Clamp excess bits
        wordArray.clamp();

        // Convert
        var base64Chars = [];
        for (var i = 0; i < sigBytes; i += 3) {
          var byte1 = words[i >>> 2] >>> 24 - i % 4 * 8 & 0xff;
          var byte2 = words[i + 1 >>> 2] >>> 24 - (i + 1) % 4 * 8 & 0xff;
          var byte3 = words[i + 2 >>> 2] >>> 24 - (i + 2) % 4 * 8 & 0xff;
          var triplet = byte1 << 16 | byte2 << 8 | byte3;
          for (var j = 0; j < 4 && i + j * 0.75 < sigBytes; j++) {
            base64Chars.push(map.charAt(triplet >>> 6 * (3 - j) & 0x3f));
          }
        }

        // Add padding
        var paddingChar = map.charAt(64);
        if (paddingChar) {
          while (base64Chars.length % 4) {
            base64Chars.push(paddingChar);
          }
        }
        return base64Chars.join('');
      },
      /**
       * Converts a Base64 string to a word array.
       *
       * @param {string} base64Str The Base64 string.
       *
       * @return {WordArray} The word array.
       *
       * @static
       *
       * @example
       *
       *     var wordArray = CryptoJS.enc.Base64.parse(base64String);
       */
      parse: function parse(base64Str) {
        // Shortcuts
        var base64StrLength = base64Str.length;
        var map = this._map;
        var reverseMap = this._reverseMap;
        if (!reverseMap) {
          reverseMap = this._reverseMap = [];
          for (var j = 0; j < map.length; j++) {
            reverseMap[map.charCodeAt(j)] = j;
          }
        }

        // Ignore padding
        var paddingChar = map.charAt(64);
        if (paddingChar) {
          var paddingIndex = base64Str.indexOf(paddingChar);
          if (paddingIndex !== -1) {
            base64StrLength = paddingIndex;
          }
        }

        // Convert
        return parseLoop(base64Str, base64StrLength, reverseMap);
      },
      _map: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/='
    };
    function parseLoop(base64Str, base64StrLength, reverseMap) {
      var words = [];
      var nBytes = 0;
      for (var i = 0; i < base64StrLength; i++) {
        if (i % 4) {
          var bits1 = reverseMap[base64Str.charCodeAt(i - 1)] << i % 4 * 2;
          var bits2 = reverseMap[base64Str.charCodeAt(i)] >>> 6 - i % 4 * 2;
          var bitsCombined = bits1 | bits2;
          words[nBytes >>> 2] |= bitsCombined << 24 - nBytes % 4 * 8;
          nBytes++;
        }
      }
      return WordArray.create(words, nBytes);
    }
  })();
  return CryptoJS.enc.Base64;
});

/***/ }),
/* 68 */
/*!********************************************************************************************!*\
  !*** F:/project/qianduan/zhanhuitong_yudengji_git/node_modules/crypto-js/enc-base64url.js ***!
  \********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;var _typeof = __webpack_require__(/*! @babel/runtime/helpers/typeof */ 13);
;
(function (root, factory) {
  if (( false ? undefined : _typeof(exports)) === "object") {
    // CommonJS
    module.exports = exports = factory(__webpack_require__(/*! ./core */ 62));
  } else if (true) {
    // AMD
    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! ./core */ 62)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  } else {}
})(this, function (CryptoJS) {
  (function () {
    // Shortcuts
    var C = CryptoJS;
    var C_lib = C.lib;
    var WordArray = C_lib.WordArray;
    var C_enc = C.enc;

    /**
     * Base64url encoding strategy.
     */
    var Base64url = C_enc.Base64url = {
      /**
       * Converts a word array to a Base64url string.
       *
       * @param {WordArray} wordArray The word array.
       *
       * @param {boolean} urlSafe Whether to use url safe
       *
       * @return {string} The Base64url string.
       *
       * @static
       *
       * @example
       *
       *     var base64String = CryptoJS.enc.Base64url.stringify(wordArray);
       */
      stringify: function stringify(wordArray, urlSafe) {
        if (urlSafe === undefined) {
          urlSafe = true;
        }
        // Shortcuts
        var words = wordArray.words;
        var sigBytes = wordArray.sigBytes;
        var map = urlSafe ? this._safe_map : this._map;

        // Clamp excess bits
        wordArray.clamp();

        // Convert
        var base64Chars = [];
        for (var i = 0; i < sigBytes; i += 3) {
          var byte1 = words[i >>> 2] >>> 24 - i % 4 * 8 & 0xff;
          var byte2 = words[i + 1 >>> 2] >>> 24 - (i + 1) % 4 * 8 & 0xff;
          var byte3 = words[i + 2 >>> 2] >>> 24 - (i + 2) % 4 * 8 & 0xff;
          var triplet = byte1 << 16 | byte2 << 8 | byte3;
          for (var j = 0; j < 4 && i + j * 0.75 < sigBytes; j++) {
            base64Chars.push(map.charAt(triplet >>> 6 * (3 - j) & 0x3f));
          }
        }

        // Add padding
        var paddingChar = map.charAt(64);
        if (paddingChar) {
          while (base64Chars.length % 4) {
            base64Chars.push(paddingChar);
          }
        }
        return base64Chars.join('');
      },
      /**
       * Converts a Base64url string to a word array.
       *
       * @param {string} base64Str The Base64url string.
       *
       * @param {boolean} urlSafe Whether to use url safe
       *
       * @return {WordArray} The word array.
       *
       * @static
       *
       * @example
       *
       *     var wordArray = CryptoJS.enc.Base64url.parse(base64String);
       */
      parse: function parse(base64Str, urlSafe) {
        if (urlSafe === undefined) {
          urlSafe = true;
        }

        // Shortcuts
        var base64StrLength = base64Str.length;
        var map = urlSafe ? this._safe_map : this._map;
        var reverseMap = this._reverseMap;
        if (!reverseMap) {
          reverseMap = this._reverseMap = [];
          for (var j = 0; j < map.length; j++) {
            reverseMap[map.charCodeAt(j)] = j;
          }
        }

        // Ignore padding
        var paddingChar = map.charAt(64);
        if (paddingChar) {
          var paddingIndex = base64Str.indexOf(paddingChar);
          if (paddingIndex !== -1) {
            base64StrLength = paddingIndex;
          }
        }

        // Convert
        return parseLoop(base64Str, base64StrLength, reverseMap);
      },
      _map: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=',
      _safe_map: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_'
    };
    function parseLoop(base64Str, base64StrLength, reverseMap) {
      var words = [];
      var nBytes = 0;
      for (var i = 0; i < base64StrLength; i++) {
        if (i % 4) {
          var bits1 = reverseMap[base64Str.charCodeAt(i - 1)] << i % 4 * 2;
          var bits2 = reverseMap[base64Str.charCodeAt(i)] >>> 6 - i % 4 * 2;
          var bitsCombined = bits1 | bits2;
          words[nBytes >>> 2] |= bitsCombined << 24 - nBytes % 4 * 8;
          nBytes++;
        }
      }
      return WordArray.create(words, nBytes);
    }
  })();
  return CryptoJS.enc.Base64url;
});

/***/ }),
/* 69 */
/*!**********************************************************************************!*\
  !*** F:/project/qianduan/zhanhuitong_yudengji_git/node_modules/crypto-js/md5.js ***!
  \**********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;var _typeof = __webpack_require__(/*! @babel/runtime/helpers/typeof */ 13);
;
(function (root, factory) {
  if (( false ? undefined : _typeof(exports)) === "object") {
    // CommonJS
    module.exports = exports = factory(__webpack_require__(/*! ./core */ 62));
  } else if (true) {
    // AMD
    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! ./core */ 62)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  } else {}
})(this, function (CryptoJS) {
  (function (Math) {
    // Shortcuts
    var C = CryptoJS;
    var C_lib = C.lib;
    var WordArray = C_lib.WordArray;
    var Hasher = C_lib.Hasher;
    var C_algo = C.algo;

    // Constants table
    var T = [];

    // Compute constants
    (function () {
      for (var i = 0; i < 64; i++) {
        T[i] = Math.abs(Math.sin(i + 1)) * 0x100000000 | 0;
      }
    })();

    /**
     * MD5 hash algorithm.
     */
    var MD5 = C_algo.MD5 = Hasher.extend({
      _doReset: function _doReset() {
        this._hash = new WordArray.init([0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476]);
      },
      _doProcessBlock: function _doProcessBlock(M, offset) {
        // Swap endian
        for (var i = 0; i < 16; i++) {
          // Shortcuts
          var offset_i = offset + i;
          var M_offset_i = M[offset_i];
          M[offset_i] = (M_offset_i << 8 | M_offset_i >>> 24) & 0x00ff00ff | (M_offset_i << 24 | M_offset_i >>> 8) & 0xff00ff00;
        }

        // Shortcuts
        var H = this._hash.words;
        var M_offset_0 = M[offset + 0];
        var M_offset_1 = M[offset + 1];
        var M_offset_2 = M[offset + 2];
        var M_offset_3 = M[offset + 3];
        var M_offset_4 = M[offset + 4];
        var M_offset_5 = M[offset + 5];
        var M_offset_6 = M[offset + 6];
        var M_offset_7 = M[offset + 7];
        var M_offset_8 = M[offset + 8];
        var M_offset_9 = M[offset + 9];
        var M_offset_10 = M[offset + 10];
        var M_offset_11 = M[offset + 11];
        var M_offset_12 = M[offset + 12];
        var M_offset_13 = M[offset + 13];
        var M_offset_14 = M[offset + 14];
        var M_offset_15 = M[offset + 15];

        // Working variables
        var a = H[0];
        var b = H[1];
        var c = H[2];
        var d = H[3];

        // Computation
        a = FF(a, b, c, d, M_offset_0, 7, T[0]);
        d = FF(d, a, b, c, M_offset_1, 12, T[1]);
        c = FF(c, d, a, b, M_offset_2, 17, T[2]);
        b = FF(b, c, d, a, M_offset_3, 22, T[3]);
        a = FF(a, b, c, d, M_offset_4, 7, T[4]);
        d = FF(d, a, b, c, M_offset_5, 12, T[5]);
        c = FF(c, d, a, b, M_offset_6, 17, T[6]);
        b = FF(b, c, d, a, M_offset_7, 22, T[7]);
        a = FF(a, b, c, d, M_offset_8, 7, T[8]);
        d = FF(d, a, b, c, M_offset_9, 12, T[9]);
        c = FF(c, d, a, b, M_offset_10, 17, T[10]);
        b = FF(b, c, d, a, M_offset_11, 22, T[11]);
        a = FF(a, b, c, d, M_offset_12, 7, T[12]);
        d = FF(d, a, b, c, M_offset_13, 12, T[13]);
        c = FF(c, d, a, b, M_offset_14, 17, T[14]);
        b = FF(b, c, d, a, M_offset_15, 22, T[15]);
        a = GG(a, b, c, d, M_offset_1, 5, T[16]);
        d = GG(d, a, b, c, M_offset_6, 9, T[17]);
        c = GG(c, d, a, b, M_offset_11, 14, T[18]);
        b = GG(b, c, d, a, M_offset_0, 20, T[19]);
        a = GG(a, b, c, d, M_offset_5, 5, T[20]);
        d = GG(d, a, b, c, M_offset_10, 9, T[21]);
        c = GG(c, d, a, b, M_offset_15, 14, T[22]);
        b = GG(b, c, d, a, M_offset_4, 20, T[23]);
        a = GG(a, b, c, d, M_offset_9, 5, T[24]);
        d = GG(d, a, b, c, M_offset_14, 9, T[25]);
        c = GG(c, d, a, b, M_offset_3, 14, T[26]);
        b = GG(b, c, d, a, M_offset_8, 20, T[27]);
        a = GG(a, b, c, d, M_offset_13, 5, T[28]);
        d = GG(d, a, b, c, M_offset_2, 9, T[29]);
        c = GG(c, d, a, b, M_offset_7, 14, T[30]);
        b = GG(b, c, d, a, M_offset_12, 20, T[31]);
        a = HH(a, b, c, d, M_offset_5, 4, T[32]);
        d = HH(d, a, b, c, M_offset_8, 11, T[33]);
        c = HH(c, d, a, b, M_offset_11, 16, T[34]);
        b = HH(b, c, d, a, M_offset_14, 23, T[35]);
        a = HH(a, b, c, d, M_offset_1, 4, T[36]);
        d = HH(d, a, b, c, M_offset_4, 11, T[37]);
        c = HH(c, d, a, b, M_offset_7, 16, T[38]);
        b = HH(b, c, d, a, M_offset_10, 23, T[39]);
        a = HH(a, b, c, d, M_offset_13, 4, T[40]);
        d = HH(d, a, b, c, M_offset_0, 11, T[41]);
        c = HH(c, d, a, b, M_offset_3, 16, T[42]);
        b = HH(b, c, d, a, M_offset_6, 23, T[43]);
        a = HH(a, b, c, d, M_offset_9, 4, T[44]);
        d = HH(d, a, b, c, M_offset_12, 11, T[45]);
        c = HH(c, d, a, b, M_offset_15, 16, T[46]);
        b = HH(b, c, d, a, M_offset_2, 23, T[47]);
        a = II(a, b, c, d, M_offset_0, 6, T[48]);
        d = II(d, a, b, c, M_offset_7, 10, T[49]);
        c = II(c, d, a, b, M_offset_14, 15, T[50]);
        b = II(b, c, d, a, M_offset_5, 21, T[51]);
        a = II(a, b, c, d, M_offset_12, 6, T[52]);
        d = II(d, a, b, c, M_offset_3, 10, T[53]);
        c = II(c, d, a, b, M_offset_10, 15, T[54]);
        b = II(b, c, d, a, M_offset_1, 21, T[55]);
        a = II(a, b, c, d, M_offset_8, 6, T[56]);
        d = II(d, a, b, c, M_offset_15, 10, T[57]);
        c = II(c, d, a, b, M_offset_6, 15, T[58]);
        b = II(b, c, d, a, M_offset_13, 21, T[59]);
        a = II(a, b, c, d, M_offset_4, 6, T[60]);
        d = II(d, a, b, c, M_offset_11, 10, T[61]);
        c = II(c, d, a, b, M_offset_2, 15, T[62]);
        b = II(b, c, d, a, M_offset_9, 21, T[63]);

        // Intermediate hash value
        H[0] = H[0] + a | 0;
        H[1] = H[1] + b | 0;
        H[2] = H[2] + c | 0;
        H[3] = H[3] + d | 0;
      },
      _doFinalize: function _doFinalize() {
        // Shortcuts
        var data = this._data;
        var dataWords = data.words;
        var nBitsTotal = this._nDataBytes * 8;
        var nBitsLeft = data.sigBytes * 8;

        // Add padding
        dataWords[nBitsLeft >>> 5] |= 0x80 << 24 - nBitsLeft % 32;
        var nBitsTotalH = Math.floor(nBitsTotal / 0x100000000);
        var nBitsTotalL = nBitsTotal;
        dataWords[(nBitsLeft + 64 >>> 9 << 4) + 15] = (nBitsTotalH << 8 | nBitsTotalH >>> 24) & 0x00ff00ff | (nBitsTotalH << 24 | nBitsTotalH >>> 8) & 0xff00ff00;
        dataWords[(nBitsLeft + 64 >>> 9 << 4) + 14] = (nBitsTotalL << 8 | nBitsTotalL >>> 24) & 0x00ff00ff | (nBitsTotalL << 24 | nBitsTotalL >>> 8) & 0xff00ff00;
        data.sigBytes = (dataWords.length + 1) * 4;

        // Hash final blocks
        this._process();

        // Shortcuts
        var hash = this._hash;
        var H = hash.words;

        // Swap endian
        for (var i = 0; i < 4; i++) {
          // Shortcut
          var H_i = H[i];
          H[i] = (H_i << 8 | H_i >>> 24) & 0x00ff00ff | (H_i << 24 | H_i >>> 8) & 0xff00ff00;
        }

        // Return final computed hash
        return hash;
      },
      clone: function clone() {
        var clone = Hasher.clone.call(this);
        clone._hash = this._hash.clone();
        return clone;
      }
    });
    function FF(a, b, c, d, x, s, t) {
      var n = a + (b & c | ~b & d) + x + t;
      return (n << s | n >>> 32 - s) + b;
    }
    function GG(a, b, c, d, x, s, t) {
      var n = a + (b & d | c & ~d) + x + t;
      return (n << s | n >>> 32 - s) + b;
    }
    function HH(a, b, c, d, x, s, t) {
      var n = a + (b ^ c ^ d) + x + t;
      return (n << s | n >>> 32 - s) + b;
    }
    function II(a, b, c, d, x, s, t) {
      var n = a + (c ^ (b | ~d)) + x + t;
      return (n << s | n >>> 32 - s) + b;
    }

    /**
     * Shortcut function to the hasher's object interface.
     *
     * @param {WordArray|string} message The message to hash.
     *
     * @return {WordArray} The hash.
     *
     * @static
     *
     * @example
     *
     *     var hash = CryptoJS.MD5('message');
     *     var hash = CryptoJS.MD5(wordArray);
     */
    C.MD5 = Hasher._createHelper(MD5);

    /**
     * Shortcut function to the HMAC's object interface.
     *
     * @param {WordArray|string} message The message to hash.
     * @param {WordArray|string} key The secret key.
     *
     * @return {WordArray} The HMAC.
     *
     * @static
     *
     * @example
     *
     *     var hmac = CryptoJS.HmacMD5(message, key);
     */
    C.HmacMD5 = Hasher._createHmacHelper(MD5);
  })(Math);
  return CryptoJS.MD5;
});

/***/ }),
/* 70 */
/*!***********************************************************************************!*\
  !*** F:/project/qianduan/zhanhuitong_yudengji_git/node_modules/crypto-js/sha1.js ***!
  \***********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;var _typeof = __webpack_require__(/*! @babel/runtime/helpers/typeof */ 13);
;
(function (root, factory) {
  if (( false ? undefined : _typeof(exports)) === "object") {
    // CommonJS
    module.exports = exports = factory(__webpack_require__(/*! ./core */ 62));
  } else if (true) {
    // AMD
    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! ./core */ 62)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  } else {}
})(this, function (CryptoJS) {
  (function () {
    // Shortcuts
    var C = CryptoJS;
    var C_lib = C.lib;
    var WordArray = C_lib.WordArray;
    var Hasher = C_lib.Hasher;
    var C_algo = C.algo;

    // Reusable object
    var W = [];

    /**
     * SHA-1 hash algorithm.
     */
    var SHA1 = C_algo.SHA1 = Hasher.extend({
      _doReset: function _doReset() {
        this._hash = new WordArray.init([0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0]);
      },
      _doProcessBlock: function _doProcessBlock(M, offset) {
        // Shortcut
        var H = this._hash.words;

        // Working variables
        var a = H[0];
        var b = H[1];
        var c = H[2];
        var d = H[3];
        var e = H[4];

        // Computation
        for (var i = 0; i < 80; i++) {
          if (i < 16) {
            W[i] = M[offset + i] | 0;
          } else {
            var n = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16];
            W[i] = n << 1 | n >>> 31;
          }
          var t = (a << 5 | a >>> 27) + e + W[i];
          if (i < 20) {
            t += (b & c | ~b & d) + 0x5a827999;
          } else if (i < 40) {
            t += (b ^ c ^ d) + 0x6ed9eba1;
          } else if (i < 60) {
            t += (b & c | b & d | c & d) - 0x70e44324;
          } else /* if (i < 80) */{
              t += (b ^ c ^ d) - 0x359d3e2a;
            }
          e = d;
          d = c;
          c = b << 30 | b >>> 2;
          b = a;
          a = t;
        }

        // Intermediate hash value
        H[0] = H[0] + a | 0;
        H[1] = H[1] + b | 0;
        H[2] = H[2] + c | 0;
        H[3] = H[3] + d | 0;
        H[4] = H[4] + e | 0;
      },
      _doFinalize: function _doFinalize() {
        // Shortcuts
        var data = this._data;
        var dataWords = data.words;
        var nBitsTotal = this._nDataBytes * 8;
        var nBitsLeft = data.sigBytes * 8;

        // Add padding
        dataWords[nBitsLeft >>> 5] |= 0x80 << 24 - nBitsLeft % 32;
        dataWords[(nBitsLeft + 64 >>> 9 << 4) + 14] = Math.floor(nBitsTotal / 0x100000000);
        dataWords[(nBitsLeft + 64 >>> 9 << 4) + 15] = nBitsTotal;
        data.sigBytes = dataWords.length * 4;

        // Hash final blocks
        this._process();

        // Return final computed hash
        return this._hash;
      },
      clone: function clone() {
        var clone = Hasher.clone.call(this);
        clone._hash = this._hash.clone();
        return clone;
      }
    });

    /**
     * Shortcut function to the hasher's object interface.
     *
     * @param {WordArray|string} message The message to hash.
     *
     * @return {WordArray} The hash.
     *
     * @static
     *
     * @example
     *
     *     var hash = CryptoJS.SHA1('message');
     *     var hash = CryptoJS.SHA1(wordArray);
     */
    C.SHA1 = Hasher._createHelper(SHA1);

    /**
     * Shortcut function to the HMAC's object interface.
     *
     * @param {WordArray|string} message The message to hash.
     * @param {WordArray|string} key The secret key.
     *
     * @return {WordArray} The HMAC.
     *
     * @static
     *
     * @example
     *
     *     var hmac = CryptoJS.HmacSHA1(message, key);
     */
    C.HmacSHA1 = Hasher._createHmacHelper(SHA1);
  })();
  return CryptoJS.SHA1;
});

/***/ }),
/* 71 */
/*!*************************************************************************************!*\
  !*** F:/project/qianduan/zhanhuitong_yudengji_git/node_modules/crypto-js/sha256.js ***!
  \*************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;var _typeof = __webpack_require__(/*! @babel/runtime/helpers/typeof */ 13);
;
(function (root, factory) {
  if (( false ? undefined : _typeof(exports)) === "object") {
    // CommonJS
    module.exports = exports = factory(__webpack_require__(/*! ./core */ 62));
  } else if (true) {
    // AMD
    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! ./core */ 62)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  } else {}
})(this, function (CryptoJS) {
  (function (Math) {
    // Shortcuts
    var C = CryptoJS;
    var C_lib = C.lib;
    var WordArray = C_lib.WordArray;
    var Hasher = C_lib.Hasher;
    var C_algo = C.algo;

    // Initialization and round constants tables
    var H = [];
    var K = [];

    // Compute constants
    (function () {
      function isPrime(n) {
        var sqrtN = Math.sqrt(n);
        for (var factor = 2; factor <= sqrtN; factor++) {
          if (!(n % factor)) {
            return false;
          }
        }
        return true;
      }
      function getFractionalBits(n) {
        return (n - (n | 0)) * 0x100000000 | 0;
      }
      var n = 2;
      var nPrime = 0;
      while (nPrime < 64) {
        if (isPrime(n)) {
          if (nPrime < 8) {
            H[nPrime] = getFractionalBits(Math.pow(n, 1 / 2));
          }
          K[nPrime] = getFractionalBits(Math.pow(n, 1 / 3));
          nPrime++;
        }
        n++;
      }
    })();

    // Reusable object
    var W = [];

    /**
     * SHA-256 hash algorithm.
     */
    var SHA256 = C_algo.SHA256 = Hasher.extend({
      _doReset: function _doReset() {
        this._hash = new WordArray.init(H.slice(0));
      },
      _doProcessBlock: function _doProcessBlock(M, offset) {
        // Shortcut
        var H = this._hash.words;

        // Working variables
        var a = H[0];
        var b = H[1];
        var c = H[2];
        var d = H[3];
        var e = H[4];
        var f = H[5];
        var g = H[6];
        var h = H[7];

        // Computation
        for (var i = 0; i < 64; i++) {
          if (i < 16) {
            W[i] = M[offset + i] | 0;
          } else {
            var gamma0x = W[i - 15];
            var gamma0 = (gamma0x << 25 | gamma0x >>> 7) ^ (gamma0x << 14 | gamma0x >>> 18) ^ gamma0x >>> 3;
            var gamma1x = W[i - 2];
            var gamma1 = (gamma1x << 15 | gamma1x >>> 17) ^ (gamma1x << 13 | gamma1x >>> 19) ^ gamma1x >>> 10;
            W[i] = gamma0 + W[i - 7] + gamma1 + W[i - 16];
          }
          var ch = e & f ^ ~e & g;
          var maj = a & b ^ a & c ^ b & c;
          var sigma0 = (a << 30 | a >>> 2) ^ (a << 19 | a >>> 13) ^ (a << 10 | a >>> 22);
          var sigma1 = (e << 26 | e >>> 6) ^ (e << 21 | e >>> 11) ^ (e << 7 | e >>> 25);
          var t1 = h + sigma1 + ch + K[i] + W[i];
          var t2 = sigma0 + maj;
          h = g;
          g = f;
          f = e;
          e = d + t1 | 0;
          d = c;
          c = b;
          b = a;
          a = t1 + t2 | 0;
        }

        // Intermediate hash value
        H[0] = H[0] + a | 0;
        H[1] = H[1] + b | 0;
        H[2] = H[2] + c | 0;
        H[3] = H[3] + d | 0;
        H[4] = H[4] + e | 0;
        H[5] = H[5] + f | 0;
        H[6] = H[6] + g | 0;
        H[7] = H[7] + h | 0;
      },
      _doFinalize: function _doFinalize() {
        // Shortcuts
        var data = this._data;
        var dataWords = data.words;
        var nBitsTotal = this._nDataBytes * 8;
        var nBitsLeft = data.sigBytes * 8;

        // Add padding
        dataWords[nBitsLeft >>> 5] |= 0x80 << 24 - nBitsLeft % 32;
        dataWords[(nBitsLeft + 64 >>> 9 << 4) + 14] = Math.floor(nBitsTotal / 0x100000000);
        dataWords[(nBitsLeft + 64 >>> 9 << 4) + 15] = nBitsTotal;
        data.sigBytes = dataWords.length * 4;

        // Hash final blocks
        this._process();

        // Return final computed hash
        return this._hash;
      },
      clone: function clone() {
        var clone = Hasher.clone.call(this);
        clone._hash = this._hash.clone();
        return clone;
      }
    });

    /**
     * Shortcut function to the hasher's object interface.
     *
     * @param {WordArray|string} message The message to hash.
     *
     * @return {WordArray} The hash.
     *
     * @static
     *
     * @example
     *
     *     var hash = CryptoJS.SHA256('message');
     *     var hash = CryptoJS.SHA256(wordArray);
     */
    C.SHA256 = Hasher._createHelper(SHA256);

    /**
     * Shortcut function to the HMAC's object interface.
     *
     * @param {WordArray|string} message The message to hash.
     * @param {WordArray|string} key The secret key.
     *
     * @return {WordArray} The HMAC.
     *
     * @static
     *
     * @example
     *
     *     var hmac = CryptoJS.HmacSHA256(message, key);
     */
    C.HmacSHA256 = Hasher._createHmacHelper(SHA256);
  })(Math);
  return CryptoJS.SHA256;
});

/***/ }),
/* 72 */
/*!*************************************************************************************!*\
  !*** F:/project/qianduan/zhanhuitong_yudengji_git/node_modules/crypto-js/sha224.js ***!
  \*************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;var _typeof = __webpack_require__(/*! @babel/runtime/helpers/typeof */ 13);
;
(function (root, factory, undef) {
  if (( false ? undefined : _typeof(exports)) === "object") {
    // CommonJS
    module.exports = exports = factory(__webpack_require__(/*! ./core */ 62), __webpack_require__(/*! ./sha256 */ 71));
  } else if (true) {
    // AMD
    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! ./core */ 62), __webpack_require__(/*! ./sha256 */ 71)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  } else {}
})(this, function (CryptoJS) {
  (function () {
    // Shortcuts
    var C = CryptoJS;
    var C_lib = C.lib;
    var WordArray = C_lib.WordArray;
    var C_algo = C.algo;
    var SHA256 = C_algo.SHA256;

    /**
     * SHA-224 hash algorithm.
     */
    var SHA224 = C_algo.SHA224 = SHA256.extend({
      _doReset: function _doReset() {
        this._hash = new WordArray.init([0xc1059ed8, 0x367cd507, 0x3070dd17, 0xf70e5939, 0xffc00b31, 0x68581511, 0x64f98fa7, 0xbefa4fa4]);
      },
      _doFinalize: function _doFinalize() {
        var hash = SHA256._doFinalize.call(this);
        hash.sigBytes -= 4;
        return hash;
      }
    });

    /**
     * Shortcut function to the hasher's object interface.
     *
     * @param {WordArray|string} message The message to hash.
     *
     * @return {WordArray} The hash.
     *
     * @static
     *
     * @example
     *
     *     var hash = CryptoJS.SHA224('message');
     *     var hash = CryptoJS.SHA224(wordArray);
     */
    C.SHA224 = SHA256._createHelper(SHA224);

    /**
     * Shortcut function to the HMAC's object interface.
     *
     * @param {WordArray|string} message The message to hash.
     * @param {WordArray|string} key The secret key.
     *
     * @return {WordArray} The HMAC.
     *
     * @static
     *
     * @example
     *
     *     var hmac = CryptoJS.HmacSHA224(message, key);
     */
    C.HmacSHA224 = SHA256._createHmacHelper(SHA224);
  })();
  return CryptoJS.SHA224;
});

/***/ }),
/* 73 */
/*!*************************************************************************************!*\
  !*** F:/project/qianduan/zhanhuitong_yudengji_git/node_modules/crypto-js/sha512.js ***!
  \*************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;var _typeof = __webpack_require__(/*! @babel/runtime/helpers/typeof */ 13);
;
(function (root, factory, undef) {
  if (( false ? undefined : _typeof(exports)) === "object") {
    // CommonJS
    module.exports = exports = factory(__webpack_require__(/*! ./core */ 62), __webpack_require__(/*! ./x64-core */ 64));
  } else if (true) {
    // AMD
    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! ./core */ 62), __webpack_require__(/*! ./x64-core */ 64)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  } else {}
})(this, function (CryptoJS) {
  (function () {
    // Shortcuts
    var C = CryptoJS;
    var C_lib = C.lib;
    var Hasher = C_lib.Hasher;
    var C_x64 = C.x64;
    var X64Word = C_x64.Word;
    var X64WordArray = C_x64.WordArray;
    var C_algo = C.algo;
    function X64Word_create() {
      return X64Word.create.apply(X64Word, arguments);
    }

    // Constants
    var K = [X64Word_create(0x428a2f98, 0xd728ae22), X64Word_create(0x71374491, 0x23ef65cd), X64Word_create(0xb5c0fbcf, 0xec4d3b2f), X64Word_create(0xe9b5dba5, 0x8189dbbc), X64Word_create(0x3956c25b, 0xf348b538), X64Word_create(0x59f111f1, 0xb605d019), X64Word_create(0x923f82a4, 0xaf194f9b), X64Word_create(0xab1c5ed5, 0xda6d8118), X64Word_create(0xd807aa98, 0xa3030242), X64Word_create(0x12835b01, 0x45706fbe), X64Word_create(0x243185be, 0x4ee4b28c), X64Word_create(0x550c7dc3, 0xd5ffb4e2), X64Word_create(0x72be5d74, 0xf27b896f), X64Word_create(0x80deb1fe, 0x3b1696b1), X64Word_create(0x9bdc06a7, 0x25c71235), X64Word_create(0xc19bf174, 0xcf692694), X64Word_create(0xe49b69c1, 0x9ef14ad2), X64Word_create(0xefbe4786, 0x384f25e3), X64Word_create(0x0fc19dc6, 0x8b8cd5b5), X64Word_create(0x240ca1cc, 0x77ac9c65), X64Word_create(0x2de92c6f, 0x592b0275), X64Word_create(0x4a7484aa, 0x6ea6e483), X64Word_create(0x5cb0a9dc, 0xbd41fbd4), X64Word_create(0x76f988da, 0x831153b5), X64Word_create(0x983e5152, 0xee66dfab), X64Word_create(0xa831c66d, 0x2db43210), X64Word_create(0xb00327c8, 0x98fb213f), X64Word_create(0xbf597fc7, 0xbeef0ee4), X64Word_create(0xc6e00bf3, 0x3da88fc2), X64Word_create(0xd5a79147, 0x930aa725), X64Word_create(0x06ca6351, 0xe003826f), X64Word_create(0x14292967, 0x0a0e6e70), X64Word_create(0x27b70a85, 0x46d22ffc), X64Word_create(0x2e1b2138, 0x5c26c926), X64Word_create(0x4d2c6dfc, 0x5ac42aed), X64Word_create(0x53380d13, 0x9d95b3df), X64Word_create(0x650a7354, 0x8baf63de), X64Word_create(0x766a0abb, 0x3c77b2a8), X64Word_create(0x81c2c92e, 0x47edaee6), X64Word_create(0x92722c85, 0x1482353b), X64Word_create(0xa2bfe8a1, 0x4cf10364), X64Word_create(0xa81a664b, 0xbc423001), X64Word_create(0xc24b8b70, 0xd0f89791), X64Word_create(0xc76c51a3, 0x0654be30), X64Word_create(0xd192e819, 0xd6ef5218), X64Word_create(0xd6990624, 0x5565a910), X64Word_create(0xf40e3585, 0x5771202a), X64Word_create(0x106aa070, 0x32bbd1b8), X64Word_create(0x19a4c116, 0xb8d2d0c8), X64Word_create(0x1e376c08, 0x5141ab53), X64Word_create(0x2748774c, 0xdf8eeb99), X64Word_create(0x34b0bcb5, 0xe19b48a8), X64Word_create(0x391c0cb3, 0xc5c95a63), X64Word_create(0x4ed8aa4a, 0xe3418acb), X64Word_create(0x5b9cca4f, 0x7763e373), X64Word_create(0x682e6ff3, 0xd6b2b8a3), X64Word_create(0x748f82ee, 0x5defb2fc), X64Word_create(0x78a5636f, 0x43172f60), X64Word_create(0x84c87814, 0xa1f0ab72), X64Word_create(0x8cc70208, 0x1a6439ec), X64Word_create(0x90befffa, 0x23631e28), X64Word_create(0xa4506ceb, 0xde82bde9), X64Word_create(0xbef9a3f7, 0xb2c67915), X64Word_create(0xc67178f2, 0xe372532b), X64Word_create(0xca273ece, 0xea26619c), X64Word_create(0xd186b8c7, 0x21c0c207), X64Word_create(0xeada7dd6, 0xcde0eb1e), X64Word_create(0xf57d4f7f, 0xee6ed178), X64Word_create(0x06f067aa, 0x72176fba), X64Word_create(0x0a637dc5, 0xa2c898a6), X64Word_create(0x113f9804, 0xbef90dae), X64Word_create(0x1b710b35, 0x131c471b), X64Word_create(0x28db77f5, 0x23047d84), X64Word_create(0x32caab7b, 0x40c72493), X64Word_create(0x3c9ebe0a, 0x15c9bebc), X64Word_create(0x431d67c4, 0x9c100d4c), X64Word_create(0x4cc5d4be, 0xcb3e42b6), X64Word_create(0x597f299c, 0xfc657e2a), X64Word_create(0x5fcb6fab, 0x3ad6faec), X64Word_create(0x6c44198c, 0x4a475817)];

    // Reusable objects
    var W = [];
    (function () {
      for (var i = 0; i < 80; i++) {
        W[i] = X64Word_create();
      }
    })();

    /**
     * SHA-512 hash algorithm.
     */
    var SHA512 = C_algo.SHA512 = Hasher.extend({
      _doReset: function _doReset() {
        this._hash = new X64WordArray.init([new X64Word.init(0x6a09e667, 0xf3bcc908), new X64Word.init(0xbb67ae85, 0x84caa73b), new X64Word.init(0x3c6ef372, 0xfe94f82b), new X64Word.init(0xa54ff53a, 0x5f1d36f1), new X64Word.init(0x510e527f, 0xade682d1), new X64Word.init(0x9b05688c, 0x2b3e6c1f), new X64Word.init(0x1f83d9ab, 0xfb41bd6b), new X64Word.init(0x5be0cd19, 0x137e2179)]);
      },
      _doProcessBlock: function _doProcessBlock(M, offset) {
        // Shortcuts
        var H = this._hash.words;
        var H0 = H[0];
        var H1 = H[1];
        var H2 = H[2];
        var H3 = H[3];
        var H4 = H[4];
        var H5 = H[5];
        var H6 = H[6];
        var H7 = H[7];
        var H0h = H0.high;
        var H0l = H0.low;
        var H1h = H1.high;
        var H1l = H1.low;
        var H2h = H2.high;
        var H2l = H2.low;
        var H3h = H3.high;
        var H3l = H3.low;
        var H4h = H4.high;
        var H4l = H4.low;
        var H5h = H5.high;
        var H5l = H5.low;
        var H6h = H6.high;
        var H6l = H6.low;
        var H7h = H7.high;
        var H7l = H7.low;

        // Working variables
        var ah = H0h;
        var al = H0l;
        var bh = H1h;
        var bl = H1l;
        var ch = H2h;
        var cl = H2l;
        var dh = H3h;
        var dl = H3l;
        var eh = H4h;
        var el = H4l;
        var fh = H5h;
        var fl = H5l;
        var gh = H6h;
        var gl = H6l;
        var hh = H7h;
        var hl = H7l;

        // Rounds
        for (var i = 0; i < 80; i++) {
          var Wil;
          var Wih;

          // Shortcut
          var Wi = W[i];

          // Extend message
          if (i < 16) {
            Wih = Wi.high = M[offset + i * 2] | 0;
            Wil = Wi.low = M[offset + i * 2 + 1] | 0;
          } else {
            // Gamma0
            var gamma0x = W[i - 15];
            var gamma0xh = gamma0x.high;
            var gamma0xl = gamma0x.low;
            var gamma0h = (gamma0xh >>> 1 | gamma0xl << 31) ^ (gamma0xh >>> 8 | gamma0xl << 24) ^ gamma0xh >>> 7;
            var gamma0l = (gamma0xl >>> 1 | gamma0xh << 31) ^ (gamma0xl >>> 8 | gamma0xh << 24) ^ (gamma0xl >>> 7 | gamma0xh << 25);

            // Gamma1
            var gamma1x = W[i - 2];
            var gamma1xh = gamma1x.high;
            var gamma1xl = gamma1x.low;
            var gamma1h = (gamma1xh >>> 19 | gamma1xl << 13) ^ (gamma1xh << 3 | gamma1xl >>> 29) ^ gamma1xh >>> 6;
            var gamma1l = (gamma1xl >>> 19 | gamma1xh << 13) ^ (gamma1xl << 3 | gamma1xh >>> 29) ^ (gamma1xl >>> 6 | gamma1xh << 26);

            // W[i] = gamma0 + W[i - 7] + gamma1 + W[i - 16]
            var Wi7 = W[i - 7];
            var Wi7h = Wi7.high;
            var Wi7l = Wi7.low;
            var Wi16 = W[i - 16];
            var Wi16h = Wi16.high;
            var Wi16l = Wi16.low;
            Wil = gamma0l + Wi7l;
            Wih = gamma0h + Wi7h + (Wil >>> 0 < gamma0l >>> 0 ? 1 : 0);
            Wil = Wil + gamma1l;
            Wih = Wih + gamma1h + (Wil >>> 0 < gamma1l >>> 0 ? 1 : 0);
            Wil = Wil + Wi16l;
            Wih = Wih + Wi16h + (Wil >>> 0 < Wi16l >>> 0 ? 1 : 0);
            Wi.high = Wih;
            Wi.low = Wil;
          }
          var chh = eh & fh ^ ~eh & gh;
          var chl = el & fl ^ ~el & gl;
          var majh = ah & bh ^ ah & ch ^ bh & ch;
          var majl = al & bl ^ al & cl ^ bl & cl;
          var sigma0h = (ah >>> 28 | al << 4) ^ (ah << 30 | al >>> 2) ^ (ah << 25 | al >>> 7);
          var sigma0l = (al >>> 28 | ah << 4) ^ (al << 30 | ah >>> 2) ^ (al << 25 | ah >>> 7);
          var sigma1h = (eh >>> 14 | el << 18) ^ (eh >>> 18 | el << 14) ^ (eh << 23 | el >>> 9);
          var sigma1l = (el >>> 14 | eh << 18) ^ (el >>> 18 | eh << 14) ^ (el << 23 | eh >>> 9);

          // t1 = h + sigma1 + ch + K[i] + W[i]
          var Ki = K[i];
          var Kih = Ki.high;
          var Kil = Ki.low;
          var t1l = hl + sigma1l;
          var t1h = hh + sigma1h + (t1l >>> 0 < hl >>> 0 ? 1 : 0);
          var t1l = t1l + chl;
          var t1h = t1h + chh + (t1l >>> 0 < chl >>> 0 ? 1 : 0);
          var t1l = t1l + Kil;
          var t1h = t1h + Kih + (t1l >>> 0 < Kil >>> 0 ? 1 : 0);
          var t1l = t1l + Wil;
          var t1h = t1h + Wih + (t1l >>> 0 < Wil >>> 0 ? 1 : 0);

          // t2 = sigma0 + maj
          var t2l = sigma0l + majl;
          var t2h = sigma0h + majh + (t2l >>> 0 < sigma0l >>> 0 ? 1 : 0);

          // Update working variables
          hh = gh;
          hl = gl;
          gh = fh;
          gl = fl;
          fh = eh;
          fl = el;
          el = dl + t1l | 0;
          eh = dh + t1h + (el >>> 0 < dl >>> 0 ? 1 : 0) | 0;
          dh = ch;
          dl = cl;
          ch = bh;
          cl = bl;
          bh = ah;
          bl = al;
          al = t1l + t2l | 0;
          ah = t1h + t2h + (al >>> 0 < t1l >>> 0 ? 1 : 0) | 0;
        }

        // Intermediate hash value
        H0l = H0.low = H0l + al;
        H0.high = H0h + ah + (H0l >>> 0 < al >>> 0 ? 1 : 0);
        H1l = H1.low = H1l + bl;
        H1.high = H1h + bh + (H1l >>> 0 < bl >>> 0 ? 1 : 0);
        H2l = H2.low = H2l + cl;
        H2.high = H2h + ch + (H2l >>> 0 < cl >>> 0 ? 1 : 0);
        H3l = H3.low = H3l + dl;
        H3.high = H3h + dh + (H3l >>> 0 < dl >>> 0 ? 1 : 0);
        H4l = H4.low = H4l + el;
        H4.high = H4h + eh + (H4l >>> 0 < el >>> 0 ? 1 : 0);
        H5l = H5.low = H5l + fl;
        H5.high = H5h + fh + (H5l >>> 0 < fl >>> 0 ? 1 : 0);
        H6l = H6.low = H6l + gl;
        H6.high = H6h + gh + (H6l >>> 0 < gl >>> 0 ? 1 : 0);
        H7l = H7.low = H7l + hl;
        H7.high = H7h + hh + (H7l >>> 0 < hl >>> 0 ? 1 : 0);
      },
      _doFinalize: function _doFinalize() {
        // Shortcuts
        var data = this._data;
        var dataWords = data.words;
        var nBitsTotal = this._nDataBytes * 8;
        var nBitsLeft = data.sigBytes * 8;

        // Add padding
        dataWords[nBitsLeft >>> 5] |= 0x80 << 24 - nBitsLeft % 32;
        dataWords[(nBitsLeft + 128 >>> 10 << 5) + 30] = Math.floor(nBitsTotal / 0x100000000);
        dataWords[(nBitsLeft + 128 >>> 10 << 5) + 31] = nBitsTotal;
        data.sigBytes = dataWords.length * 4;

        // Hash final blocks
        this._process();

        // Convert hash to 32-bit word array before returning
        var hash = this._hash.toX32();

        // Return final computed hash
        return hash;
      },
      clone: function clone() {
        var clone = Hasher.clone.call(this);
        clone._hash = this._hash.clone();
        return clone;
      },
      blockSize: 1024 / 32
    });

    /**
     * Shortcut function to the hasher's object interface.
     *
     * @param {WordArray|string} message The message to hash.
     *
     * @return {WordArray} The hash.
     *
     * @static
     *
     * @example
     *
     *     var hash = CryptoJS.SHA512('message');
     *     var hash = CryptoJS.SHA512(wordArray);
     */
    C.SHA512 = Hasher._createHelper(SHA512);

    /**
     * Shortcut function to the HMAC's object interface.
     *
     * @param {WordArray|string} message The message to hash.
     * @param {WordArray|string} key The secret key.
     *
     * @return {WordArray} The HMAC.
     *
     * @static
     *
     * @example
     *
     *     var hmac = CryptoJS.HmacSHA512(message, key);
     */
    C.HmacSHA512 = Hasher._createHmacHelper(SHA512);
  })();
  return CryptoJS.SHA512;
});

/***/ }),
/* 74 */
/*!*************************************************************************************!*\
  !*** F:/project/qianduan/zhanhuitong_yudengji_git/node_modules/crypto-js/sha384.js ***!
  \*************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;var _typeof = __webpack_require__(/*! @babel/runtime/helpers/typeof */ 13);
;
(function (root, factory, undef) {
  if (( false ? undefined : _typeof(exports)) === "object") {
    // CommonJS
    module.exports = exports = factory(__webpack_require__(/*! ./core */ 62), __webpack_require__(/*! ./x64-core */ 64), __webpack_require__(/*! ./sha512 */ 73));
  } else if (true) {
    // AMD
    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! ./core */ 62), __webpack_require__(/*! ./x64-core */ 64), __webpack_require__(/*! ./sha512 */ 73)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  } else {}
})(this, function (CryptoJS) {
  (function () {
    // Shortcuts
    var C = CryptoJS;
    var C_x64 = C.x64;
    var X64Word = C_x64.Word;
    var X64WordArray = C_x64.WordArray;
    var C_algo = C.algo;
    var SHA512 = C_algo.SHA512;

    /**
     * SHA-384 hash algorithm.
     */
    var SHA384 = C_algo.SHA384 = SHA512.extend({
      _doReset: function _doReset() {
        this._hash = new X64WordArray.init([new X64Word.init(0xcbbb9d5d, 0xc1059ed8), new X64Word.init(0x629a292a, 0x367cd507), new X64Word.init(0x9159015a, 0x3070dd17), new X64Word.init(0x152fecd8, 0xf70e5939), new X64Word.init(0x67332667, 0xffc00b31), new X64Word.init(0x8eb44a87, 0x68581511), new X64Word.init(0xdb0c2e0d, 0x64f98fa7), new X64Word.init(0x47b5481d, 0xbefa4fa4)]);
      },
      _doFinalize: function _doFinalize() {
        var hash = SHA512._doFinalize.call(this);
        hash.sigBytes -= 16;
        return hash;
      }
    });

    /**
     * Shortcut function to the hasher's object interface.
     *
     * @param {WordArray|string} message The message to hash.
     *
     * @return {WordArray} The hash.
     *
     * @static
     *
     * @example
     *
     *     var hash = CryptoJS.SHA384('message');
     *     var hash = CryptoJS.SHA384(wordArray);
     */
    C.SHA384 = SHA512._createHelper(SHA384);

    /**
     * Shortcut function to the HMAC's object interface.
     *
     * @param {WordArray|string} message The message to hash.
     * @param {WordArray|string} key The secret key.
     *
     * @return {WordArray} The HMAC.
     *
     * @static
     *
     * @example
     *
     *     var hmac = CryptoJS.HmacSHA384(message, key);
     */
    C.HmacSHA384 = SHA512._createHmacHelper(SHA384);
  })();
  return CryptoJS.SHA384;
});

/***/ }),
/* 75 */
/*!***********************************************************************************!*\
  !*** F:/project/qianduan/zhanhuitong_yudengji_git/node_modules/crypto-js/sha3.js ***!
  \***********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;var _typeof = __webpack_require__(/*! @babel/runtime/helpers/typeof */ 13);
;
(function (root, factory, undef) {
  if (( false ? undefined : _typeof(exports)) === "object") {
    // CommonJS
    module.exports = exports = factory(__webpack_require__(/*! ./core */ 62), __webpack_require__(/*! ./x64-core */ 64));
  } else if (true) {
    // AMD
    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! ./core */ 62), __webpack_require__(/*! ./x64-core */ 64)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  } else {}
})(this, function (CryptoJS) {
  (function (Math) {
    // Shortcuts
    var C = CryptoJS;
    var C_lib = C.lib;
    var WordArray = C_lib.WordArray;
    var Hasher = C_lib.Hasher;
    var C_x64 = C.x64;
    var X64Word = C_x64.Word;
    var C_algo = C.algo;

    // Constants tables
    var RHO_OFFSETS = [];
    var PI_INDEXES = [];
    var ROUND_CONSTANTS = [];

    // Compute Constants
    (function () {
      // Compute rho offset constants
      var x = 1,
        y = 0;
      for (var t = 0; t < 24; t++) {
        RHO_OFFSETS[x + 5 * y] = (t + 1) * (t + 2) / 2 % 64;
        var newX = y % 5;
        var newY = (2 * x + 3 * y) % 5;
        x = newX;
        y = newY;
      }

      // Compute pi index constants
      for (var x = 0; x < 5; x++) {
        for (var y = 0; y < 5; y++) {
          PI_INDEXES[x + 5 * y] = y + (2 * x + 3 * y) % 5 * 5;
        }
      }

      // Compute round constants
      var LFSR = 0x01;
      for (var i = 0; i < 24; i++) {
        var roundConstantMsw = 0;
        var roundConstantLsw = 0;
        for (var j = 0; j < 7; j++) {
          if (LFSR & 0x01) {
            var bitPosition = (1 << j) - 1;
            if (bitPosition < 32) {
              roundConstantLsw ^= 1 << bitPosition;
            } else /* if (bitPosition >= 32) */{
                roundConstantMsw ^= 1 << bitPosition - 32;
              }
          }

          // Compute next LFSR
          if (LFSR & 0x80) {
            // Primitive polynomial over GF(2): x^8 + x^6 + x^5 + x^4 + 1
            LFSR = LFSR << 1 ^ 0x71;
          } else {
            LFSR <<= 1;
          }
        }
        ROUND_CONSTANTS[i] = X64Word.create(roundConstantMsw, roundConstantLsw);
      }
    })();

    // Reusable objects for temporary values
    var T = [];
    (function () {
      for (var i = 0; i < 25; i++) {
        T[i] = X64Word.create();
      }
    })();

    /**
     * SHA-3 hash algorithm.
     */
    var SHA3 = C_algo.SHA3 = Hasher.extend({
      /**
       * Configuration options.
       *
       * @property {number} outputLength
       *   The desired number of bits in the output hash.
       *   Only values permitted are: 224, 256, 384, 512.
       *   Default: 512
       */
      cfg: Hasher.cfg.extend({
        outputLength: 512
      }),
      _doReset: function _doReset() {
        var state = this._state = [];
        for (var i = 0; i < 25; i++) {
          state[i] = new X64Word.init();
        }
        this.blockSize = (1600 - 2 * this.cfg.outputLength) / 32;
      },
      _doProcessBlock: function _doProcessBlock(M, offset) {
        // Shortcuts
        var state = this._state;
        var nBlockSizeLanes = this.blockSize / 2;

        // Absorb
        for (var i = 0; i < nBlockSizeLanes; i++) {
          // Shortcuts
          var M2i = M[offset + 2 * i];
          var M2i1 = M[offset + 2 * i + 1];

          // Swap endian
          M2i = (M2i << 8 | M2i >>> 24) & 0x00ff00ff | (M2i << 24 | M2i >>> 8) & 0xff00ff00;
          M2i1 = (M2i1 << 8 | M2i1 >>> 24) & 0x00ff00ff | (M2i1 << 24 | M2i1 >>> 8) & 0xff00ff00;

          // Absorb message into state
          var lane = state[i];
          lane.high ^= M2i1;
          lane.low ^= M2i;
        }

        // Rounds
        for (var round = 0; round < 24; round++) {
          // Theta
          for (var x = 0; x < 5; x++) {
            // Mix column lanes
            var tMsw = 0,
              tLsw = 0;
            for (var y = 0; y < 5; y++) {
              var lane = state[x + 5 * y];
              tMsw ^= lane.high;
              tLsw ^= lane.low;
            }

            // Temporary values
            var Tx = T[x];
            Tx.high = tMsw;
            Tx.low = tLsw;
          }
          for (var x = 0; x < 5; x++) {
            // Shortcuts
            var Tx4 = T[(x + 4) % 5];
            var Tx1 = T[(x + 1) % 5];
            var Tx1Msw = Tx1.high;
            var Tx1Lsw = Tx1.low;

            // Mix surrounding columns
            var tMsw = Tx4.high ^ (Tx1Msw << 1 | Tx1Lsw >>> 31);
            var tLsw = Tx4.low ^ (Tx1Lsw << 1 | Tx1Msw >>> 31);
            for (var y = 0; y < 5; y++) {
              var lane = state[x + 5 * y];
              lane.high ^= tMsw;
              lane.low ^= tLsw;
            }
          }

          // Rho Pi
          for (var laneIndex = 1; laneIndex < 25; laneIndex++) {
            var tMsw;
            var tLsw;

            // Shortcuts
            var lane = state[laneIndex];
            var laneMsw = lane.high;
            var laneLsw = lane.low;
            var rhoOffset = RHO_OFFSETS[laneIndex];

            // Rotate lanes
            if (rhoOffset < 32) {
              tMsw = laneMsw << rhoOffset | laneLsw >>> 32 - rhoOffset;
              tLsw = laneLsw << rhoOffset | laneMsw >>> 32 - rhoOffset;
            } else /* if (rhoOffset >= 32) */{
                tMsw = laneLsw << rhoOffset - 32 | laneMsw >>> 64 - rhoOffset;
                tLsw = laneMsw << rhoOffset - 32 | laneLsw >>> 64 - rhoOffset;
              }

            // Transpose lanes
            var TPiLane = T[PI_INDEXES[laneIndex]];
            TPiLane.high = tMsw;
            TPiLane.low = tLsw;
          }

          // Rho pi at x = y = 0
          var T0 = T[0];
          var state0 = state[0];
          T0.high = state0.high;
          T0.low = state0.low;

          // Chi
          for (var x = 0; x < 5; x++) {
            for (var y = 0; y < 5; y++) {
              // Shortcuts
              var laneIndex = x + 5 * y;
              var lane = state[laneIndex];
              var TLane = T[laneIndex];
              var Tx1Lane = T[(x + 1) % 5 + 5 * y];
              var Tx2Lane = T[(x + 2) % 5 + 5 * y];

              // Mix rows
              lane.high = TLane.high ^ ~Tx1Lane.high & Tx2Lane.high;
              lane.low = TLane.low ^ ~Tx1Lane.low & Tx2Lane.low;
            }
          }

          // Iota
          var lane = state[0];
          var roundConstant = ROUND_CONSTANTS[round];
          lane.high ^= roundConstant.high;
          lane.low ^= roundConstant.low;
        }
      },
      _doFinalize: function _doFinalize() {
        // Shortcuts
        var data = this._data;
        var dataWords = data.words;
        var nBitsTotal = this._nDataBytes * 8;
        var nBitsLeft = data.sigBytes * 8;
        var blockSizeBits = this.blockSize * 32;

        // Add padding
        dataWords[nBitsLeft >>> 5] |= 0x1 << 24 - nBitsLeft % 32;
        dataWords[(Math.ceil((nBitsLeft + 1) / blockSizeBits) * blockSizeBits >>> 5) - 1] |= 0x80;
        data.sigBytes = dataWords.length * 4;

        // Hash final blocks
        this._process();

        // Shortcuts
        var state = this._state;
        var outputLengthBytes = this.cfg.outputLength / 8;
        var outputLengthLanes = outputLengthBytes / 8;

        // Squeeze
        var hashWords = [];
        for (var i = 0; i < outputLengthLanes; i++) {
          // Shortcuts
          var lane = state[i];
          var laneMsw = lane.high;
          var laneLsw = lane.low;

          // Swap endian
          laneMsw = (laneMsw << 8 | laneMsw >>> 24) & 0x00ff00ff | (laneMsw << 24 | laneMsw >>> 8) & 0xff00ff00;
          laneLsw = (laneLsw << 8 | laneLsw >>> 24) & 0x00ff00ff | (laneLsw << 24 | laneLsw >>> 8) & 0xff00ff00;

          // Squeeze state to retrieve hash
          hashWords.push(laneLsw);
          hashWords.push(laneMsw);
        }

        // Return final computed hash
        return new WordArray.init(hashWords, outputLengthBytes);
      },
      clone: function clone() {
        var clone = Hasher.clone.call(this);
        var state = clone._state = this._state.slice(0);
        for (var i = 0; i < 25; i++) {
          state[i] = state[i].clone();
        }
        return clone;
      }
    });

    /**
     * Shortcut function to the hasher's object interface.
     *
     * @param {WordArray|string} message The message to hash.
     *
     * @return {WordArray} The hash.
     *
     * @static
     *
     * @example
     *
     *     var hash = CryptoJS.SHA3('message');
     *     var hash = CryptoJS.SHA3(wordArray);
     */
    C.SHA3 = Hasher._createHelper(SHA3);

    /**
     * Shortcut function to the HMAC's object interface.
     *
     * @param {WordArray|string} message The message to hash.
     * @param {WordArray|string} key The secret key.
     *
     * @return {WordArray} The HMAC.
     *
     * @static
     *
     * @example
     *
     *     var hmac = CryptoJS.HmacSHA3(message, key);
     */
    C.HmacSHA3 = Hasher._createHmacHelper(SHA3);
  })(Math);
  return CryptoJS.SHA3;
});

/***/ }),
/* 76 */
/*!****************************************************************************************!*\
  !*** F:/project/qianduan/zhanhuitong_yudengji_git/node_modules/crypto-js/ripemd160.js ***!
  \****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;var _typeof = __webpack_require__(/*! @babel/runtime/helpers/typeof */ 13);
;
(function (root, factory) {
  if (( false ? undefined : _typeof(exports)) === "object") {
    // CommonJS
    module.exports = exports = factory(__webpack_require__(/*! ./core */ 62));
  } else if (true) {
    // AMD
    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! ./core */ 62)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  } else {}
})(this, function (CryptoJS) {
  /** @preserve
  (c) 2012 by Cédric Mesnil. All rights reserved.
  	Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:
  	    - Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.
      - Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.
  	THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  */

  (function (Math) {
    // Shortcuts
    var C = CryptoJS;
    var C_lib = C.lib;
    var WordArray = C_lib.WordArray;
    var Hasher = C_lib.Hasher;
    var C_algo = C.algo;

    // Constants table
    var _zl = WordArray.create([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8, 3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12, 1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2, 4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13]);
    var _zr = WordArray.create([5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12, 6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2, 15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13, 8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14, 12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11]);
    var _sl = WordArray.create([11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8, 7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12, 11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5, 11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12, 9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6]);
    var _sr = WordArray.create([8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6, 9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11, 9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5, 15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8, 8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11]);
    var _hl = WordArray.create([0x00000000, 0x5A827999, 0x6ED9EBA1, 0x8F1BBCDC, 0xA953FD4E]);
    var _hr = WordArray.create([0x50A28BE6, 0x5C4DD124, 0x6D703EF3, 0x7A6D76E9, 0x00000000]);

    /**
     * RIPEMD160 hash algorithm.
     */
    var RIPEMD160 = C_algo.RIPEMD160 = Hasher.extend({
      _doReset: function _doReset() {
        this._hash = WordArray.create([0x67452301, 0xEFCDAB89, 0x98BADCFE, 0x10325476, 0xC3D2E1F0]);
      },
      _doProcessBlock: function _doProcessBlock(M, offset) {
        // Swap endian
        for (var i = 0; i < 16; i++) {
          // Shortcuts
          var offset_i = offset + i;
          var M_offset_i = M[offset_i];

          // Swap
          M[offset_i] = (M_offset_i << 8 | M_offset_i >>> 24) & 0x00ff00ff | (M_offset_i << 24 | M_offset_i >>> 8) & 0xff00ff00;
        }
        // Shortcut
        var H = this._hash.words;
        var hl = _hl.words;
        var hr = _hr.words;
        var zl = _zl.words;
        var zr = _zr.words;
        var sl = _sl.words;
        var sr = _sr.words;

        // Working variables
        var al, bl, cl, dl, el;
        var ar, br, cr, dr, er;
        ar = al = H[0];
        br = bl = H[1];
        cr = cl = H[2];
        dr = dl = H[3];
        er = el = H[4];
        // Computation
        var t;
        for (var i = 0; i < 80; i += 1) {
          t = al + M[offset + zl[i]] | 0;
          if (i < 16) {
            t += f1(bl, cl, dl) + hl[0];
          } else if (i < 32) {
            t += f2(bl, cl, dl) + hl[1];
          } else if (i < 48) {
            t += f3(bl, cl, dl) + hl[2];
          } else if (i < 64) {
            t += f4(bl, cl, dl) + hl[3];
          } else {
            // if (i<80) {
            t += f5(bl, cl, dl) + hl[4];
          }
          t = t | 0;
          t = rotl(t, sl[i]);
          t = t + el | 0;
          al = el;
          el = dl;
          dl = rotl(cl, 10);
          cl = bl;
          bl = t;
          t = ar + M[offset + zr[i]] | 0;
          if (i < 16) {
            t += f5(br, cr, dr) + hr[0];
          } else if (i < 32) {
            t += f4(br, cr, dr) + hr[1];
          } else if (i < 48) {
            t += f3(br, cr, dr) + hr[2];
          } else if (i < 64) {
            t += f2(br, cr, dr) + hr[3];
          } else {
            // if (i<80) {
            t += f1(br, cr, dr) + hr[4];
          }
          t = t | 0;
          t = rotl(t, sr[i]);
          t = t + er | 0;
          ar = er;
          er = dr;
          dr = rotl(cr, 10);
          cr = br;
          br = t;
        }
        // Intermediate hash value
        t = H[1] + cl + dr | 0;
        H[1] = H[2] + dl + er | 0;
        H[2] = H[3] + el + ar | 0;
        H[3] = H[4] + al + br | 0;
        H[4] = H[0] + bl + cr | 0;
        H[0] = t;
      },
      _doFinalize: function _doFinalize() {
        // Shortcuts
        var data = this._data;
        var dataWords = data.words;
        var nBitsTotal = this._nDataBytes * 8;
        var nBitsLeft = data.sigBytes * 8;

        // Add padding
        dataWords[nBitsLeft >>> 5] |= 0x80 << 24 - nBitsLeft % 32;
        dataWords[(nBitsLeft + 64 >>> 9 << 4) + 14] = (nBitsTotal << 8 | nBitsTotal >>> 24) & 0x00ff00ff | (nBitsTotal << 24 | nBitsTotal >>> 8) & 0xff00ff00;
        data.sigBytes = (dataWords.length + 1) * 4;

        // Hash final blocks
        this._process();

        // Shortcuts
        var hash = this._hash;
        var H = hash.words;

        // Swap endian
        for (var i = 0; i < 5; i++) {
          // Shortcut
          var H_i = H[i];

          // Swap
          H[i] = (H_i << 8 | H_i >>> 24) & 0x00ff00ff | (H_i << 24 | H_i >>> 8) & 0xff00ff00;
        }

        // Return final computed hash
        return hash;
      },
      clone: function clone() {
        var clone = Hasher.clone.call(this);
        clone._hash = this._hash.clone();
        return clone;
      }
    });
    function f1(x, y, z) {
      return x ^ y ^ z;
    }
    function f2(x, y, z) {
      return x & y | ~x & z;
    }
    function f3(x, y, z) {
      return (x | ~y) ^ z;
    }
    function f4(x, y, z) {
      return x & z | y & ~z;
    }
    function f5(x, y, z) {
      return x ^ (y | ~z);
    }
    function rotl(x, n) {
      return x << n | x >>> 32 - n;
    }

    /**
     * Shortcut function to the hasher's object interface.
     *
     * @param {WordArray|string} message The message to hash.
     *
     * @return {WordArray} The hash.
     *
     * @static
     *
     * @example
     *
     *     var hash = CryptoJS.RIPEMD160('message');
     *     var hash = CryptoJS.RIPEMD160(wordArray);
     */
    C.RIPEMD160 = Hasher._createHelper(RIPEMD160);

    /**
     * Shortcut function to the HMAC's object interface.
     *
     * @param {WordArray|string} message The message to hash.
     * @param {WordArray|string} key The secret key.
     *
     * @return {WordArray} The HMAC.
     *
     * @static
     *
     * @example
     *
     *     var hmac = CryptoJS.HmacRIPEMD160(message, key);
     */
    C.HmacRIPEMD160 = Hasher._createHmacHelper(RIPEMD160);
  })(Math);
  return CryptoJS.RIPEMD160;
});

/***/ }),
/* 77 */
/*!***********************************************************************************!*\
  !*** F:/project/qianduan/zhanhuitong_yudengji_git/node_modules/crypto-js/hmac.js ***!
  \***********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;var _typeof = __webpack_require__(/*! @babel/runtime/helpers/typeof */ 13);
;
(function (root, factory) {
  if (( false ? undefined : _typeof(exports)) === "object") {
    // CommonJS
    module.exports = exports = factory(__webpack_require__(/*! ./core */ 62));
  } else if (true) {
    // AMD
    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! ./core */ 62)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  } else {}
})(this, function (CryptoJS) {
  (function () {
    // Shortcuts
    var C = CryptoJS;
    var C_lib = C.lib;
    var Base = C_lib.Base;
    var C_enc = C.enc;
    var Utf8 = C_enc.Utf8;
    var C_algo = C.algo;

    /**
     * HMAC algorithm.
     */
    var HMAC = C_algo.HMAC = Base.extend({
      /**
       * Initializes a newly created HMAC.
       *
       * @param {Hasher} hasher The hash algorithm to use.
       * @param {WordArray|string} key The secret key.
       *
       * @example
       *
       *     var hmacHasher = CryptoJS.algo.HMAC.create(CryptoJS.algo.SHA256, key);
       */
      init: function init(hasher, key) {
        // Init hasher
        hasher = this._hasher = new hasher.init();

        // Convert string to WordArray, else assume WordArray already
        if (typeof key == 'string') {
          key = Utf8.parse(key);
        }

        // Shortcuts
        var hasherBlockSize = hasher.blockSize;
        var hasherBlockSizeBytes = hasherBlockSize * 4;

        // Allow arbitrary length keys
        if (key.sigBytes > hasherBlockSizeBytes) {
          key = hasher.finalize(key);
        }

        // Clamp excess bits
        key.clamp();

        // Clone key for inner and outer pads
        var oKey = this._oKey = key.clone();
        var iKey = this._iKey = key.clone();

        // Shortcuts
        var oKeyWords = oKey.words;
        var iKeyWords = iKey.words;

        // XOR keys with pad constants
        for (var i = 0; i < hasherBlockSize; i++) {
          oKeyWords[i] ^= 0x5c5c5c5c;
          iKeyWords[i] ^= 0x36363636;
        }
        oKey.sigBytes = iKey.sigBytes = hasherBlockSizeBytes;

        // Set initial values
        this.reset();
      },
      /**
       * Resets this HMAC to its initial state.
       *
       * @example
       *
       *     hmacHasher.reset();
       */
      reset: function reset() {
        // Shortcut
        var hasher = this._hasher;

        // Reset
        hasher.reset();
        hasher.update(this._iKey);
      },
      /**
       * Updates this HMAC with a message.
       *
       * @param {WordArray|string} messageUpdate The message to append.
       *
       * @return {HMAC} This HMAC instance.
       *
       * @example
       *
       *     hmacHasher.update('message');
       *     hmacHasher.update(wordArray);
       */
      update: function update(messageUpdate) {
        this._hasher.update(messageUpdate);

        // Chainable
        return this;
      },
      /**
       * Finalizes the HMAC computation.
       * Note that the finalize operation is effectively a destructive, read-once operation.
       *
       * @param {WordArray|string} messageUpdate (Optional) A final message update.
       *
       * @return {WordArray} The HMAC.
       *
       * @example
       *
       *     var hmac = hmacHasher.finalize();
       *     var hmac = hmacHasher.finalize('message');
       *     var hmac = hmacHasher.finalize(wordArray);
       */
      finalize: function finalize(messageUpdate) {
        // Shortcut
        var hasher = this._hasher;

        // Compute HMAC
        var innerHash = hasher.finalize(messageUpdate);
        hasher.reset();
        var hmac = hasher.finalize(this._oKey.clone().concat(innerHash));
        return hmac;
      }
    });
  })();
});

/***/ }),
/* 78 */
/*!*************************************************************************************!*\
  !*** F:/project/qianduan/zhanhuitong_yudengji_git/node_modules/crypto-js/pbkdf2.js ***!
  \*************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;var _typeof = __webpack_require__(/*! @babel/runtime/helpers/typeof */ 13);
;
(function (root, factory, undef) {
  if (( false ? undefined : _typeof(exports)) === "object") {
    // CommonJS
    module.exports = exports = factory(__webpack_require__(/*! ./core */ 62), __webpack_require__(/*! ./sha256 */ 71), __webpack_require__(/*! ./hmac */ 77));
  } else if (true) {
    // AMD
    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! ./core */ 62), __webpack_require__(/*! ./sha256 */ 71), __webpack_require__(/*! ./hmac */ 77)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  } else {}
})(this, function (CryptoJS) {
  (function () {
    // Shortcuts
    var C = CryptoJS;
    var C_lib = C.lib;
    var Base = C_lib.Base;
    var WordArray = C_lib.WordArray;
    var C_algo = C.algo;
    var SHA256 = C_algo.SHA256;
    var HMAC = C_algo.HMAC;

    /**
     * Password-Based Key Derivation Function 2 algorithm.
     */
    var PBKDF2 = C_algo.PBKDF2 = Base.extend({
      /**
       * Configuration options.
       *
       * @property {number} keySize The key size in words to generate. Default: 4 (128 bits)
       * @property {Hasher} hasher The hasher to use. Default: SHA256
       * @property {number} iterations The number of iterations to perform. Default: 250000
       */
      cfg: Base.extend({
        keySize: 128 / 32,
        hasher: SHA256,
        iterations: 250000
      }),
      /**
       * Initializes a newly created key derivation function.
       *
       * @param {Object} cfg (Optional) The configuration options to use for the derivation.
       *
       * @example
       *
       *     var kdf = CryptoJS.algo.PBKDF2.create();
       *     var kdf = CryptoJS.algo.PBKDF2.create({ keySize: 8 });
       *     var kdf = CryptoJS.algo.PBKDF2.create({ keySize: 8, iterations: 1000 });
       */
      init: function init(cfg) {
        this.cfg = this.cfg.extend(cfg);
      },
      /**
       * Computes the Password-Based Key Derivation Function 2.
       *
       * @param {WordArray|string} password The password.
       * @param {WordArray|string} salt A salt.
       *
       * @return {WordArray} The derived key.
       *
       * @example
       *
       *     var key = kdf.compute(password, salt);
       */
      compute: function compute(password, salt) {
        // Shortcut
        var cfg = this.cfg;

        // Init HMAC
        var hmac = HMAC.create(cfg.hasher, password);

        // Initial values
        var derivedKey = WordArray.create();
        var blockIndex = WordArray.create([0x00000001]);

        // Shortcuts
        var derivedKeyWords = derivedKey.words;
        var blockIndexWords = blockIndex.words;
        var keySize = cfg.keySize;
        var iterations = cfg.iterations;

        // Generate key
        while (derivedKeyWords.length < keySize) {
          var block = hmac.update(salt).finalize(blockIndex);
          hmac.reset();

          // Shortcuts
          var blockWords = block.words;
          var blockWordsLength = blockWords.length;

          // Iterations
          var intermediate = block;
          for (var i = 1; i < iterations; i++) {
            intermediate = hmac.finalize(intermediate);
            hmac.reset();

            // Shortcut
            var intermediateWords = intermediate.words;

            // XOR intermediate with block
            for (var j = 0; j < blockWordsLength; j++) {
              blockWords[j] ^= intermediateWords[j];
            }
          }
          derivedKey.concat(block);
          blockIndexWords[0]++;
        }
        derivedKey.sigBytes = keySize * 4;
        return derivedKey;
      }
    });

    /**
     * Computes the Password-Based Key Derivation Function 2.
     *
     * @param {WordArray|string} password The password.
     * @param {WordArray|string} salt A salt.
     * @param {Object} cfg (Optional) The configuration options to use for this computation.
     *
     * @return {WordArray} The derived key.
     *
     * @static
     *
     * @example
     *
     *     var key = CryptoJS.PBKDF2(password, salt);
     *     var key = CryptoJS.PBKDF2(password, salt, { keySize: 8 });
     *     var key = CryptoJS.PBKDF2(password, salt, { keySize: 8, iterations: 1000 });
     */
    C.PBKDF2 = function (password, salt, cfg) {
      return PBKDF2.create(cfg).compute(password, salt);
    };
  })();
  return CryptoJS.PBKDF2;
});

/***/ }),
/* 79 */
/*!*************************************************************************************!*\
  !*** F:/project/qianduan/zhanhuitong_yudengji_git/node_modules/crypto-js/evpkdf.js ***!
  \*************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;var _typeof = __webpack_require__(/*! @babel/runtime/helpers/typeof */ 13);
;
(function (root, factory, undef) {
  if (( false ? undefined : _typeof(exports)) === "object") {
    // CommonJS
    module.exports = exports = factory(__webpack_require__(/*! ./core */ 62), __webpack_require__(/*! ./sha1 */ 70), __webpack_require__(/*! ./hmac */ 77));
  } else if (true) {
    // AMD
    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! ./core */ 62), __webpack_require__(/*! ./sha1 */ 70), __webpack_require__(/*! ./hmac */ 77)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  } else {}
})(this, function (CryptoJS) {
  (function () {
    // Shortcuts
    var C = CryptoJS;
    var C_lib = C.lib;
    var Base = C_lib.Base;
    var WordArray = C_lib.WordArray;
    var C_algo = C.algo;
    var MD5 = C_algo.MD5;

    /**
     * This key derivation function is meant to conform with EVP_BytesToKey.
     * www.openssl.org/docs/crypto/EVP_BytesToKey.html
     */
    var EvpKDF = C_algo.EvpKDF = Base.extend({
      /**
       * Configuration options.
       *
       * @property {number} keySize The key size in words to generate. Default: 4 (128 bits)
       * @property {Hasher} hasher The hash algorithm to use. Default: MD5
       * @property {number} iterations The number of iterations to perform. Default: 1
       */
      cfg: Base.extend({
        keySize: 128 / 32,
        hasher: MD5,
        iterations: 1
      }),
      /**
       * Initializes a newly created key derivation function.
       *
       * @param {Object} cfg (Optional) The configuration options to use for the derivation.
       *
       * @example
       *
       *     var kdf = CryptoJS.algo.EvpKDF.create();
       *     var kdf = CryptoJS.algo.EvpKDF.create({ keySize: 8 });
       *     var kdf = CryptoJS.algo.EvpKDF.create({ keySize: 8, iterations: 1000 });
       */
      init: function init(cfg) {
        this.cfg = this.cfg.extend(cfg);
      },
      /**
       * Derives a key from a password.
       *
       * @param {WordArray|string} password The password.
       * @param {WordArray|string} salt A salt.
       *
       * @return {WordArray} The derived key.
       *
       * @example
       *
       *     var key = kdf.compute(password, salt);
       */
      compute: function compute(password, salt) {
        var block;

        // Shortcut
        var cfg = this.cfg;

        // Init hasher
        var hasher = cfg.hasher.create();

        // Initial values
        var derivedKey = WordArray.create();

        // Shortcuts
        var derivedKeyWords = derivedKey.words;
        var keySize = cfg.keySize;
        var iterations = cfg.iterations;

        // Generate key
        while (derivedKeyWords.length < keySize) {
          if (block) {
            hasher.update(block);
          }
          block = hasher.update(password).finalize(salt);
          hasher.reset();

          // Iterations
          for (var i = 1; i < iterations; i++) {
            block = hasher.finalize(block);
            hasher.reset();
          }
          derivedKey.concat(block);
        }
        derivedKey.sigBytes = keySize * 4;
        return derivedKey;
      }
    });

    /**
     * Derives a key from a password.
     *
     * @param {WordArray|string} password The password.
     * @param {WordArray|string} salt A salt.
     * @param {Object} cfg (Optional) The configuration options to use for this computation.
     *
     * @return {WordArray} The derived key.
     *
     * @static
     *
     * @example
     *
     *     var key = CryptoJS.EvpKDF(password, salt);
     *     var key = CryptoJS.EvpKDF(password, salt, { keySize: 8 });
     *     var key = CryptoJS.EvpKDF(password, salt, { keySize: 8, iterations: 1000 });
     */
    C.EvpKDF = function (password, salt, cfg) {
      return EvpKDF.create(cfg).compute(password, salt);
    };
  })();
  return CryptoJS.EvpKDF;
});

/***/ }),
/* 80 */
/*!******************************************************************************************!*\
  !*** F:/project/qianduan/zhanhuitong_yudengji_git/node_modules/crypto-js/cipher-core.js ***!
  \******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;var _typeof = __webpack_require__(/*! @babel/runtime/helpers/typeof */ 13);
;
(function (root, factory, undef) {
  if (( false ? undefined : _typeof(exports)) === "object") {
    // CommonJS
    module.exports = exports = factory(__webpack_require__(/*! ./core */ 62), __webpack_require__(/*! ./evpkdf */ 79));
  } else if (true) {
    // AMD
    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! ./core */ 62), __webpack_require__(/*! ./evpkdf */ 79)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  } else {}
})(this, function (CryptoJS) {
  /**
   * Cipher core components.
   */
  CryptoJS.lib.Cipher || function (undefined) {
    // Shortcuts
    var C = CryptoJS;
    var C_lib = C.lib;
    var Base = C_lib.Base;
    var WordArray = C_lib.WordArray;
    var BufferedBlockAlgorithm = C_lib.BufferedBlockAlgorithm;
    var C_enc = C.enc;
    var Utf8 = C_enc.Utf8;
    var Base64 = C_enc.Base64;
    var C_algo = C.algo;
    var EvpKDF = C_algo.EvpKDF;

    /**
     * Abstract base cipher template.
     *
     * @property {number} keySize This cipher's key size. Default: 4 (128 bits)
     * @property {number} ivSize This cipher's IV size. Default: 4 (128 bits)
     * @property {number} _ENC_XFORM_MODE A constant representing encryption mode.
     * @property {number} _DEC_XFORM_MODE A constant representing decryption mode.
     */
    var Cipher = C_lib.Cipher = BufferedBlockAlgorithm.extend({
      /**
       * Configuration options.
       *
       * @property {WordArray} iv The IV to use for this operation.
       */
      cfg: Base.extend(),
      /**
       * Creates this cipher in encryption mode.
       *
       * @param {WordArray} key The key.
       * @param {Object} cfg (Optional) The configuration options to use for this operation.
       *
       * @return {Cipher} A cipher instance.
       *
       * @static
       *
       * @example
       *
       *     var cipher = CryptoJS.algo.AES.createEncryptor(keyWordArray, { iv: ivWordArray });
       */
      createEncryptor: function createEncryptor(key, cfg) {
        return this.create(this._ENC_XFORM_MODE, key, cfg);
      },
      /**
       * Creates this cipher in decryption mode.
       *
       * @param {WordArray} key The key.
       * @param {Object} cfg (Optional) The configuration options to use for this operation.
       *
       * @return {Cipher} A cipher instance.
       *
       * @static
       *
       * @example
       *
       *     var cipher = CryptoJS.algo.AES.createDecryptor(keyWordArray, { iv: ivWordArray });
       */
      createDecryptor: function createDecryptor(key, cfg) {
        return this.create(this._DEC_XFORM_MODE, key, cfg);
      },
      /**
       * Initializes a newly created cipher.
       *
       * @param {number} xformMode Either the encryption or decryption transormation mode constant.
       * @param {WordArray} key The key.
       * @param {Object} cfg (Optional) The configuration options to use for this operation.
       *
       * @example
       *
       *     var cipher = CryptoJS.algo.AES.create(CryptoJS.algo.AES._ENC_XFORM_MODE, keyWordArray, { iv: ivWordArray });
       */
      init: function init(xformMode, key, cfg) {
        // Apply config defaults
        this.cfg = this.cfg.extend(cfg);

        // Store transform mode and key
        this._xformMode = xformMode;
        this._key = key;

        // Set initial values
        this.reset();
      },
      /**
       * Resets this cipher to its initial state.
       *
       * @example
       *
       *     cipher.reset();
       */
      reset: function reset() {
        // Reset data buffer
        BufferedBlockAlgorithm.reset.call(this);

        // Perform concrete-cipher logic
        this._doReset();
      },
      /**
       * Adds data to be encrypted or decrypted.
       *
       * @param {WordArray|string} dataUpdate The data to encrypt or decrypt.
       *
       * @return {WordArray} The data after processing.
       *
       * @example
       *
       *     var encrypted = cipher.process('data');
       *     var encrypted = cipher.process(wordArray);
       */
      process: function process(dataUpdate) {
        // Append
        this._append(dataUpdate);

        // Process available blocks
        return this._process();
      },
      /**
       * Finalizes the encryption or decryption process.
       * Note that the finalize operation is effectively a destructive, read-once operation.
       *
       * @param {WordArray|string} dataUpdate The final data to encrypt or decrypt.
       *
       * @return {WordArray} The data after final processing.
       *
       * @example
       *
       *     var encrypted = cipher.finalize();
       *     var encrypted = cipher.finalize('data');
       *     var encrypted = cipher.finalize(wordArray);
       */
      finalize: function finalize(dataUpdate) {
        // Final data update
        if (dataUpdate) {
          this._append(dataUpdate);
        }

        // Perform concrete-cipher logic
        var finalProcessedData = this._doFinalize();
        return finalProcessedData;
      },
      keySize: 128 / 32,
      ivSize: 128 / 32,
      _ENC_XFORM_MODE: 1,
      _DEC_XFORM_MODE: 2,
      /**
       * Creates shortcut functions to a cipher's object interface.
       *
       * @param {Cipher} cipher The cipher to create a helper for.
       *
       * @return {Object} An object with encrypt and decrypt shortcut functions.
       *
       * @static
       *
       * @example
       *
       *     var AES = CryptoJS.lib.Cipher._createHelper(CryptoJS.algo.AES);
       */
      _createHelper: function () {
        function selectCipherStrategy(key) {
          if (typeof key == 'string') {
            return PasswordBasedCipher;
          } else {
            return SerializableCipher;
          }
        }
        return function (cipher) {
          return {
            encrypt: function encrypt(message, key, cfg) {
              return selectCipherStrategy(key).encrypt(cipher, message, key, cfg);
            },
            decrypt: function decrypt(ciphertext, key, cfg) {
              return selectCipherStrategy(key).decrypt(cipher, ciphertext, key, cfg);
            }
          };
        };
      }()
    });

    /**
     * Abstract base stream cipher template.
     *
     * @property {number} blockSize The number of 32-bit words this cipher operates on. Default: 1 (32 bits)
     */
    var StreamCipher = C_lib.StreamCipher = Cipher.extend({
      _doFinalize: function _doFinalize() {
        // Process partial blocks
        var finalProcessedBlocks = this._process(!!'flush');
        return finalProcessedBlocks;
      },
      blockSize: 1
    });

    /**
     * Mode namespace.
     */
    var C_mode = C.mode = {};

    /**
     * Abstract base block cipher mode template.
     */
    var BlockCipherMode = C_lib.BlockCipherMode = Base.extend({
      /**
       * Creates this mode for encryption.
       *
       * @param {Cipher} cipher A block cipher instance.
       * @param {Array} iv The IV words.
       *
       * @static
       *
       * @example
       *
       *     var mode = CryptoJS.mode.CBC.createEncryptor(cipher, iv.words);
       */
      createEncryptor: function createEncryptor(cipher, iv) {
        return this.Encryptor.create(cipher, iv);
      },
      /**
       * Creates this mode for decryption.
       *
       * @param {Cipher} cipher A block cipher instance.
       * @param {Array} iv The IV words.
       *
       * @static
       *
       * @example
       *
       *     var mode = CryptoJS.mode.CBC.createDecryptor(cipher, iv.words);
       */
      createDecryptor: function createDecryptor(cipher, iv) {
        return this.Decryptor.create(cipher, iv);
      },
      /**
       * Initializes a newly created mode.
       *
       * @param {Cipher} cipher A block cipher instance.
       * @param {Array} iv The IV words.
       *
       * @example
       *
       *     var mode = CryptoJS.mode.CBC.Encryptor.create(cipher, iv.words);
       */
      init: function init(cipher, iv) {
        this._cipher = cipher;
        this._iv = iv;
      }
    });

    /**
     * Cipher Block Chaining mode.
     */
    var CBC = C_mode.CBC = function () {
      /**
       * Abstract base CBC mode.
       */
      var CBC = BlockCipherMode.extend();

      /**
       * CBC encryptor.
       */
      CBC.Encryptor = CBC.extend({
        /**
         * Processes the data block at offset.
         *
         * @param {Array} words The data words to operate on.
         * @param {number} offset The offset where the block starts.
         *
         * @example
         *
         *     mode.processBlock(data.words, offset);
         */
        processBlock: function processBlock(words, offset) {
          // Shortcuts
          var cipher = this._cipher;
          var blockSize = cipher.blockSize;

          // XOR and encrypt
          xorBlock.call(this, words, offset, blockSize);
          cipher.encryptBlock(words, offset);

          // Remember this block to use with next block
          this._prevBlock = words.slice(offset, offset + blockSize);
        }
      });

      /**
       * CBC decryptor.
       */
      CBC.Decryptor = CBC.extend({
        /**
         * Processes the data block at offset.
         *
         * @param {Array} words The data words to operate on.
         * @param {number} offset The offset where the block starts.
         *
         * @example
         *
         *     mode.processBlock(data.words, offset);
         */
        processBlock: function processBlock(words, offset) {
          // Shortcuts
          var cipher = this._cipher;
          var blockSize = cipher.blockSize;

          // Remember this block to use with next block
          var thisBlock = words.slice(offset, offset + blockSize);

          // Decrypt and XOR
          cipher.decryptBlock(words, offset);
          xorBlock.call(this, words, offset, blockSize);

          // This block becomes the previous block
          this._prevBlock = thisBlock;
        }
      });
      function xorBlock(words, offset, blockSize) {
        var block;

        // Shortcut
        var iv = this._iv;

        // Choose mixing block
        if (iv) {
          block = iv;

          // Remove IV for subsequent blocks
          this._iv = undefined;
        } else {
          block = this._prevBlock;
        }

        // XOR blocks
        for (var i = 0; i < blockSize; i++) {
          words[offset + i] ^= block[i];
        }
      }
      return CBC;
    }();

    /**
     * Padding namespace.
     */
    var C_pad = C.pad = {};

    /**
     * PKCS #5/7 padding strategy.
     */
    var Pkcs7 = C_pad.Pkcs7 = {
      /**
       * Pads data using the algorithm defined in PKCS #5/7.
       *
       * @param {WordArray} data The data to pad.
       * @param {number} blockSize The multiple that the data should be padded to.
       *
       * @static
       *
       * @example
       *
       *     CryptoJS.pad.Pkcs7.pad(wordArray, 4);
       */
      pad: function pad(data, blockSize) {
        // Shortcut
        var blockSizeBytes = blockSize * 4;

        // Count padding bytes
        var nPaddingBytes = blockSizeBytes - data.sigBytes % blockSizeBytes;

        // Create padding word
        var paddingWord = nPaddingBytes << 24 | nPaddingBytes << 16 | nPaddingBytes << 8 | nPaddingBytes;

        // Create padding
        var paddingWords = [];
        for (var i = 0; i < nPaddingBytes; i += 4) {
          paddingWords.push(paddingWord);
        }
        var padding = WordArray.create(paddingWords, nPaddingBytes);

        // Add padding
        data.concat(padding);
      },
      /**
       * Unpads data that had been padded using the algorithm defined in PKCS #5/7.
       *
       * @param {WordArray} data The data to unpad.
       *
       * @static
       *
       * @example
       *
       *     CryptoJS.pad.Pkcs7.unpad(wordArray);
       */
      unpad: function unpad(data) {
        // Get number of padding bytes from last byte
        var nPaddingBytes = data.words[data.sigBytes - 1 >>> 2] & 0xff;

        // Remove padding
        data.sigBytes -= nPaddingBytes;
      }
    };

    /**
     * Abstract base block cipher template.
     *
     * @property {number} blockSize The number of 32-bit words this cipher operates on. Default: 4 (128 bits)
     */
    var BlockCipher = C_lib.BlockCipher = Cipher.extend({
      /**
       * Configuration options.
       *
       * @property {Mode} mode The block mode to use. Default: CBC
       * @property {Padding} padding The padding strategy to use. Default: Pkcs7
       */
      cfg: Cipher.cfg.extend({
        mode: CBC,
        padding: Pkcs7
      }),
      reset: function reset() {
        var modeCreator;

        // Reset cipher
        Cipher.reset.call(this);

        // Shortcuts
        var cfg = this.cfg;
        var iv = cfg.iv;
        var mode = cfg.mode;

        // Reset block mode
        if (this._xformMode == this._ENC_XFORM_MODE) {
          modeCreator = mode.createEncryptor;
        } else /* if (this._xformMode == this._DEC_XFORM_MODE) */{
            modeCreator = mode.createDecryptor;
            // Keep at least one block in the buffer for unpadding
            this._minBufferSize = 1;
          }
        if (this._mode && this._mode.__creator == modeCreator) {
          this._mode.init(this, iv && iv.words);
        } else {
          this._mode = modeCreator.call(mode, this, iv && iv.words);
          this._mode.__creator = modeCreator;
        }
      },
      _doProcessBlock: function _doProcessBlock(words, offset) {
        this._mode.processBlock(words, offset);
      },
      _doFinalize: function _doFinalize() {
        var finalProcessedBlocks;

        // Shortcut
        var padding = this.cfg.padding;

        // Finalize
        if (this._xformMode == this._ENC_XFORM_MODE) {
          // Pad data
          padding.pad(this._data, this.blockSize);

          // Process final blocks
          finalProcessedBlocks = this._process(!!'flush');
        } else /* if (this._xformMode == this._DEC_XFORM_MODE) */{
            // Process final blocks
            finalProcessedBlocks = this._process(!!'flush');

            // Unpad data
            padding.unpad(finalProcessedBlocks);
          }
        return finalProcessedBlocks;
      },
      blockSize: 128 / 32
    });

    /**
     * A collection of cipher parameters.
     *
     * @property {WordArray} ciphertext The raw ciphertext.
     * @property {WordArray} key The key to this ciphertext.
     * @property {WordArray} iv The IV used in the ciphering operation.
     * @property {WordArray} salt The salt used with a key derivation function.
     * @property {Cipher} algorithm The cipher algorithm.
     * @property {Mode} mode The block mode used in the ciphering operation.
     * @property {Padding} padding The padding scheme used in the ciphering operation.
     * @property {number} blockSize The block size of the cipher.
     * @property {Format} formatter The default formatting strategy to convert this cipher params object to a string.
     */
    var CipherParams = C_lib.CipherParams = Base.extend({
      /**
       * Initializes a newly created cipher params object.
       *
       * @param {Object} cipherParams An object with any of the possible cipher parameters.
       *
       * @example
       *
       *     var cipherParams = CryptoJS.lib.CipherParams.create({
       *         ciphertext: ciphertextWordArray,
       *         key: keyWordArray,
       *         iv: ivWordArray,
       *         salt: saltWordArray,
       *         algorithm: CryptoJS.algo.AES,
       *         mode: CryptoJS.mode.CBC,
       *         padding: CryptoJS.pad.PKCS7,
       *         blockSize: 4,
       *         formatter: CryptoJS.format.OpenSSL
       *     });
       */
      init: function init(cipherParams) {
        this.mixIn(cipherParams);
      },
      /**
       * Converts this cipher params object to a string.
       *
       * @param {Format} formatter (Optional) The formatting strategy to use.
       *
       * @return {string} The stringified cipher params.
       *
       * @throws Error If neither the formatter nor the default formatter is set.
       *
       * @example
       *
       *     var string = cipherParams + '';
       *     var string = cipherParams.toString();
       *     var string = cipherParams.toString(CryptoJS.format.OpenSSL);
       */
      toString: function toString(formatter) {
        return (formatter || this.formatter).stringify(this);
      }
    });

    /**
     * Format namespace.
     */
    var C_format = C.format = {};

    /**
     * OpenSSL formatting strategy.
     */
    var OpenSSLFormatter = C_format.OpenSSL = {
      /**
       * Converts a cipher params object to an OpenSSL-compatible string.
       *
       * @param {CipherParams} cipherParams The cipher params object.
       *
       * @return {string} The OpenSSL-compatible string.
       *
       * @static
       *
       * @example
       *
       *     var openSSLString = CryptoJS.format.OpenSSL.stringify(cipherParams);
       */
      stringify: function stringify(cipherParams) {
        var wordArray;

        // Shortcuts
        var ciphertext = cipherParams.ciphertext;
        var salt = cipherParams.salt;

        // Format
        if (salt) {
          wordArray = WordArray.create([0x53616c74, 0x65645f5f]).concat(salt).concat(ciphertext);
        } else {
          wordArray = ciphertext;
        }
        return wordArray.toString(Base64);
      },
      /**
       * Converts an OpenSSL-compatible string to a cipher params object.
       *
       * @param {string} openSSLStr The OpenSSL-compatible string.
       *
       * @return {CipherParams} The cipher params object.
       *
       * @static
       *
       * @example
       *
       *     var cipherParams = CryptoJS.format.OpenSSL.parse(openSSLString);
       */
      parse: function parse(openSSLStr) {
        var salt;

        // Parse base64
        var ciphertext = Base64.parse(openSSLStr);

        // Shortcut
        var ciphertextWords = ciphertext.words;

        // Test for salt
        if (ciphertextWords[0] == 0x53616c74 && ciphertextWords[1] == 0x65645f5f) {
          // Extract salt
          salt = WordArray.create(ciphertextWords.slice(2, 4));

          // Remove salt from ciphertext
          ciphertextWords.splice(0, 4);
          ciphertext.sigBytes -= 16;
        }
        return CipherParams.create({
          ciphertext: ciphertext,
          salt: salt
        });
      }
    };

    /**
     * A cipher wrapper that returns ciphertext as a serializable cipher params object.
     */
    var SerializableCipher = C_lib.SerializableCipher = Base.extend({
      /**
       * Configuration options.
       *
       * @property {Formatter} format The formatting strategy to convert cipher param objects to and from a string. Default: OpenSSL
       */
      cfg: Base.extend({
        format: OpenSSLFormatter
      }),
      /**
       * Encrypts a message.
       *
       * @param {Cipher} cipher The cipher algorithm to use.
       * @param {WordArray|string} message The message to encrypt.
       * @param {WordArray} key The key.
       * @param {Object} cfg (Optional) The configuration options to use for this operation.
       *
       * @return {CipherParams} A cipher params object.
       *
       * @static
       *
       * @example
       *
       *     var ciphertextParams = CryptoJS.lib.SerializableCipher.encrypt(CryptoJS.algo.AES, message, key);
       *     var ciphertextParams = CryptoJS.lib.SerializableCipher.encrypt(CryptoJS.algo.AES, message, key, { iv: iv });
       *     var ciphertextParams = CryptoJS.lib.SerializableCipher.encrypt(CryptoJS.algo.AES, message, key, { iv: iv, format: CryptoJS.format.OpenSSL });
       */
      encrypt: function encrypt(cipher, message, key, cfg) {
        // Apply config defaults
        cfg = this.cfg.extend(cfg);

        // Encrypt
        var encryptor = cipher.createEncryptor(key, cfg);
        var ciphertext = encryptor.finalize(message);

        // Shortcut
        var cipherCfg = encryptor.cfg;

        // Create and return serializable cipher params
        return CipherParams.create({
          ciphertext: ciphertext,
          key: key,
          iv: cipherCfg.iv,
          algorithm: cipher,
          mode: cipherCfg.mode,
          padding: cipherCfg.padding,
          blockSize: cipher.blockSize,
          formatter: cfg.format
        });
      },
      /**
       * Decrypts serialized ciphertext.
       *
       * @param {Cipher} cipher The cipher algorithm to use.
       * @param {CipherParams|string} ciphertext The ciphertext to decrypt.
       * @param {WordArray} key The key.
       * @param {Object} cfg (Optional) The configuration options to use for this operation.
       *
       * @return {WordArray} The plaintext.
       *
       * @static
       *
       * @example
       *
       *     var plaintext = CryptoJS.lib.SerializableCipher.decrypt(CryptoJS.algo.AES, formattedCiphertext, key, { iv: iv, format: CryptoJS.format.OpenSSL });
       *     var plaintext = CryptoJS.lib.SerializableCipher.decrypt(CryptoJS.algo.AES, ciphertextParams, key, { iv: iv, format: CryptoJS.format.OpenSSL });
       */
      decrypt: function decrypt(cipher, ciphertext, key, cfg) {
        // Apply config defaults
        cfg = this.cfg.extend(cfg);

        // Convert string to CipherParams
        ciphertext = this._parse(ciphertext, cfg.format);

        // Decrypt
        var plaintext = cipher.createDecryptor(key, cfg).finalize(ciphertext.ciphertext);
        return plaintext;
      },
      /**
       * Converts serialized ciphertext to CipherParams,
       * else assumed CipherParams already and returns ciphertext unchanged.
       *
       * @param {CipherParams|string} ciphertext The ciphertext.
       * @param {Formatter} format The formatting strategy to use to parse serialized ciphertext.
       *
       * @return {CipherParams} The unserialized ciphertext.
       *
       * @static
       *
       * @example
       *
       *     var ciphertextParams = CryptoJS.lib.SerializableCipher._parse(ciphertextStringOrParams, format);
       */
      _parse: function _parse(ciphertext, format) {
        if (typeof ciphertext == 'string') {
          return format.parse(ciphertext, this);
        } else {
          return ciphertext;
        }
      }
    });

    /**
     * Key derivation function namespace.
     */
    var C_kdf = C.kdf = {};

    /**
     * OpenSSL key derivation function.
     */
    var OpenSSLKdf = C_kdf.OpenSSL = {
      /**
       * Derives a key and IV from a password.
       *
       * @param {string} password The password to derive from.
       * @param {number} keySize The size in words of the key to generate.
       * @param {number} ivSize The size in words of the IV to generate.
       * @param {WordArray|string} salt (Optional) A 64-bit salt to use. If omitted, a salt will be generated randomly.
       *
       * @return {CipherParams} A cipher params object with the key, IV, and salt.
       *
       * @static
       *
       * @example
       *
       *     var derivedParams = CryptoJS.kdf.OpenSSL.execute('Password', 256/32, 128/32);
       *     var derivedParams = CryptoJS.kdf.OpenSSL.execute('Password', 256/32, 128/32, 'saltsalt');
       */
      execute: function execute(password, keySize, ivSize, salt, hasher) {
        // Generate random salt
        if (!salt) {
          salt = WordArray.random(64 / 8);
        }

        // Derive key and IV
        if (!hasher) {
          var key = EvpKDF.create({
            keySize: keySize + ivSize
          }).compute(password, salt);
        } else {
          var key = EvpKDF.create({
            keySize: keySize + ivSize,
            hasher: hasher
          }).compute(password, salt);
        }

        // Separate key and IV
        var iv = WordArray.create(key.words.slice(keySize), ivSize * 4);
        key.sigBytes = keySize * 4;

        // Return params
        return CipherParams.create({
          key: key,
          iv: iv,
          salt: salt
        });
      }
    };

    /**
     * A serializable cipher wrapper that derives the key from a password,
     * and returns ciphertext as a serializable cipher params object.
     */
    var PasswordBasedCipher = C_lib.PasswordBasedCipher = SerializableCipher.extend({
      /**
       * Configuration options.
       *
       * @property {KDF} kdf The key derivation function to use to generate a key and IV from a password. Default: OpenSSL
       */
      cfg: SerializableCipher.cfg.extend({
        kdf: OpenSSLKdf
      }),
      /**
       * Encrypts a message using a password.
       *
       * @param {Cipher} cipher The cipher algorithm to use.
       * @param {WordArray|string} message The message to encrypt.
       * @param {string} password The password.
       * @param {Object} cfg (Optional) The configuration options to use for this operation.
       *
       * @return {CipherParams} A cipher params object.
       *
       * @static
       *
       * @example
       *
       *     var ciphertextParams = CryptoJS.lib.PasswordBasedCipher.encrypt(CryptoJS.algo.AES, message, 'password');
       *     var ciphertextParams = CryptoJS.lib.PasswordBasedCipher.encrypt(CryptoJS.algo.AES, message, 'password', { format: CryptoJS.format.OpenSSL });
       */
      encrypt: function encrypt(cipher, message, password, cfg) {
        // Apply config defaults
        cfg = this.cfg.extend(cfg);

        // Derive key and other params
        var derivedParams = cfg.kdf.execute(password, cipher.keySize, cipher.ivSize, cfg.salt, cfg.hasher);

        // Add IV to config
        cfg.iv = derivedParams.iv;

        // Encrypt
        var ciphertext = SerializableCipher.encrypt.call(this, cipher, message, derivedParams.key, cfg);

        // Mix in derived params
        ciphertext.mixIn(derivedParams);
        return ciphertext;
      },
      /**
       * Decrypts serialized ciphertext using a password.
       *
       * @param {Cipher} cipher The cipher algorithm to use.
       * @param {CipherParams|string} ciphertext The ciphertext to decrypt.
       * @param {string} password The password.
       * @param {Object} cfg (Optional) The configuration options to use for this operation.
       *
       * @return {WordArray} The plaintext.
       *
       * @static
       *
       * @example
       *
       *     var plaintext = CryptoJS.lib.PasswordBasedCipher.decrypt(CryptoJS.algo.AES, formattedCiphertext, 'password', { format: CryptoJS.format.OpenSSL });
       *     var plaintext = CryptoJS.lib.PasswordBasedCipher.decrypt(CryptoJS.algo.AES, ciphertextParams, 'password', { format: CryptoJS.format.OpenSSL });
       */
      decrypt: function decrypt(cipher, ciphertext, password, cfg) {
        // Apply config defaults
        cfg = this.cfg.extend(cfg);

        // Convert string to CipherParams
        ciphertext = this._parse(ciphertext, cfg.format);

        // Derive key and other params
        var derivedParams = cfg.kdf.execute(password, cipher.keySize, cipher.ivSize, ciphertext.salt, cfg.hasher);

        // Add IV to config
        cfg.iv = derivedParams.iv;

        // Decrypt
        var plaintext = SerializableCipher.decrypt.call(this, cipher, ciphertext, derivedParams.key, cfg);
        return plaintext;
      }
    });
  }();
});

/***/ }),
/* 81 */
/*!***************************************************************************************!*\
  !*** F:/project/qianduan/zhanhuitong_yudengji_git/node_modules/crypto-js/mode-cfb.js ***!
  \***************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;var _typeof = __webpack_require__(/*! @babel/runtime/helpers/typeof */ 13);
;
(function (root, factory, undef) {
  if (( false ? undefined : _typeof(exports)) === "object") {
    // CommonJS
    module.exports = exports = factory(__webpack_require__(/*! ./core */ 62), __webpack_require__(/*! ./cipher-core */ 80));
  } else if (true) {
    // AMD
    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! ./core */ 62), __webpack_require__(/*! ./cipher-core */ 80)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  } else {}
})(this, function (CryptoJS) {
  /**
   * Cipher Feedback block mode.
   */
  CryptoJS.mode.CFB = function () {
    var CFB = CryptoJS.lib.BlockCipherMode.extend();
    CFB.Encryptor = CFB.extend({
      processBlock: function processBlock(words, offset) {
        // Shortcuts
        var cipher = this._cipher;
        var blockSize = cipher.blockSize;
        generateKeystreamAndEncrypt.call(this, words, offset, blockSize, cipher);

        // Remember this block to use with next block
        this._prevBlock = words.slice(offset, offset + blockSize);
      }
    });
    CFB.Decryptor = CFB.extend({
      processBlock: function processBlock(words, offset) {
        // Shortcuts
        var cipher = this._cipher;
        var blockSize = cipher.blockSize;

        // Remember this block to use with next block
        var thisBlock = words.slice(offset, offset + blockSize);
        generateKeystreamAndEncrypt.call(this, words, offset, blockSize, cipher);

        // This block becomes the previous block
        this._prevBlock = thisBlock;
      }
    });
    function generateKeystreamAndEncrypt(words, offset, blockSize, cipher) {
      var keystream;

      // Shortcut
      var iv = this._iv;

      // Generate keystream
      if (iv) {
        keystream = iv.slice(0);

        // Remove IV for subsequent blocks
        this._iv = undefined;
      } else {
        keystream = this._prevBlock;
      }
      cipher.encryptBlock(keystream, 0);

      // Encrypt
      for (var i = 0; i < blockSize; i++) {
        words[offset + i] ^= keystream[i];
      }
    }
    return CFB;
  }();
  return CryptoJS.mode.CFB;
});

/***/ }),
/* 82 */
/*!***************************************************************************************!*\
  !*** F:/project/qianduan/zhanhuitong_yudengji_git/node_modules/crypto-js/mode-ctr.js ***!
  \***************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;var _typeof = __webpack_require__(/*! @babel/runtime/helpers/typeof */ 13);
;
(function (root, factory, undef) {
  if (( false ? undefined : _typeof(exports)) === "object") {
    // CommonJS
    module.exports = exports = factory(__webpack_require__(/*! ./core */ 62), __webpack_require__(/*! ./cipher-core */ 80));
  } else if (true) {
    // AMD
    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! ./core */ 62), __webpack_require__(/*! ./cipher-core */ 80)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  } else {}
})(this, function (CryptoJS) {
  /**
   * Counter block mode.
   */
  CryptoJS.mode.CTR = function () {
    var CTR = CryptoJS.lib.BlockCipherMode.extend();
    var Encryptor = CTR.Encryptor = CTR.extend({
      processBlock: function processBlock(words, offset) {
        // Shortcuts
        var cipher = this._cipher;
        var blockSize = cipher.blockSize;
        var iv = this._iv;
        var counter = this._counter;

        // Generate keystream
        if (iv) {
          counter = this._counter = iv.slice(0);

          // Remove IV for subsequent blocks
          this._iv = undefined;
        }
        var keystream = counter.slice(0);
        cipher.encryptBlock(keystream, 0);

        // Increment counter
        counter[blockSize - 1] = counter[blockSize - 1] + 1 | 0;

        // Encrypt
        for (var i = 0; i < blockSize; i++) {
          words[offset + i] ^= keystream[i];
        }
      }
    });
    CTR.Decryptor = Encryptor;
    return CTR;
  }();
  return CryptoJS.mode.CTR;
});

/***/ }),
/* 83 */
/*!***********************************************************************************************!*\
  !*** F:/project/qianduan/zhanhuitong_yudengji_git/node_modules/crypto-js/mode-ctr-gladman.js ***!
  \***********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;var _typeof = __webpack_require__(/*! @babel/runtime/helpers/typeof */ 13);
;
(function (root, factory, undef) {
  if (( false ? undefined : _typeof(exports)) === "object") {
    // CommonJS
    module.exports = exports = factory(__webpack_require__(/*! ./core */ 62), __webpack_require__(/*! ./cipher-core */ 80));
  } else if (true) {
    // AMD
    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! ./core */ 62), __webpack_require__(/*! ./cipher-core */ 80)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  } else {}
})(this, function (CryptoJS) {
  /** @preserve
   * Counter block mode compatible with  Dr Brian Gladman fileenc.c
   * derived from CryptoJS.mode.CTR
   * Jan Hruby jhruby.web@gmail.com
   */
  CryptoJS.mode.CTRGladman = function () {
    var CTRGladman = CryptoJS.lib.BlockCipherMode.extend();
    function incWord(word) {
      if ((word >> 24 & 0xff) === 0xff) {
        //overflow
        var b1 = word >> 16 & 0xff;
        var b2 = word >> 8 & 0xff;
        var b3 = word & 0xff;
        if (b1 === 0xff)
          // overflow b1
          {
            b1 = 0;
            if (b2 === 0xff) {
              b2 = 0;
              if (b3 === 0xff) {
                b3 = 0;
              } else {
                ++b3;
              }
            } else {
              ++b2;
            }
          } else {
          ++b1;
        }
        word = 0;
        word += b1 << 16;
        word += b2 << 8;
        word += b3;
      } else {
        word += 0x01 << 24;
      }
      return word;
    }
    function incCounter(counter) {
      if ((counter[0] = incWord(counter[0])) === 0) {
        // encr_data in fileenc.c from  Dr Brian Gladman's counts only with DWORD j < 8
        counter[1] = incWord(counter[1]);
      }
      return counter;
    }
    var Encryptor = CTRGladman.Encryptor = CTRGladman.extend({
      processBlock: function processBlock(words, offset) {
        // Shortcuts
        var cipher = this._cipher;
        var blockSize = cipher.blockSize;
        var iv = this._iv;
        var counter = this._counter;

        // Generate keystream
        if (iv) {
          counter = this._counter = iv.slice(0);

          // Remove IV for subsequent blocks
          this._iv = undefined;
        }
        incCounter(counter);
        var keystream = counter.slice(0);
        cipher.encryptBlock(keystream, 0);

        // Encrypt
        for (var i = 0; i < blockSize; i++) {
          words[offset + i] ^= keystream[i];
        }
      }
    });
    CTRGladman.Decryptor = Encryptor;
    return CTRGladman;
  }();
  return CryptoJS.mode.CTRGladman;
});

/***/ }),
/* 84 */
/*!***************************************************************************************!*\
  !*** F:/project/qianduan/zhanhuitong_yudengji_git/node_modules/crypto-js/mode-ofb.js ***!
  \***************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;var _typeof = __webpack_require__(/*! @babel/runtime/helpers/typeof */ 13);
;
(function (root, factory, undef) {
  if (( false ? undefined : _typeof(exports)) === "object") {
    // CommonJS
    module.exports = exports = factory(__webpack_require__(/*! ./core */ 62), __webpack_require__(/*! ./cipher-core */ 80));
  } else if (true) {
    // AMD
    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! ./core */ 62), __webpack_require__(/*! ./cipher-core */ 80)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  } else {}
})(this, function (CryptoJS) {
  /**
   * Output Feedback block mode.
   */
  CryptoJS.mode.OFB = function () {
    var OFB = CryptoJS.lib.BlockCipherMode.extend();
    var Encryptor = OFB.Encryptor = OFB.extend({
      processBlock: function processBlock(words, offset) {
        // Shortcuts
        var cipher = this._cipher;
        var blockSize = cipher.blockSize;
        var iv = this._iv;
        var keystream = this._keystream;

        // Generate keystream
        if (iv) {
          keystream = this._keystream = iv.slice(0);

          // Remove IV for subsequent blocks
          this._iv = undefined;
        }
        cipher.encryptBlock(keystream, 0);

        // Encrypt
        for (var i = 0; i < blockSize; i++) {
          words[offset + i] ^= keystream[i];
        }
      }
    });
    OFB.Decryptor = Encryptor;
    return OFB;
  }();
  return CryptoJS.mode.OFB;
});

/***/ }),
/* 85 */
/*!***************************************************************************************!*\
  !*** F:/project/qianduan/zhanhuitong_yudengji_git/node_modules/crypto-js/mode-ecb.js ***!
  \***************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;var _typeof = __webpack_require__(/*! @babel/runtime/helpers/typeof */ 13);
;
(function (root, factory, undef) {
  if (( false ? undefined : _typeof(exports)) === "object") {
    // CommonJS
    module.exports = exports = factory(__webpack_require__(/*! ./core */ 62), __webpack_require__(/*! ./cipher-core */ 80));
  } else if (true) {
    // AMD
    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! ./core */ 62), __webpack_require__(/*! ./cipher-core */ 80)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  } else {}
})(this, function (CryptoJS) {
  /**
   * Electronic Codebook block mode.
   */
  CryptoJS.mode.ECB = function () {
    var ECB = CryptoJS.lib.BlockCipherMode.extend();
    ECB.Encryptor = ECB.extend({
      processBlock: function processBlock(words, offset) {
        this._cipher.encryptBlock(words, offset);
      }
    });
    ECB.Decryptor = ECB.extend({
      processBlock: function processBlock(words, offset) {
        this._cipher.decryptBlock(words, offset);
      }
    });
    return ECB;
  }();
  return CryptoJS.mode.ECB;
});

/***/ }),
/* 86 */
/*!*******************************************************************************************!*\
  !*** F:/project/qianduan/zhanhuitong_yudengji_git/node_modules/crypto-js/pad-ansix923.js ***!
  \*******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;var _typeof = __webpack_require__(/*! @babel/runtime/helpers/typeof */ 13);
;
(function (root, factory, undef) {
  if (( false ? undefined : _typeof(exports)) === "object") {
    // CommonJS
    module.exports = exports = factory(__webpack_require__(/*! ./core */ 62), __webpack_require__(/*! ./cipher-core */ 80));
  } else if (true) {
    // AMD
    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! ./core */ 62), __webpack_require__(/*! ./cipher-core */ 80)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  } else {}
})(this, function (CryptoJS) {
  /**
   * ANSI X.923 padding strategy.
   */
  CryptoJS.pad.AnsiX923 = {
    pad: function pad(data, blockSize) {
      // Shortcuts
      var dataSigBytes = data.sigBytes;
      var blockSizeBytes = blockSize * 4;

      // Count padding bytes
      var nPaddingBytes = blockSizeBytes - dataSigBytes % blockSizeBytes;

      // Compute last byte position
      var lastBytePos = dataSigBytes + nPaddingBytes - 1;

      // Pad
      data.clamp();
      data.words[lastBytePos >>> 2] |= nPaddingBytes << 24 - lastBytePos % 4 * 8;
      data.sigBytes += nPaddingBytes;
    },
    unpad: function unpad(data) {
      // Get number of padding bytes from last byte
      var nPaddingBytes = data.words[data.sigBytes - 1 >>> 2] & 0xff;

      // Remove padding
      data.sigBytes -= nPaddingBytes;
    }
  };
  return CryptoJS.pad.Ansix923;
});

/***/ }),
/* 87 */
/*!*******************************************************************************************!*\
  !*** F:/project/qianduan/zhanhuitong_yudengji_git/node_modules/crypto-js/pad-iso10126.js ***!
  \*******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;var _typeof = __webpack_require__(/*! @babel/runtime/helpers/typeof */ 13);
;
(function (root, factory, undef) {
  if (( false ? undefined : _typeof(exports)) === "object") {
    // CommonJS
    module.exports = exports = factory(__webpack_require__(/*! ./core */ 62), __webpack_require__(/*! ./cipher-core */ 80));
  } else if (true) {
    // AMD
    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! ./core */ 62), __webpack_require__(/*! ./cipher-core */ 80)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  } else {}
})(this, function (CryptoJS) {
  /**
   * ISO 10126 padding strategy.
   */
  CryptoJS.pad.Iso10126 = {
    pad: function pad(data, blockSize) {
      // Shortcut
      var blockSizeBytes = blockSize * 4;

      // Count padding bytes
      var nPaddingBytes = blockSizeBytes - data.sigBytes % blockSizeBytes;

      // Pad
      data.concat(CryptoJS.lib.WordArray.random(nPaddingBytes - 1)).concat(CryptoJS.lib.WordArray.create([nPaddingBytes << 24], 1));
    },
    unpad: function unpad(data) {
      // Get number of padding bytes from last byte
      var nPaddingBytes = data.words[data.sigBytes - 1 >>> 2] & 0xff;

      // Remove padding
      data.sigBytes -= nPaddingBytes;
    }
  };
  return CryptoJS.pad.Iso10126;
});

/***/ }),
/* 88 */
/*!*******************************************************************************************!*\
  !*** F:/project/qianduan/zhanhuitong_yudengji_git/node_modules/crypto-js/pad-iso97971.js ***!
  \*******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;var _typeof = __webpack_require__(/*! @babel/runtime/helpers/typeof */ 13);
;
(function (root, factory, undef) {
  if (( false ? undefined : _typeof(exports)) === "object") {
    // CommonJS
    module.exports = exports = factory(__webpack_require__(/*! ./core */ 62), __webpack_require__(/*! ./cipher-core */ 80));
  } else if (true) {
    // AMD
    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! ./core */ 62), __webpack_require__(/*! ./cipher-core */ 80)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  } else {}
})(this, function (CryptoJS) {
  /**
   * ISO/IEC 9797-1 Padding Method 2.
   */
  CryptoJS.pad.Iso97971 = {
    pad: function pad(data, blockSize) {
      // Add 0x80 byte
      data.concat(CryptoJS.lib.WordArray.create([0x80000000], 1));

      // Zero pad the rest
      CryptoJS.pad.ZeroPadding.pad(data, blockSize);
    },
    unpad: function unpad(data) {
      // Remove zero padding
      CryptoJS.pad.ZeroPadding.unpad(data);

      // Remove one more byte -- the 0x80 byte
      data.sigBytes--;
    }
  };
  return CryptoJS.pad.Iso97971;
});

/***/ }),
/* 89 */
/*!**********************************************************************************************!*\
  !*** F:/project/qianduan/zhanhuitong_yudengji_git/node_modules/crypto-js/pad-zeropadding.js ***!
  \**********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;var _typeof = __webpack_require__(/*! @babel/runtime/helpers/typeof */ 13);
;
(function (root, factory, undef) {
  if (( false ? undefined : _typeof(exports)) === "object") {
    // CommonJS
    module.exports = exports = factory(__webpack_require__(/*! ./core */ 62), __webpack_require__(/*! ./cipher-core */ 80));
  } else if (true) {
    // AMD
    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! ./core */ 62), __webpack_require__(/*! ./cipher-core */ 80)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  } else {}
})(this, function (CryptoJS) {
  /**
   * Zero padding strategy.
   */
  CryptoJS.pad.ZeroPadding = {
    pad: function pad(data, blockSize) {
      // Shortcut
      var blockSizeBytes = blockSize * 4;

      // Pad
      data.clamp();
      data.sigBytes += blockSizeBytes - (data.sigBytes % blockSizeBytes || blockSizeBytes);
    },
    unpad: function unpad(data) {
      // Shortcut
      var dataWords = data.words;

      // Unpad
      var i = data.sigBytes - 1;
      for (var i = data.sigBytes - 1; i >= 0; i--) {
        if (dataWords[i >>> 2] >>> 24 - i % 4 * 8 & 0xff) {
          data.sigBytes = i + 1;
          break;
        }
      }
    }
  };
  return CryptoJS.pad.ZeroPadding;
});

/***/ }),
/* 90 */
/*!********************************************************************************************!*\
  !*** F:/project/qianduan/zhanhuitong_yudengji_git/node_modules/crypto-js/pad-nopadding.js ***!
  \********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;var _typeof = __webpack_require__(/*! @babel/runtime/helpers/typeof */ 13);
;
(function (root, factory, undef) {
  if (( false ? undefined : _typeof(exports)) === "object") {
    // CommonJS
    module.exports = exports = factory(__webpack_require__(/*! ./core */ 62), __webpack_require__(/*! ./cipher-core */ 80));
  } else if (true) {
    // AMD
    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! ./core */ 62), __webpack_require__(/*! ./cipher-core */ 80)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  } else {}
})(this, function (CryptoJS) {
  /**
   * A noop padding strategy.
   */
  CryptoJS.pad.NoPadding = {
    pad: function pad() {},
    unpad: function unpad() {}
  };
  return CryptoJS.pad.NoPadding;
});

/***/ }),
/* 91 */
/*!*****************************************************************************************!*\
  !*** F:/project/qianduan/zhanhuitong_yudengji_git/node_modules/crypto-js/format-hex.js ***!
  \*****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;var _typeof = __webpack_require__(/*! @babel/runtime/helpers/typeof */ 13);
;
(function (root, factory, undef) {
  if (( false ? undefined : _typeof(exports)) === "object") {
    // CommonJS
    module.exports = exports = factory(__webpack_require__(/*! ./core */ 62), __webpack_require__(/*! ./cipher-core */ 80));
  } else if (true) {
    // AMD
    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! ./core */ 62), __webpack_require__(/*! ./cipher-core */ 80)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  } else {}
})(this, function (CryptoJS) {
  (function (undefined) {
    // Shortcuts
    var C = CryptoJS;
    var C_lib = C.lib;
    var CipherParams = C_lib.CipherParams;
    var C_enc = C.enc;
    var Hex = C_enc.Hex;
    var C_format = C.format;
    var HexFormatter = C_format.Hex = {
      /**
       * Converts the ciphertext of a cipher params object to a hexadecimally encoded string.
       *
       * @param {CipherParams} cipherParams The cipher params object.
       *
       * @return {string} The hexadecimally encoded string.
       *
       * @static
       *
       * @example
       *
       *     var hexString = CryptoJS.format.Hex.stringify(cipherParams);
       */
      stringify: function stringify(cipherParams) {
        return cipherParams.ciphertext.toString(Hex);
      },
      /**
       * Converts a hexadecimally encoded ciphertext string to a cipher params object.
       *
       * @param {string} input The hexadecimally encoded string.
       *
       * @return {CipherParams} The cipher params object.
       *
       * @static
       *
       * @example
       *
       *     var cipherParams = CryptoJS.format.Hex.parse(hexString);
       */
      parse: function parse(input) {
        var ciphertext = Hex.parse(input);
        return CipherParams.create({
          ciphertext: ciphertext
        });
      }
    };
  })();
  return CryptoJS.format.Hex;
});

/***/ }),
/* 92 */
/*!**********************************************************************************!*\
  !*** F:/project/qianduan/zhanhuitong_yudengji_git/node_modules/crypto-js/aes.js ***!
  \**********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;var _typeof = __webpack_require__(/*! @babel/runtime/helpers/typeof */ 13);
;
(function (root, factory, undef) {
  if (( false ? undefined : _typeof(exports)) === "object") {
    // CommonJS
    module.exports = exports = factory(__webpack_require__(/*! ./core */ 62), __webpack_require__(/*! ./enc-base64 */ 67), __webpack_require__(/*! ./md5 */ 69), __webpack_require__(/*! ./evpkdf */ 79), __webpack_require__(/*! ./cipher-core */ 80));
  } else if (true) {
    // AMD
    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! ./core */ 62), __webpack_require__(/*! ./enc-base64 */ 67), __webpack_require__(/*! ./md5 */ 69), __webpack_require__(/*! ./evpkdf */ 79), __webpack_require__(/*! ./cipher-core */ 80)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  } else {}
})(this, function (CryptoJS) {
  (function () {
    // Shortcuts
    var C = CryptoJS;
    var C_lib = C.lib;
    var BlockCipher = C_lib.BlockCipher;
    var C_algo = C.algo;

    // Lookup tables
    var SBOX = [];
    var INV_SBOX = [];
    var SUB_MIX_0 = [];
    var SUB_MIX_1 = [];
    var SUB_MIX_2 = [];
    var SUB_MIX_3 = [];
    var INV_SUB_MIX_0 = [];
    var INV_SUB_MIX_1 = [];
    var INV_SUB_MIX_2 = [];
    var INV_SUB_MIX_3 = [];

    // Compute lookup tables
    (function () {
      // Compute double table
      var d = [];
      for (var i = 0; i < 256; i++) {
        if (i < 128) {
          d[i] = i << 1;
        } else {
          d[i] = i << 1 ^ 0x11b;
        }
      }

      // Walk GF(2^8)
      var x = 0;
      var xi = 0;
      for (var i = 0; i < 256; i++) {
        // Compute sbox
        var sx = xi ^ xi << 1 ^ xi << 2 ^ xi << 3 ^ xi << 4;
        sx = sx >>> 8 ^ sx & 0xff ^ 0x63;
        SBOX[x] = sx;
        INV_SBOX[sx] = x;

        // Compute multiplication
        var x2 = d[x];
        var x4 = d[x2];
        var x8 = d[x4];

        // Compute sub bytes, mix columns tables
        var t = d[sx] * 0x101 ^ sx * 0x1010100;
        SUB_MIX_0[x] = t << 24 | t >>> 8;
        SUB_MIX_1[x] = t << 16 | t >>> 16;
        SUB_MIX_2[x] = t << 8 | t >>> 24;
        SUB_MIX_3[x] = t;

        // Compute inv sub bytes, inv mix columns tables
        var t = x8 * 0x1010101 ^ x4 * 0x10001 ^ x2 * 0x101 ^ x * 0x1010100;
        INV_SUB_MIX_0[sx] = t << 24 | t >>> 8;
        INV_SUB_MIX_1[sx] = t << 16 | t >>> 16;
        INV_SUB_MIX_2[sx] = t << 8 | t >>> 24;
        INV_SUB_MIX_3[sx] = t;

        // Compute next counter
        if (!x) {
          x = xi = 1;
        } else {
          x = x2 ^ d[d[d[x8 ^ x2]]];
          xi ^= d[d[xi]];
        }
      }
    })();

    // Precomputed Rcon lookup
    var RCON = [0x00, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36];

    /**
     * AES block cipher algorithm.
     */
    var AES = C_algo.AES = BlockCipher.extend({
      _doReset: function _doReset() {
        var t;

        // Skip reset of nRounds has been set before and key did not change
        if (this._nRounds && this._keyPriorReset === this._key) {
          return;
        }

        // Shortcuts
        var key = this._keyPriorReset = this._key;
        var keyWords = key.words;
        var keySize = key.sigBytes / 4;

        // Compute number of rounds
        var nRounds = this._nRounds = keySize + 6;

        // Compute number of key schedule rows
        var ksRows = (nRounds + 1) * 4;

        // Compute key schedule
        var keySchedule = this._keySchedule = [];
        for (var ksRow = 0; ksRow < ksRows; ksRow++) {
          if (ksRow < keySize) {
            keySchedule[ksRow] = keyWords[ksRow];
          } else {
            t = keySchedule[ksRow - 1];
            if (!(ksRow % keySize)) {
              // Rot word
              t = t << 8 | t >>> 24;

              // Sub word
              t = SBOX[t >>> 24] << 24 | SBOX[t >>> 16 & 0xff] << 16 | SBOX[t >>> 8 & 0xff] << 8 | SBOX[t & 0xff];

              // Mix Rcon
              t ^= RCON[ksRow / keySize | 0] << 24;
            } else if (keySize > 6 && ksRow % keySize == 4) {
              // Sub word
              t = SBOX[t >>> 24] << 24 | SBOX[t >>> 16 & 0xff] << 16 | SBOX[t >>> 8 & 0xff] << 8 | SBOX[t & 0xff];
            }
            keySchedule[ksRow] = keySchedule[ksRow - keySize] ^ t;
          }
        }

        // Compute inv key schedule
        var invKeySchedule = this._invKeySchedule = [];
        for (var invKsRow = 0; invKsRow < ksRows; invKsRow++) {
          var ksRow = ksRows - invKsRow;
          if (invKsRow % 4) {
            var t = keySchedule[ksRow];
          } else {
            var t = keySchedule[ksRow - 4];
          }
          if (invKsRow < 4 || ksRow <= 4) {
            invKeySchedule[invKsRow] = t;
          } else {
            invKeySchedule[invKsRow] = INV_SUB_MIX_0[SBOX[t >>> 24]] ^ INV_SUB_MIX_1[SBOX[t >>> 16 & 0xff]] ^ INV_SUB_MIX_2[SBOX[t >>> 8 & 0xff]] ^ INV_SUB_MIX_3[SBOX[t & 0xff]];
          }
        }
      },
      encryptBlock: function encryptBlock(M, offset) {
        this._doCryptBlock(M, offset, this._keySchedule, SUB_MIX_0, SUB_MIX_1, SUB_MIX_2, SUB_MIX_3, SBOX);
      },
      decryptBlock: function decryptBlock(M, offset) {
        // Swap 2nd and 4th rows
        var t = M[offset + 1];
        M[offset + 1] = M[offset + 3];
        M[offset + 3] = t;
        this._doCryptBlock(M, offset, this._invKeySchedule, INV_SUB_MIX_0, INV_SUB_MIX_1, INV_SUB_MIX_2, INV_SUB_MIX_3, INV_SBOX);

        // Inv swap 2nd and 4th rows
        var t = M[offset + 1];
        M[offset + 1] = M[offset + 3];
        M[offset + 3] = t;
      },
      _doCryptBlock: function _doCryptBlock(M, offset, keySchedule, SUB_MIX_0, SUB_MIX_1, SUB_MIX_2, SUB_MIX_3, SBOX) {
        // Shortcut
        var nRounds = this._nRounds;

        // Get input, add round key
        var s0 = M[offset] ^ keySchedule[0];
        var s1 = M[offset + 1] ^ keySchedule[1];
        var s2 = M[offset + 2] ^ keySchedule[2];
        var s3 = M[offset + 3] ^ keySchedule[3];

        // Key schedule row counter
        var ksRow = 4;

        // Rounds
        for (var round = 1; round < nRounds; round++) {
          // Shift rows, sub bytes, mix columns, add round key
          var t0 = SUB_MIX_0[s0 >>> 24] ^ SUB_MIX_1[s1 >>> 16 & 0xff] ^ SUB_MIX_2[s2 >>> 8 & 0xff] ^ SUB_MIX_3[s3 & 0xff] ^ keySchedule[ksRow++];
          var t1 = SUB_MIX_0[s1 >>> 24] ^ SUB_MIX_1[s2 >>> 16 & 0xff] ^ SUB_MIX_2[s3 >>> 8 & 0xff] ^ SUB_MIX_3[s0 & 0xff] ^ keySchedule[ksRow++];
          var t2 = SUB_MIX_0[s2 >>> 24] ^ SUB_MIX_1[s3 >>> 16 & 0xff] ^ SUB_MIX_2[s0 >>> 8 & 0xff] ^ SUB_MIX_3[s1 & 0xff] ^ keySchedule[ksRow++];
          var t3 = SUB_MIX_0[s3 >>> 24] ^ SUB_MIX_1[s0 >>> 16 & 0xff] ^ SUB_MIX_2[s1 >>> 8 & 0xff] ^ SUB_MIX_3[s2 & 0xff] ^ keySchedule[ksRow++];

          // Update state
          s0 = t0;
          s1 = t1;
          s2 = t2;
          s3 = t3;
        }

        // Shift rows, sub bytes, add round key
        var t0 = (SBOX[s0 >>> 24] << 24 | SBOX[s1 >>> 16 & 0xff] << 16 | SBOX[s2 >>> 8 & 0xff] << 8 | SBOX[s3 & 0xff]) ^ keySchedule[ksRow++];
        var t1 = (SBOX[s1 >>> 24] << 24 | SBOX[s2 >>> 16 & 0xff] << 16 | SBOX[s3 >>> 8 & 0xff] << 8 | SBOX[s0 & 0xff]) ^ keySchedule[ksRow++];
        var t2 = (SBOX[s2 >>> 24] << 24 | SBOX[s3 >>> 16 & 0xff] << 16 | SBOX[s0 >>> 8 & 0xff] << 8 | SBOX[s1 & 0xff]) ^ keySchedule[ksRow++];
        var t3 = (SBOX[s3 >>> 24] << 24 | SBOX[s0 >>> 16 & 0xff] << 16 | SBOX[s1 >>> 8 & 0xff] << 8 | SBOX[s2 & 0xff]) ^ keySchedule[ksRow++];

        // Set output
        M[offset] = t0;
        M[offset + 1] = t1;
        M[offset + 2] = t2;
        M[offset + 3] = t3;
      },
      keySize: 256 / 32
    });

    /**
     * Shortcut functions to the cipher's object interface.
     *
     * @example
     *
     *     var ciphertext = CryptoJS.AES.encrypt(message, key, cfg);
     *     var plaintext  = CryptoJS.AES.decrypt(ciphertext, key, cfg);
     */
    C.AES = BlockCipher._createHelper(AES);
  })();
  return CryptoJS.AES;
});

/***/ }),
/* 93 */
/*!****************************************************************************************!*\
  !*** F:/project/qianduan/zhanhuitong_yudengji_git/node_modules/crypto-js/tripledes.js ***!
  \****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;var _typeof = __webpack_require__(/*! @babel/runtime/helpers/typeof */ 13);
;
(function (root, factory, undef) {
  if (( false ? undefined : _typeof(exports)) === "object") {
    // CommonJS
    module.exports = exports = factory(__webpack_require__(/*! ./core */ 62), __webpack_require__(/*! ./enc-base64 */ 67), __webpack_require__(/*! ./md5 */ 69), __webpack_require__(/*! ./evpkdf */ 79), __webpack_require__(/*! ./cipher-core */ 80));
  } else if (true) {
    // AMD
    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! ./core */ 62), __webpack_require__(/*! ./enc-base64 */ 67), __webpack_require__(/*! ./md5 */ 69), __webpack_require__(/*! ./evpkdf */ 79), __webpack_require__(/*! ./cipher-core */ 80)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  } else {}
})(this, function (CryptoJS) {
  (function () {
    // Shortcuts
    var C = CryptoJS;
    var C_lib = C.lib;
    var WordArray = C_lib.WordArray;
    var BlockCipher = C_lib.BlockCipher;
    var C_algo = C.algo;

    // Permuted Choice 1 constants
    var PC1 = [57, 49, 41, 33, 25, 17, 9, 1, 58, 50, 42, 34, 26, 18, 10, 2, 59, 51, 43, 35, 27, 19, 11, 3, 60, 52, 44, 36, 63, 55, 47, 39, 31, 23, 15, 7, 62, 54, 46, 38, 30, 22, 14, 6, 61, 53, 45, 37, 29, 21, 13, 5, 28, 20, 12, 4];

    // Permuted Choice 2 constants
    var PC2 = [14, 17, 11, 24, 1, 5, 3, 28, 15, 6, 21, 10, 23, 19, 12, 4, 26, 8, 16, 7, 27, 20, 13, 2, 41, 52, 31, 37, 47, 55, 30, 40, 51, 45, 33, 48, 44, 49, 39, 56, 34, 53, 46, 42, 50, 36, 29, 32];

    // Cumulative bit shift constants
    var BIT_SHIFTS = [1, 2, 4, 6, 8, 10, 12, 14, 15, 17, 19, 21, 23, 25, 27, 28];

    // SBOXes and round permutation constants
    var SBOX_P = [{
      0x0: 0x808200,
      0x10000000: 0x8000,
      0x20000000: 0x808002,
      0x30000000: 0x2,
      0x40000000: 0x200,
      0x50000000: 0x808202,
      0x60000000: 0x800202,
      0x70000000: 0x800000,
      0x80000000: 0x202,
      0x90000000: 0x800200,
      0xa0000000: 0x8200,
      0xb0000000: 0x808000,
      0xc0000000: 0x8002,
      0xd0000000: 0x800002,
      0xe0000000: 0x0,
      0xf0000000: 0x8202,
      0x8000000: 0x0,
      0x18000000: 0x808202,
      0x28000000: 0x8202,
      0x38000000: 0x8000,
      0x48000000: 0x808200,
      0x58000000: 0x200,
      0x68000000: 0x808002,
      0x78000000: 0x2,
      0x88000000: 0x800200,
      0x98000000: 0x8200,
      0xa8000000: 0x808000,
      0xb8000000: 0x800202,
      0xc8000000: 0x800002,
      0xd8000000: 0x8002,
      0xe8000000: 0x202,
      0xf8000000: 0x800000,
      0x1: 0x8000,
      0x10000001: 0x2,
      0x20000001: 0x808200,
      0x30000001: 0x800000,
      0x40000001: 0x808002,
      0x50000001: 0x8200,
      0x60000001: 0x200,
      0x70000001: 0x800202,
      0x80000001: 0x808202,
      0x90000001: 0x808000,
      0xa0000001: 0x800002,
      0xb0000001: 0x8202,
      0xc0000001: 0x202,
      0xd0000001: 0x800200,
      0xe0000001: 0x8002,
      0xf0000001: 0x0,
      0x8000001: 0x808202,
      0x18000001: 0x808000,
      0x28000001: 0x800000,
      0x38000001: 0x200,
      0x48000001: 0x8000,
      0x58000001: 0x800002,
      0x68000001: 0x2,
      0x78000001: 0x8202,
      0x88000001: 0x8002,
      0x98000001: 0x800202,
      0xa8000001: 0x202,
      0xb8000001: 0x808200,
      0xc8000001: 0x800200,
      0xd8000001: 0x0,
      0xe8000001: 0x8200,
      0xf8000001: 0x808002
    }, {
      0x0: 0x40084010,
      0x1000000: 0x4000,
      0x2000000: 0x80000,
      0x3000000: 0x40080010,
      0x4000000: 0x40000010,
      0x5000000: 0x40084000,
      0x6000000: 0x40004000,
      0x7000000: 0x10,
      0x8000000: 0x84000,
      0x9000000: 0x40004010,
      0xa000000: 0x40000000,
      0xb000000: 0x84010,
      0xc000000: 0x80010,
      0xd000000: 0x0,
      0xe000000: 0x4010,
      0xf000000: 0x40080000,
      0x800000: 0x40004000,
      0x1800000: 0x84010,
      0x2800000: 0x10,
      0x3800000: 0x40004010,
      0x4800000: 0x40084010,
      0x5800000: 0x40000000,
      0x6800000: 0x80000,
      0x7800000: 0x40080010,
      0x8800000: 0x80010,
      0x9800000: 0x0,
      0xa800000: 0x4000,
      0xb800000: 0x40080000,
      0xc800000: 0x40000010,
      0xd800000: 0x84000,
      0xe800000: 0x40084000,
      0xf800000: 0x4010,
      0x10000000: 0x0,
      0x11000000: 0x40080010,
      0x12000000: 0x40004010,
      0x13000000: 0x40084000,
      0x14000000: 0x40080000,
      0x15000000: 0x10,
      0x16000000: 0x84010,
      0x17000000: 0x4000,
      0x18000000: 0x4010,
      0x19000000: 0x80000,
      0x1a000000: 0x80010,
      0x1b000000: 0x40000010,
      0x1c000000: 0x84000,
      0x1d000000: 0x40004000,
      0x1e000000: 0x40000000,
      0x1f000000: 0x40084010,
      0x10800000: 0x84010,
      0x11800000: 0x80000,
      0x12800000: 0x40080000,
      0x13800000: 0x4000,
      0x14800000: 0x40004000,
      0x15800000: 0x40084010,
      0x16800000: 0x10,
      0x17800000: 0x40000000,
      0x18800000: 0x40084000,
      0x19800000: 0x40000010,
      0x1a800000: 0x40004010,
      0x1b800000: 0x80010,
      0x1c800000: 0x0,
      0x1d800000: 0x4010,
      0x1e800000: 0x40080010,
      0x1f800000: 0x84000
    }, {
      0x0: 0x104,
      0x100000: 0x0,
      0x200000: 0x4000100,
      0x300000: 0x10104,
      0x400000: 0x10004,
      0x500000: 0x4000004,
      0x600000: 0x4010104,
      0x700000: 0x4010000,
      0x800000: 0x4000000,
      0x900000: 0x4010100,
      0xa00000: 0x10100,
      0xb00000: 0x4010004,
      0xc00000: 0x4000104,
      0xd00000: 0x10000,
      0xe00000: 0x4,
      0xf00000: 0x100,
      0x80000: 0x4010100,
      0x180000: 0x4010004,
      0x280000: 0x0,
      0x380000: 0x4000100,
      0x480000: 0x4000004,
      0x580000: 0x10000,
      0x680000: 0x10004,
      0x780000: 0x104,
      0x880000: 0x4,
      0x980000: 0x100,
      0xa80000: 0x4010000,
      0xb80000: 0x10104,
      0xc80000: 0x10100,
      0xd80000: 0x4000104,
      0xe80000: 0x4010104,
      0xf80000: 0x4000000,
      0x1000000: 0x4010100,
      0x1100000: 0x10004,
      0x1200000: 0x10000,
      0x1300000: 0x4000100,
      0x1400000: 0x100,
      0x1500000: 0x4010104,
      0x1600000: 0x4000004,
      0x1700000: 0x0,
      0x1800000: 0x4000104,
      0x1900000: 0x4000000,
      0x1a00000: 0x4,
      0x1b00000: 0x10100,
      0x1c00000: 0x4010000,
      0x1d00000: 0x104,
      0x1e00000: 0x10104,
      0x1f00000: 0x4010004,
      0x1080000: 0x4000000,
      0x1180000: 0x104,
      0x1280000: 0x4010100,
      0x1380000: 0x0,
      0x1480000: 0x10004,
      0x1580000: 0x4000100,
      0x1680000: 0x100,
      0x1780000: 0x4010004,
      0x1880000: 0x10000,
      0x1980000: 0x4010104,
      0x1a80000: 0x10104,
      0x1b80000: 0x4000004,
      0x1c80000: 0x4000104,
      0x1d80000: 0x4010000,
      0x1e80000: 0x4,
      0x1f80000: 0x10100
    }, {
      0x0: 0x80401000,
      0x10000: 0x80001040,
      0x20000: 0x401040,
      0x30000: 0x80400000,
      0x40000: 0x0,
      0x50000: 0x401000,
      0x60000: 0x80000040,
      0x70000: 0x400040,
      0x80000: 0x80000000,
      0x90000: 0x400000,
      0xa0000: 0x40,
      0xb0000: 0x80001000,
      0xc0000: 0x80400040,
      0xd0000: 0x1040,
      0xe0000: 0x1000,
      0xf0000: 0x80401040,
      0x8000: 0x80001040,
      0x18000: 0x40,
      0x28000: 0x80400040,
      0x38000: 0x80001000,
      0x48000: 0x401000,
      0x58000: 0x80401040,
      0x68000: 0x0,
      0x78000: 0x80400000,
      0x88000: 0x1000,
      0x98000: 0x80401000,
      0xa8000: 0x400000,
      0xb8000: 0x1040,
      0xc8000: 0x80000000,
      0xd8000: 0x400040,
      0xe8000: 0x401040,
      0xf8000: 0x80000040,
      0x100000: 0x400040,
      0x110000: 0x401000,
      0x120000: 0x80000040,
      0x130000: 0x0,
      0x140000: 0x1040,
      0x150000: 0x80400040,
      0x160000: 0x80401000,
      0x170000: 0x80001040,
      0x180000: 0x80401040,
      0x190000: 0x80000000,
      0x1a0000: 0x80400000,
      0x1b0000: 0x401040,
      0x1c0000: 0x80001000,
      0x1d0000: 0x400000,
      0x1e0000: 0x40,
      0x1f0000: 0x1000,
      0x108000: 0x80400000,
      0x118000: 0x80401040,
      0x128000: 0x0,
      0x138000: 0x401000,
      0x148000: 0x400040,
      0x158000: 0x80000000,
      0x168000: 0x80001040,
      0x178000: 0x40,
      0x188000: 0x80000040,
      0x198000: 0x1000,
      0x1a8000: 0x80001000,
      0x1b8000: 0x80400040,
      0x1c8000: 0x1040,
      0x1d8000: 0x80401000,
      0x1e8000: 0x400000,
      0x1f8000: 0x401040
    }, {
      0x0: 0x80,
      0x1000: 0x1040000,
      0x2000: 0x40000,
      0x3000: 0x20000000,
      0x4000: 0x20040080,
      0x5000: 0x1000080,
      0x6000: 0x21000080,
      0x7000: 0x40080,
      0x8000: 0x1000000,
      0x9000: 0x20040000,
      0xa000: 0x20000080,
      0xb000: 0x21040080,
      0xc000: 0x21040000,
      0xd000: 0x0,
      0xe000: 0x1040080,
      0xf000: 0x21000000,
      0x800: 0x1040080,
      0x1800: 0x21000080,
      0x2800: 0x80,
      0x3800: 0x1040000,
      0x4800: 0x40000,
      0x5800: 0x20040080,
      0x6800: 0x21040000,
      0x7800: 0x20000000,
      0x8800: 0x20040000,
      0x9800: 0x0,
      0xa800: 0x21040080,
      0xb800: 0x1000080,
      0xc800: 0x20000080,
      0xd800: 0x21000000,
      0xe800: 0x1000000,
      0xf800: 0x40080,
      0x10000: 0x40000,
      0x11000: 0x80,
      0x12000: 0x20000000,
      0x13000: 0x21000080,
      0x14000: 0x1000080,
      0x15000: 0x21040000,
      0x16000: 0x20040080,
      0x17000: 0x1000000,
      0x18000: 0x21040080,
      0x19000: 0x21000000,
      0x1a000: 0x1040000,
      0x1b000: 0x20040000,
      0x1c000: 0x40080,
      0x1d000: 0x20000080,
      0x1e000: 0x0,
      0x1f000: 0x1040080,
      0x10800: 0x21000080,
      0x11800: 0x1000000,
      0x12800: 0x1040000,
      0x13800: 0x20040080,
      0x14800: 0x20000000,
      0x15800: 0x1040080,
      0x16800: 0x80,
      0x17800: 0x21040000,
      0x18800: 0x40080,
      0x19800: 0x21040080,
      0x1a800: 0x0,
      0x1b800: 0x21000000,
      0x1c800: 0x1000080,
      0x1d800: 0x40000,
      0x1e800: 0x20040000,
      0x1f800: 0x20000080
    }, {
      0x0: 0x10000008,
      0x100: 0x2000,
      0x200: 0x10200000,
      0x300: 0x10202008,
      0x400: 0x10002000,
      0x500: 0x200000,
      0x600: 0x200008,
      0x700: 0x10000000,
      0x800: 0x0,
      0x900: 0x10002008,
      0xa00: 0x202000,
      0xb00: 0x8,
      0xc00: 0x10200008,
      0xd00: 0x202008,
      0xe00: 0x2008,
      0xf00: 0x10202000,
      0x80: 0x10200000,
      0x180: 0x10202008,
      0x280: 0x8,
      0x380: 0x200000,
      0x480: 0x202008,
      0x580: 0x10000008,
      0x680: 0x10002000,
      0x780: 0x2008,
      0x880: 0x200008,
      0x980: 0x2000,
      0xa80: 0x10002008,
      0xb80: 0x10200008,
      0xc80: 0x0,
      0xd80: 0x10202000,
      0xe80: 0x202000,
      0xf80: 0x10000000,
      0x1000: 0x10002000,
      0x1100: 0x10200008,
      0x1200: 0x10202008,
      0x1300: 0x2008,
      0x1400: 0x200000,
      0x1500: 0x10000000,
      0x1600: 0x10000008,
      0x1700: 0x202000,
      0x1800: 0x202008,
      0x1900: 0x0,
      0x1a00: 0x8,
      0x1b00: 0x10200000,
      0x1c00: 0x2000,
      0x1d00: 0x10002008,
      0x1e00: 0x10202000,
      0x1f00: 0x200008,
      0x1080: 0x8,
      0x1180: 0x202000,
      0x1280: 0x200000,
      0x1380: 0x10000008,
      0x1480: 0x10002000,
      0x1580: 0x2008,
      0x1680: 0x10202008,
      0x1780: 0x10200000,
      0x1880: 0x10202000,
      0x1980: 0x10200008,
      0x1a80: 0x2000,
      0x1b80: 0x202008,
      0x1c80: 0x200008,
      0x1d80: 0x0,
      0x1e80: 0x10000000,
      0x1f80: 0x10002008
    }, {
      0x0: 0x100000,
      0x10: 0x2000401,
      0x20: 0x400,
      0x30: 0x100401,
      0x40: 0x2100401,
      0x50: 0x0,
      0x60: 0x1,
      0x70: 0x2100001,
      0x80: 0x2000400,
      0x90: 0x100001,
      0xa0: 0x2000001,
      0xb0: 0x2100400,
      0xc0: 0x2100000,
      0xd0: 0x401,
      0xe0: 0x100400,
      0xf0: 0x2000000,
      0x8: 0x2100001,
      0x18: 0x0,
      0x28: 0x2000401,
      0x38: 0x2100400,
      0x48: 0x100000,
      0x58: 0x2000001,
      0x68: 0x2000000,
      0x78: 0x401,
      0x88: 0x100401,
      0x98: 0x2000400,
      0xa8: 0x2100000,
      0xb8: 0x100001,
      0xc8: 0x400,
      0xd8: 0x2100401,
      0xe8: 0x1,
      0xf8: 0x100400,
      0x100: 0x2000000,
      0x110: 0x100000,
      0x120: 0x2000401,
      0x130: 0x2100001,
      0x140: 0x100001,
      0x150: 0x2000400,
      0x160: 0x2100400,
      0x170: 0x100401,
      0x180: 0x401,
      0x190: 0x2100401,
      0x1a0: 0x100400,
      0x1b0: 0x1,
      0x1c0: 0x0,
      0x1d0: 0x2100000,
      0x1e0: 0x2000001,
      0x1f0: 0x400,
      0x108: 0x100400,
      0x118: 0x2000401,
      0x128: 0x2100001,
      0x138: 0x1,
      0x148: 0x2000000,
      0x158: 0x100000,
      0x168: 0x401,
      0x178: 0x2100400,
      0x188: 0x2000001,
      0x198: 0x2100000,
      0x1a8: 0x0,
      0x1b8: 0x2100401,
      0x1c8: 0x100401,
      0x1d8: 0x400,
      0x1e8: 0x2000400,
      0x1f8: 0x100001
    }, {
      0x0: 0x8000820,
      0x1: 0x20000,
      0x2: 0x8000000,
      0x3: 0x20,
      0x4: 0x20020,
      0x5: 0x8020820,
      0x6: 0x8020800,
      0x7: 0x800,
      0x8: 0x8020000,
      0x9: 0x8000800,
      0xa: 0x20800,
      0xb: 0x8020020,
      0xc: 0x820,
      0xd: 0x0,
      0xe: 0x8000020,
      0xf: 0x20820,
      0x80000000: 0x800,
      0x80000001: 0x8020820,
      0x80000002: 0x8000820,
      0x80000003: 0x8000000,
      0x80000004: 0x8020000,
      0x80000005: 0x20800,
      0x80000006: 0x20820,
      0x80000007: 0x20,
      0x80000008: 0x8000020,
      0x80000009: 0x820,
      0x8000000a: 0x20020,
      0x8000000b: 0x8020800,
      0x8000000c: 0x0,
      0x8000000d: 0x8020020,
      0x8000000e: 0x8000800,
      0x8000000f: 0x20000,
      0x10: 0x20820,
      0x11: 0x8020800,
      0x12: 0x20,
      0x13: 0x800,
      0x14: 0x8000800,
      0x15: 0x8000020,
      0x16: 0x8020020,
      0x17: 0x20000,
      0x18: 0x0,
      0x19: 0x20020,
      0x1a: 0x8020000,
      0x1b: 0x8000820,
      0x1c: 0x8020820,
      0x1d: 0x20800,
      0x1e: 0x820,
      0x1f: 0x8000000,
      0x80000010: 0x20000,
      0x80000011: 0x800,
      0x80000012: 0x8020020,
      0x80000013: 0x20820,
      0x80000014: 0x20,
      0x80000015: 0x8020000,
      0x80000016: 0x8000000,
      0x80000017: 0x8000820,
      0x80000018: 0x8020820,
      0x80000019: 0x8000020,
      0x8000001a: 0x8000800,
      0x8000001b: 0x0,
      0x8000001c: 0x20800,
      0x8000001d: 0x820,
      0x8000001e: 0x20020,
      0x8000001f: 0x8020800
    }];

    // Masks that select the SBOX input
    var SBOX_MASK = [0xf8000001, 0x1f800000, 0x01f80000, 0x001f8000, 0x0001f800, 0x00001f80, 0x000001f8, 0x8000001f];

    /**
     * DES block cipher algorithm.
     */
    var DES = C_algo.DES = BlockCipher.extend({
      _doReset: function _doReset() {
        // Shortcuts
        var key = this._key;
        var keyWords = key.words;

        // Select 56 bits according to PC1
        var keyBits = [];
        for (var i = 0; i < 56; i++) {
          var keyBitPos = PC1[i] - 1;
          keyBits[i] = keyWords[keyBitPos >>> 5] >>> 31 - keyBitPos % 32 & 1;
        }

        // Assemble 16 subkeys
        var subKeys = this._subKeys = [];
        for (var nSubKey = 0; nSubKey < 16; nSubKey++) {
          // Create subkey
          var subKey = subKeys[nSubKey] = [];

          // Shortcut
          var bitShift = BIT_SHIFTS[nSubKey];

          // Select 48 bits according to PC2
          for (var i = 0; i < 24; i++) {
            // Select from the left 28 key bits
            subKey[i / 6 | 0] |= keyBits[(PC2[i] - 1 + bitShift) % 28] << 31 - i % 6;

            // Select from the right 28 key bits
            subKey[4 + (i / 6 | 0)] |= keyBits[28 + (PC2[i + 24] - 1 + bitShift) % 28] << 31 - i % 6;
          }

          // Since each subkey is applied to an expanded 32-bit input,
          // the subkey can be broken into 8 values scaled to 32-bits,
          // which allows the key to be used without expansion
          subKey[0] = subKey[0] << 1 | subKey[0] >>> 31;
          for (var i = 1; i < 7; i++) {
            subKey[i] = subKey[i] >>> (i - 1) * 4 + 3;
          }
          subKey[7] = subKey[7] << 5 | subKey[7] >>> 27;
        }

        // Compute inverse subkeys
        var invSubKeys = this._invSubKeys = [];
        for (var i = 0; i < 16; i++) {
          invSubKeys[i] = subKeys[15 - i];
        }
      },
      encryptBlock: function encryptBlock(M, offset) {
        this._doCryptBlock(M, offset, this._subKeys);
      },
      decryptBlock: function decryptBlock(M, offset) {
        this._doCryptBlock(M, offset, this._invSubKeys);
      },
      _doCryptBlock: function _doCryptBlock(M, offset, subKeys) {
        // Get input
        this._lBlock = M[offset];
        this._rBlock = M[offset + 1];

        // Initial permutation
        exchangeLR.call(this, 4, 0x0f0f0f0f);
        exchangeLR.call(this, 16, 0x0000ffff);
        exchangeRL.call(this, 2, 0x33333333);
        exchangeRL.call(this, 8, 0x00ff00ff);
        exchangeLR.call(this, 1, 0x55555555);

        // Rounds
        for (var round = 0; round < 16; round++) {
          // Shortcuts
          var subKey = subKeys[round];
          var lBlock = this._lBlock;
          var rBlock = this._rBlock;

          // Feistel function
          var f = 0;
          for (var i = 0; i < 8; i++) {
            f |= SBOX_P[i][((rBlock ^ subKey[i]) & SBOX_MASK[i]) >>> 0];
          }
          this._lBlock = rBlock;
          this._rBlock = lBlock ^ f;
        }

        // Undo swap from last round
        var t = this._lBlock;
        this._lBlock = this._rBlock;
        this._rBlock = t;

        // Final permutation
        exchangeLR.call(this, 1, 0x55555555);
        exchangeRL.call(this, 8, 0x00ff00ff);
        exchangeRL.call(this, 2, 0x33333333);
        exchangeLR.call(this, 16, 0x0000ffff);
        exchangeLR.call(this, 4, 0x0f0f0f0f);

        // Set output
        M[offset] = this._lBlock;
        M[offset + 1] = this._rBlock;
      },
      keySize: 64 / 32,
      ivSize: 64 / 32,
      blockSize: 64 / 32
    });

    // Swap bits across the left and right words
    function exchangeLR(offset, mask) {
      var t = (this._lBlock >>> offset ^ this._rBlock) & mask;
      this._rBlock ^= t;
      this._lBlock ^= t << offset;
    }
    function exchangeRL(offset, mask) {
      var t = (this._rBlock >>> offset ^ this._lBlock) & mask;
      this._lBlock ^= t;
      this._rBlock ^= t << offset;
    }

    /**
     * Shortcut functions to the cipher's object interface.
     *
     * @example
     *
     *     var ciphertext = CryptoJS.DES.encrypt(message, key, cfg);
     *     var plaintext  = CryptoJS.DES.decrypt(ciphertext, key, cfg);
     */
    C.DES = BlockCipher._createHelper(DES);

    /**
     * Triple-DES block cipher algorithm.
     */
    var TripleDES = C_algo.TripleDES = BlockCipher.extend({
      _doReset: function _doReset() {
        // Shortcuts
        var key = this._key;
        var keyWords = key.words;
        // Make sure the key length is valid (64, 128 or >= 192 bit)
        if (keyWords.length !== 2 && keyWords.length !== 4 && keyWords.length < 6) {
          throw new Error('Invalid key length - 3DES requires the key length to be 64, 128, 192 or >192.');
        }

        // Extend the key according to the keying options defined in 3DES standard
        var key1 = keyWords.slice(0, 2);
        var key2 = keyWords.length < 4 ? keyWords.slice(0, 2) : keyWords.slice(2, 4);
        var key3 = keyWords.length < 6 ? keyWords.slice(0, 2) : keyWords.slice(4, 6);

        // Create DES instances
        this._des1 = DES.createEncryptor(WordArray.create(key1));
        this._des2 = DES.createEncryptor(WordArray.create(key2));
        this._des3 = DES.createEncryptor(WordArray.create(key3));
      },
      encryptBlock: function encryptBlock(M, offset) {
        this._des1.encryptBlock(M, offset);
        this._des2.decryptBlock(M, offset);
        this._des3.encryptBlock(M, offset);
      },
      decryptBlock: function decryptBlock(M, offset) {
        this._des3.decryptBlock(M, offset);
        this._des2.encryptBlock(M, offset);
        this._des1.decryptBlock(M, offset);
      },
      keySize: 192 / 32,
      ivSize: 64 / 32,
      blockSize: 64 / 32
    });

    /**
     * Shortcut functions to the cipher's object interface.
     *
     * @example
     *
     *     var ciphertext = CryptoJS.TripleDES.encrypt(message, key, cfg);
     *     var plaintext  = CryptoJS.TripleDES.decrypt(ciphertext, key, cfg);
     */
    C.TripleDES = BlockCipher._createHelper(TripleDES);
  })();
  return CryptoJS.TripleDES;
});

/***/ }),
/* 94 */
/*!**********************************************************************************!*\
  !*** F:/project/qianduan/zhanhuitong_yudengji_git/node_modules/crypto-js/rc4.js ***!
  \**********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;var _typeof = __webpack_require__(/*! @babel/runtime/helpers/typeof */ 13);
;
(function (root, factory, undef) {
  if (( false ? undefined : _typeof(exports)) === "object") {
    // CommonJS
    module.exports = exports = factory(__webpack_require__(/*! ./core */ 62), __webpack_require__(/*! ./enc-base64 */ 67), __webpack_require__(/*! ./md5 */ 69), __webpack_require__(/*! ./evpkdf */ 79), __webpack_require__(/*! ./cipher-core */ 80));
  } else if (true) {
    // AMD
    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! ./core */ 62), __webpack_require__(/*! ./enc-base64 */ 67), __webpack_require__(/*! ./md5 */ 69), __webpack_require__(/*! ./evpkdf */ 79), __webpack_require__(/*! ./cipher-core */ 80)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  } else {}
})(this, function (CryptoJS) {
  (function () {
    // Shortcuts
    var C = CryptoJS;
    var C_lib = C.lib;
    var StreamCipher = C_lib.StreamCipher;
    var C_algo = C.algo;

    /**
     * RC4 stream cipher algorithm.
     */
    var RC4 = C_algo.RC4 = StreamCipher.extend({
      _doReset: function _doReset() {
        // Shortcuts
        var key = this._key;
        var keyWords = key.words;
        var keySigBytes = key.sigBytes;

        // Init sbox
        var S = this._S = [];
        for (var i = 0; i < 256; i++) {
          S[i] = i;
        }

        // Key setup
        for (var i = 0, j = 0; i < 256; i++) {
          var keyByteIndex = i % keySigBytes;
          var keyByte = keyWords[keyByteIndex >>> 2] >>> 24 - keyByteIndex % 4 * 8 & 0xff;
          j = (j + S[i] + keyByte) % 256;

          // Swap
          var t = S[i];
          S[i] = S[j];
          S[j] = t;
        }

        // Counters
        this._i = this._j = 0;
      },
      _doProcessBlock: function _doProcessBlock(M, offset) {
        M[offset] ^= generateKeystreamWord.call(this);
      },
      keySize: 256 / 32,
      ivSize: 0
    });
    function generateKeystreamWord() {
      // Shortcuts
      var S = this._S;
      var i = this._i;
      var j = this._j;

      // Generate keystream word
      var keystreamWord = 0;
      for (var n = 0; n < 4; n++) {
        i = (i + 1) % 256;
        j = (j + S[i]) % 256;

        // Swap
        var t = S[i];
        S[i] = S[j];
        S[j] = t;
        keystreamWord |= S[(S[i] + S[j]) % 256] << 24 - n * 8;
      }

      // Update counters
      this._i = i;
      this._j = j;
      return keystreamWord;
    }

    /**
     * Shortcut functions to the cipher's object interface.
     *
     * @example
     *
     *     var ciphertext = CryptoJS.RC4.encrypt(message, key, cfg);
     *     var plaintext  = CryptoJS.RC4.decrypt(ciphertext, key, cfg);
     */
    C.RC4 = StreamCipher._createHelper(RC4);

    /**
     * Modified RC4 stream cipher algorithm.
     */
    var RC4Drop = C_algo.RC4Drop = RC4.extend({
      /**
       * Configuration options.
       *
       * @property {number} drop The number of keystream words to drop. Default 192
       */
      cfg: RC4.cfg.extend({
        drop: 192
      }),
      _doReset: function _doReset() {
        RC4._doReset.call(this);

        // Drop
        for (var i = this.cfg.drop; i > 0; i--) {
          generateKeystreamWord.call(this);
        }
      }
    });

    /**
     * Shortcut functions to the cipher's object interface.
     *
     * @example
     *
     *     var ciphertext = CryptoJS.RC4Drop.encrypt(message, key, cfg);
     *     var plaintext  = CryptoJS.RC4Drop.decrypt(ciphertext, key, cfg);
     */
    C.RC4Drop = StreamCipher._createHelper(RC4Drop);
  })();
  return CryptoJS.RC4;
});

/***/ }),
/* 95 */
/*!*************************************************************************************!*\
  !*** F:/project/qianduan/zhanhuitong_yudengji_git/node_modules/crypto-js/rabbit.js ***!
  \*************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;var _typeof = __webpack_require__(/*! @babel/runtime/helpers/typeof */ 13);
;
(function (root, factory, undef) {
  if (( false ? undefined : _typeof(exports)) === "object") {
    // CommonJS
    module.exports = exports = factory(__webpack_require__(/*! ./core */ 62), __webpack_require__(/*! ./enc-base64 */ 67), __webpack_require__(/*! ./md5 */ 69), __webpack_require__(/*! ./evpkdf */ 79), __webpack_require__(/*! ./cipher-core */ 80));
  } else if (true) {
    // AMD
    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! ./core */ 62), __webpack_require__(/*! ./enc-base64 */ 67), __webpack_require__(/*! ./md5 */ 69), __webpack_require__(/*! ./evpkdf */ 79), __webpack_require__(/*! ./cipher-core */ 80)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  } else {}
})(this, function (CryptoJS) {
  (function () {
    // Shortcuts
    var C = CryptoJS;
    var C_lib = C.lib;
    var StreamCipher = C_lib.StreamCipher;
    var C_algo = C.algo;

    // Reusable objects
    var S = [];
    var C_ = [];
    var G = [];

    /**
     * Rabbit stream cipher algorithm
     */
    var Rabbit = C_algo.Rabbit = StreamCipher.extend({
      _doReset: function _doReset() {
        // Shortcuts
        var K = this._key.words;
        var iv = this.cfg.iv;

        // Swap endian
        for (var i = 0; i < 4; i++) {
          K[i] = (K[i] << 8 | K[i] >>> 24) & 0x00ff00ff | (K[i] << 24 | K[i] >>> 8) & 0xff00ff00;
        }

        // Generate initial state values
        var X = this._X = [K[0], K[3] << 16 | K[2] >>> 16, K[1], K[0] << 16 | K[3] >>> 16, K[2], K[1] << 16 | K[0] >>> 16, K[3], K[2] << 16 | K[1] >>> 16];

        // Generate initial counter values
        var C = this._C = [K[2] << 16 | K[2] >>> 16, K[0] & 0xffff0000 | K[1] & 0x0000ffff, K[3] << 16 | K[3] >>> 16, K[1] & 0xffff0000 | K[2] & 0x0000ffff, K[0] << 16 | K[0] >>> 16, K[2] & 0xffff0000 | K[3] & 0x0000ffff, K[1] << 16 | K[1] >>> 16, K[3] & 0xffff0000 | K[0] & 0x0000ffff];

        // Carry bit
        this._b = 0;

        // Iterate the system four times
        for (var i = 0; i < 4; i++) {
          nextState.call(this);
        }

        // Modify the counters
        for (var i = 0; i < 8; i++) {
          C[i] ^= X[i + 4 & 7];
        }

        // IV setup
        if (iv) {
          // Shortcuts
          var IV = iv.words;
          var IV_0 = IV[0];
          var IV_1 = IV[1];

          // Generate four subvectors
          var i0 = (IV_0 << 8 | IV_0 >>> 24) & 0x00ff00ff | (IV_0 << 24 | IV_0 >>> 8) & 0xff00ff00;
          var i2 = (IV_1 << 8 | IV_1 >>> 24) & 0x00ff00ff | (IV_1 << 24 | IV_1 >>> 8) & 0xff00ff00;
          var i1 = i0 >>> 16 | i2 & 0xffff0000;
          var i3 = i2 << 16 | i0 & 0x0000ffff;

          // Modify counter values
          C[0] ^= i0;
          C[1] ^= i1;
          C[2] ^= i2;
          C[3] ^= i3;
          C[4] ^= i0;
          C[5] ^= i1;
          C[6] ^= i2;
          C[7] ^= i3;

          // Iterate the system four times
          for (var i = 0; i < 4; i++) {
            nextState.call(this);
          }
        }
      },
      _doProcessBlock: function _doProcessBlock(M, offset) {
        // Shortcut
        var X = this._X;

        // Iterate the system
        nextState.call(this);

        // Generate four keystream words
        S[0] = X[0] ^ X[5] >>> 16 ^ X[3] << 16;
        S[1] = X[2] ^ X[7] >>> 16 ^ X[5] << 16;
        S[2] = X[4] ^ X[1] >>> 16 ^ X[7] << 16;
        S[3] = X[6] ^ X[3] >>> 16 ^ X[1] << 16;
        for (var i = 0; i < 4; i++) {
          // Swap endian
          S[i] = (S[i] << 8 | S[i] >>> 24) & 0x00ff00ff | (S[i] << 24 | S[i] >>> 8) & 0xff00ff00;

          // Encrypt
          M[offset + i] ^= S[i];
        }
      },
      blockSize: 128 / 32,
      ivSize: 64 / 32
    });
    function nextState() {
      // Shortcuts
      var X = this._X;
      var C = this._C;

      // Save old counter values
      for (var i = 0; i < 8; i++) {
        C_[i] = C[i];
      }

      // Calculate new counter values
      C[0] = C[0] + 0x4d34d34d + this._b | 0;
      C[1] = C[1] + 0xd34d34d3 + (C[0] >>> 0 < C_[0] >>> 0 ? 1 : 0) | 0;
      C[2] = C[2] + 0x34d34d34 + (C[1] >>> 0 < C_[1] >>> 0 ? 1 : 0) | 0;
      C[3] = C[3] + 0x4d34d34d + (C[2] >>> 0 < C_[2] >>> 0 ? 1 : 0) | 0;
      C[4] = C[4] + 0xd34d34d3 + (C[3] >>> 0 < C_[3] >>> 0 ? 1 : 0) | 0;
      C[5] = C[5] + 0x34d34d34 + (C[4] >>> 0 < C_[4] >>> 0 ? 1 : 0) | 0;
      C[6] = C[6] + 0x4d34d34d + (C[5] >>> 0 < C_[5] >>> 0 ? 1 : 0) | 0;
      C[7] = C[7] + 0xd34d34d3 + (C[6] >>> 0 < C_[6] >>> 0 ? 1 : 0) | 0;
      this._b = C[7] >>> 0 < C_[7] >>> 0 ? 1 : 0;

      // Calculate the g-values
      for (var i = 0; i < 8; i++) {
        var gx = X[i] + C[i];

        // Construct high and low argument for squaring
        var ga = gx & 0xffff;
        var gb = gx >>> 16;

        // Calculate high and low result of squaring
        var gh = ((ga * ga >>> 17) + ga * gb >>> 15) + gb * gb;
        var gl = ((gx & 0xffff0000) * gx | 0) + ((gx & 0x0000ffff) * gx | 0);

        // High XOR low
        G[i] = gh ^ gl;
      }

      // Calculate new state values
      X[0] = G[0] + (G[7] << 16 | G[7] >>> 16) + (G[6] << 16 | G[6] >>> 16) | 0;
      X[1] = G[1] + (G[0] << 8 | G[0] >>> 24) + G[7] | 0;
      X[2] = G[2] + (G[1] << 16 | G[1] >>> 16) + (G[0] << 16 | G[0] >>> 16) | 0;
      X[3] = G[3] + (G[2] << 8 | G[2] >>> 24) + G[1] | 0;
      X[4] = G[4] + (G[3] << 16 | G[3] >>> 16) + (G[2] << 16 | G[2] >>> 16) | 0;
      X[5] = G[5] + (G[4] << 8 | G[4] >>> 24) + G[3] | 0;
      X[6] = G[6] + (G[5] << 16 | G[5] >>> 16) + (G[4] << 16 | G[4] >>> 16) | 0;
      X[7] = G[7] + (G[6] << 8 | G[6] >>> 24) + G[5] | 0;
    }

    /**
     * Shortcut functions to the cipher's object interface.
     *
     * @example
     *
     *     var ciphertext = CryptoJS.Rabbit.encrypt(message, key, cfg);
     *     var plaintext  = CryptoJS.Rabbit.decrypt(ciphertext, key, cfg);
     */
    C.Rabbit = StreamCipher._createHelper(Rabbit);
  })();
  return CryptoJS.Rabbit;
});

/***/ }),
/* 96 */
/*!********************************************************************************************!*\
  !*** F:/project/qianduan/zhanhuitong_yudengji_git/node_modules/crypto-js/rabbit-legacy.js ***!
  \********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;var _typeof = __webpack_require__(/*! @babel/runtime/helpers/typeof */ 13);
;
(function (root, factory, undef) {
  if (( false ? undefined : _typeof(exports)) === "object") {
    // CommonJS
    module.exports = exports = factory(__webpack_require__(/*! ./core */ 62), __webpack_require__(/*! ./enc-base64 */ 67), __webpack_require__(/*! ./md5 */ 69), __webpack_require__(/*! ./evpkdf */ 79), __webpack_require__(/*! ./cipher-core */ 80));
  } else if (true) {
    // AMD
    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! ./core */ 62), __webpack_require__(/*! ./enc-base64 */ 67), __webpack_require__(/*! ./md5 */ 69), __webpack_require__(/*! ./evpkdf */ 79), __webpack_require__(/*! ./cipher-core */ 80)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  } else {}
})(this, function (CryptoJS) {
  (function () {
    // Shortcuts
    var C = CryptoJS;
    var C_lib = C.lib;
    var StreamCipher = C_lib.StreamCipher;
    var C_algo = C.algo;

    // Reusable objects
    var S = [];
    var C_ = [];
    var G = [];

    /**
     * Rabbit stream cipher algorithm.
     *
     * This is a legacy version that neglected to convert the key to little-endian.
     * This error doesn't affect the cipher's security,
     * but it does affect its compatibility with other implementations.
     */
    var RabbitLegacy = C_algo.RabbitLegacy = StreamCipher.extend({
      _doReset: function _doReset() {
        // Shortcuts
        var K = this._key.words;
        var iv = this.cfg.iv;

        // Generate initial state values
        var X = this._X = [K[0], K[3] << 16 | K[2] >>> 16, K[1], K[0] << 16 | K[3] >>> 16, K[2], K[1] << 16 | K[0] >>> 16, K[3], K[2] << 16 | K[1] >>> 16];

        // Generate initial counter values
        var C = this._C = [K[2] << 16 | K[2] >>> 16, K[0] & 0xffff0000 | K[1] & 0x0000ffff, K[3] << 16 | K[3] >>> 16, K[1] & 0xffff0000 | K[2] & 0x0000ffff, K[0] << 16 | K[0] >>> 16, K[2] & 0xffff0000 | K[3] & 0x0000ffff, K[1] << 16 | K[1] >>> 16, K[3] & 0xffff0000 | K[0] & 0x0000ffff];

        // Carry bit
        this._b = 0;

        // Iterate the system four times
        for (var i = 0; i < 4; i++) {
          nextState.call(this);
        }

        // Modify the counters
        for (var i = 0; i < 8; i++) {
          C[i] ^= X[i + 4 & 7];
        }

        // IV setup
        if (iv) {
          // Shortcuts
          var IV = iv.words;
          var IV_0 = IV[0];
          var IV_1 = IV[1];

          // Generate four subvectors
          var i0 = (IV_0 << 8 | IV_0 >>> 24) & 0x00ff00ff | (IV_0 << 24 | IV_0 >>> 8) & 0xff00ff00;
          var i2 = (IV_1 << 8 | IV_1 >>> 24) & 0x00ff00ff | (IV_1 << 24 | IV_1 >>> 8) & 0xff00ff00;
          var i1 = i0 >>> 16 | i2 & 0xffff0000;
          var i3 = i2 << 16 | i0 & 0x0000ffff;

          // Modify counter values
          C[0] ^= i0;
          C[1] ^= i1;
          C[2] ^= i2;
          C[3] ^= i3;
          C[4] ^= i0;
          C[5] ^= i1;
          C[6] ^= i2;
          C[7] ^= i3;

          // Iterate the system four times
          for (var i = 0; i < 4; i++) {
            nextState.call(this);
          }
        }
      },
      _doProcessBlock: function _doProcessBlock(M, offset) {
        // Shortcut
        var X = this._X;

        // Iterate the system
        nextState.call(this);

        // Generate four keystream words
        S[0] = X[0] ^ X[5] >>> 16 ^ X[3] << 16;
        S[1] = X[2] ^ X[7] >>> 16 ^ X[5] << 16;
        S[2] = X[4] ^ X[1] >>> 16 ^ X[7] << 16;
        S[3] = X[6] ^ X[3] >>> 16 ^ X[1] << 16;
        for (var i = 0; i < 4; i++) {
          // Swap endian
          S[i] = (S[i] << 8 | S[i] >>> 24) & 0x00ff00ff | (S[i] << 24 | S[i] >>> 8) & 0xff00ff00;

          // Encrypt
          M[offset + i] ^= S[i];
        }
      },
      blockSize: 128 / 32,
      ivSize: 64 / 32
    });
    function nextState() {
      // Shortcuts
      var X = this._X;
      var C = this._C;

      // Save old counter values
      for (var i = 0; i < 8; i++) {
        C_[i] = C[i];
      }

      // Calculate new counter values
      C[0] = C[0] + 0x4d34d34d + this._b | 0;
      C[1] = C[1] + 0xd34d34d3 + (C[0] >>> 0 < C_[0] >>> 0 ? 1 : 0) | 0;
      C[2] = C[2] + 0x34d34d34 + (C[1] >>> 0 < C_[1] >>> 0 ? 1 : 0) | 0;
      C[3] = C[3] + 0x4d34d34d + (C[2] >>> 0 < C_[2] >>> 0 ? 1 : 0) | 0;
      C[4] = C[4] + 0xd34d34d3 + (C[3] >>> 0 < C_[3] >>> 0 ? 1 : 0) | 0;
      C[5] = C[5] + 0x34d34d34 + (C[4] >>> 0 < C_[4] >>> 0 ? 1 : 0) | 0;
      C[6] = C[6] + 0x4d34d34d + (C[5] >>> 0 < C_[5] >>> 0 ? 1 : 0) | 0;
      C[7] = C[7] + 0xd34d34d3 + (C[6] >>> 0 < C_[6] >>> 0 ? 1 : 0) | 0;
      this._b = C[7] >>> 0 < C_[7] >>> 0 ? 1 : 0;

      // Calculate the g-values
      for (var i = 0; i < 8; i++) {
        var gx = X[i] + C[i];

        // Construct high and low argument for squaring
        var ga = gx & 0xffff;
        var gb = gx >>> 16;

        // Calculate high and low result of squaring
        var gh = ((ga * ga >>> 17) + ga * gb >>> 15) + gb * gb;
        var gl = ((gx & 0xffff0000) * gx | 0) + ((gx & 0x0000ffff) * gx | 0);

        // High XOR low
        G[i] = gh ^ gl;
      }

      // Calculate new state values
      X[0] = G[0] + (G[7] << 16 | G[7] >>> 16) + (G[6] << 16 | G[6] >>> 16) | 0;
      X[1] = G[1] + (G[0] << 8 | G[0] >>> 24) + G[7] | 0;
      X[2] = G[2] + (G[1] << 16 | G[1] >>> 16) + (G[0] << 16 | G[0] >>> 16) | 0;
      X[3] = G[3] + (G[2] << 8 | G[2] >>> 24) + G[1] | 0;
      X[4] = G[4] + (G[3] << 16 | G[3] >>> 16) + (G[2] << 16 | G[2] >>> 16) | 0;
      X[5] = G[5] + (G[4] << 8 | G[4] >>> 24) + G[3] | 0;
      X[6] = G[6] + (G[5] << 16 | G[5] >>> 16) + (G[4] << 16 | G[4] >>> 16) | 0;
      X[7] = G[7] + (G[6] << 8 | G[6] >>> 24) + G[5] | 0;
    }

    /**
     * Shortcut functions to the cipher's object interface.
     *
     * @example
     *
     *     var ciphertext = CryptoJS.RabbitLegacy.encrypt(message, key, cfg);
     *     var plaintext  = CryptoJS.RabbitLegacy.decrypt(ciphertext, key, cfg);
     */
    C.RabbitLegacy = StreamCipher._createHelper(RabbitLegacy);
  })();
  return CryptoJS.RabbitLegacy;
});

/***/ }),
/* 97 */
/*!***************************************************************************************!*\
  !*** F:/project/qianduan/zhanhuitong_yudengji_git/node_modules/crypto-js/blowfish.js ***!
  \***************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;var _typeof = __webpack_require__(/*! @babel/runtime/helpers/typeof */ 13);
;
(function (root, factory, undef) {
  if (( false ? undefined : _typeof(exports)) === "object") {
    // CommonJS
    module.exports = exports = factory(__webpack_require__(/*! ./core */ 62), __webpack_require__(/*! ./enc-base64 */ 67), __webpack_require__(/*! ./md5 */ 69), __webpack_require__(/*! ./evpkdf */ 79), __webpack_require__(/*! ./cipher-core */ 80));
  } else if (true) {
    // AMD
    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! ./core */ 62), __webpack_require__(/*! ./enc-base64 */ 67), __webpack_require__(/*! ./md5 */ 69), __webpack_require__(/*! ./evpkdf */ 79), __webpack_require__(/*! ./cipher-core */ 80)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  } else {}
})(this, function (CryptoJS) {
  (function () {
    // Shortcuts
    var C = CryptoJS;
    var C_lib = C.lib;
    var BlockCipher = C_lib.BlockCipher;
    var C_algo = C.algo;
    var N = 16;

    //Origin pbox and sbox, derived from PI
    var ORIG_P = [0x243F6A88, 0x85A308D3, 0x13198A2E, 0x03707344, 0xA4093822, 0x299F31D0, 0x082EFA98, 0xEC4E6C89, 0x452821E6, 0x38D01377, 0xBE5466CF, 0x34E90C6C, 0xC0AC29B7, 0xC97C50DD, 0x3F84D5B5, 0xB5470917, 0x9216D5D9, 0x8979FB1B];
    var ORIG_S = [[0xD1310BA6, 0x98DFB5AC, 0x2FFD72DB, 0xD01ADFB7, 0xB8E1AFED, 0x6A267E96, 0xBA7C9045, 0xF12C7F99, 0x24A19947, 0xB3916CF7, 0x0801F2E2, 0x858EFC16, 0x636920D8, 0x71574E69, 0xA458FEA3, 0xF4933D7E, 0x0D95748F, 0x728EB658, 0x718BCD58, 0x82154AEE, 0x7B54A41D, 0xC25A59B5, 0x9C30D539, 0x2AF26013, 0xC5D1B023, 0x286085F0, 0xCA417918, 0xB8DB38EF, 0x8E79DCB0, 0x603A180E, 0x6C9E0E8B, 0xB01E8A3E, 0xD71577C1, 0xBD314B27, 0x78AF2FDA, 0x55605C60, 0xE65525F3, 0xAA55AB94, 0x57489862, 0x63E81440, 0x55CA396A, 0x2AAB10B6, 0xB4CC5C34, 0x1141E8CE, 0xA15486AF, 0x7C72E993, 0xB3EE1411, 0x636FBC2A, 0x2BA9C55D, 0x741831F6, 0xCE5C3E16, 0x9B87931E, 0xAFD6BA33, 0x6C24CF5C, 0x7A325381, 0x28958677, 0x3B8F4898, 0x6B4BB9AF, 0xC4BFE81B, 0x66282193, 0x61D809CC, 0xFB21A991, 0x487CAC60, 0x5DEC8032, 0xEF845D5D, 0xE98575B1, 0xDC262302, 0xEB651B88, 0x23893E81, 0xD396ACC5, 0x0F6D6FF3, 0x83F44239, 0x2E0B4482, 0xA4842004, 0x69C8F04A, 0x9E1F9B5E, 0x21C66842, 0xF6E96C9A, 0x670C9C61, 0xABD388F0, 0x6A51A0D2, 0xD8542F68, 0x960FA728, 0xAB5133A3, 0x6EEF0B6C, 0x137A3BE4, 0xBA3BF050, 0x7EFB2A98, 0xA1F1651D, 0x39AF0176, 0x66CA593E, 0x82430E88, 0x8CEE8619, 0x456F9FB4, 0x7D84A5C3, 0x3B8B5EBE, 0xE06F75D8, 0x85C12073, 0x401A449F, 0x56C16AA6, 0x4ED3AA62, 0x363F7706, 0x1BFEDF72, 0x429B023D, 0x37D0D724, 0xD00A1248, 0xDB0FEAD3, 0x49F1C09B, 0x075372C9, 0x80991B7B, 0x25D479D8, 0xF6E8DEF7, 0xE3FE501A, 0xB6794C3B, 0x976CE0BD, 0x04C006BA, 0xC1A94FB6, 0x409F60C4, 0x5E5C9EC2, 0x196A2463, 0x68FB6FAF, 0x3E6C53B5, 0x1339B2EB, 0x3B52EC6F, 0x6DFC511F, 0x9B30952C, 0xCC814544, 0xAF5EBD09, 0xBEE3D004, 0xDE334AFD, 0x660F2807, 0x192E4BB3, 0xC0CBA857, 0x45C8740F, 0xD20B5F39, 0xB9D3FBDB, 0x5579C0BD, 0x1A60320A, 0xD6A100C6, 0x402C7279, 0x679F25FE, 0xFB1FA3CC, 0x8EA5E9F8, 0xDB3222F8, 0x3C7516DF, 0xFD616B15, 0x2F501EC8, 0xAD0552AB, 0x323DB5FA, 0xFD238760, 0x53317B48, 0x3E00DF82, 0x9E5C57BB, 0xCA6F8CA0, 0x1A87562E, 0xDF1769DB, 0xD542A8F6, 0x287EFFC3, 0xAC6732C6, 0x8C4F5573, 0x695B27B0, 0xBBCA58C8, 0xE1FFA35D, 0xB8F011A0, 0x10FA3D98, 0xFD2183B8, 0x4AFCB56C, 0x2DD1D35B, 0x9A53E479, 0xB6F84565, 0xD28E49BC, 0x4BFB9790, 0xE1DDF2DA, 0xA4CB7E33, 0x62FB1341, 0xCEE4C6E8, 0xEF20CADA, 0x36774C01, 0xD07E9EFE, 0x2BF11FB4, 0x95DBDA4D, 0xAE909198, 0xEAAD8E71, 0x6B93D5A0, 0xD08ED1D0, 0xAFC725E0, 0x8E3C5B2F, 0x8E7594B7, 0x8FF6E2FB, 0xF2122B64, 0x8888B812, 0x900DF01C, 0x4FAD5EA0, 0x688FC31C, 0xD1CFF191, 0xB3A8C1AD, 0x2F2F2218, 0xBE0E1777, 0xEA752DFE, 0x8B021FA1, 0xE5A0CC0F, 0xB56F74E8, 0x18ACF3D6, 0xCE89E299, 0xB4A84FE0, 0xFD13E0B7, 0x7CC43B81, 0xD2ADA8D9, 0x165FA266, 0x80957705, 0x93CC7314, 0x211A1477, 0xE6AD2065, 0x77B5FA86, 0xC75442F5, 0xFB9D35CF, 0xEBCDAF0C, 0x7B3E89A0, 0xD6411BD3, 0xAE1E7E49, 0x00250E2D, 0x2071B35E, 0x226800BB, 0x57B8E0AF, 0x2464369B, 0xF009B91E, 0x5563911D, 0x59DFA6AA, 0x78C14389, 0xD95A537F, 0x207D5BA2, 0x02E5B9C5, 0x83260376, 0x6295CFA9, 0x11C81968, 0x4E734A41, 0xB3472DCA, 0x7B14A94A, 0x1B510052, 0x9A532915, 0xD60F573F, 0xBC9BC6E4, 0x2B60A476, 0x81E67400, 0x08BA6FB5, 0x571BE91F, 0xF296EC6B, 0x2A0DD915, 0xB6636521, 0xE7B9F9B6, 0xFF34052E, 0xC5855664, 0x53B02D5D, 0xA99F8FA1, 0x08BA4799, 0x6E85076A], [0x4B7A70E9, 0xB5B32944, 0xDB75092E, 0xC4192623, 0xAD6EA6B0, 0x49A7DF7D, 0x9CEE60B8, 0x8FEDB266, 0xECAA8C71, 0x699A17FF, 0x5664526C, 0xC2B19EE1, 0x193602A5, 0x75094C29, 0xA0591340, 0xE4183A3E, 0x3F54989A, 0x5B429D65, 0x6B8FE4D6, 0x99F73FD6, 0xA1D29C07, 0xEFE830F5, 0x4D2D38E6, 0xF0255DC1, 0x4CDD2086, 0x8470EB26, 0x6382E9C6, 0x021ECC5E, 0x09686B3F, 0x3EBAEFC9, 0x3C971814, 0x6B6A70A1, 0x687F3584, 0x52A0E286, 0xB79C5305, 0xAA500737, 0x3E07841C, 0x7FDEAE5C, 0x8E7D44EC, 0x5716F2B8, 0xB03ADA37, 0xF0500C0D, 0xF01C1F04, 0x0200B3FF, 0xAE0CF51A, 0x3CB574B2, 0x25837A58, 0xDC0921BD, 0xD19113F9, 0x7CA92FF6, 0x94324773, 0x22F54701, 0x3AE5E581, 0x37C2DADC, 0xC8B57634, 0x9AF3DDA7, 0xA9446146, 0x0FD0030E, 0xECC8C73E, 0xA4751E41, 0xE238CD99, 0x3BEA0E2F, 0x3280BBA1, 0x183EB331, 0x4E548B38, 0x4F6DB908, 0x6F420D03, 0xF60A04BF, 0x2CB81290, 0x24977C79, 0x5679B072, 0xBCAF89AF, 0xDE9A771F, 0xD9930810, 0xB38BAE12, 0xDCCF3F2E, 0x5512721F, 0x2E6B7124, 0x501ADDE6, 0x9F84CD87, 0x7A584718, 0x7408DA17, 0xBC9F9ABC, 0xE94B7D8C, 0xEC7AEC3A, 0xDB851DFA, 0x63094366, 0xC464C3D2, 0xEF1C1847, 0x3215D908, 0xDD433B37, 0x24C2BA16, 0x12A14D43, 0x2A65C451, 0x50940002, 0x133AE4DD, 0x71DFF89E, 0x10314E55, 0x81AC77D6, 0x5F11199B, 0x043556F1, 0xD7A3C76B, 0x3C11183B, 0x5924A509, 0xF28FE6ED, 0x97F1FBFA, 0x9EBABF2C, 0x1E153C6E, 0x86E34570, 0xEAE96FB1, 0x860E5E0A, 0x5A3E2AB3, 0x771FE71C, 0x4E3D06FA, 0x2965DCB9, 0x99E71D0F, 0x803E89D6, 0x5266C825, 0x2E4CC978, 0x9C10B36A, 0xC6150EBA, 0x94E2EA78, 0xA5FC3C53, 0x1E0A2DF4, 0xF2F74EA7, 0x361D2B3D, 0x1939260F, 0x19C27960, 0x5223A708, 0xF71312B6, 0xEBADFE6E, 0xEAC31F66, 0xE3BC4595, 0xA67BC883, 0xB17F37D1, 0x018CFF28, 0xC332DDEF, 0xBE6C5AA5, 0x65582185, 0x68AB9802, 0xEECEA50F, 0xDB2F953B, 0x2AEF7DAD, 0x5B6E2F84, 0x1521B628, 0x29076170, 0xECDD4775, 0x619F1510, 0x13CCA830, 0xEB61BD96, 0x0334FE1E, 0xAA0363CF, 0xB5735C90, 0x4C70A239, 0xD59E9E0B, 0xCBAADE14, 0xEECC86BC, 0x60622CA7, 0x9CAB5CAB, 0xB2F3846E, 0x648B1EAF, 0x19BDF0CA, 0xA02369B9, 0x655ABB50, 0x40685A32, 0x3C2AB4B3, 0x319EE9D5, 0xC021B8F7, 0x9B540B19, 0x875FA099, 0x95F7997E, 0x623D7DA8, 0xF837889A, 0x97E32D77, 0x11ED935F, 0x16681281, 0x0E358829, 0xC7E61FD6, 0x96DEDFA1, 0x7858BA99, 0x57F584A5, 0x1B227263, 0x9B83C3FF, 0x1AC24696, 0xCDB30AEB, 0x532E3054, 0x8FD948E4, 0x6DBC3128, 0x58EBF2EF, 0x34C6FFEA, 0xFE28ED61, 0xEE7C3C73, 0x5D4A14D9, 0xE864B7E3, 0x42105D14, 0x203E13E0, 0x45EEE2B6, 0xA3AAABEA, 0xDB6C4F15, 0xFACB4FD0, 0xC742F442, 0xEF6ABBB5, 0x654F3B1D, 0x41CD2105, 0xD81E799E, 0x86854DC7, 0xE44B476A, 0x3D816250, 0xCF62A1F2, 0x5B8D2646, 0xFC8883A0, 0xC1C7B6A3, 0x7F1524C3, 0x69CB7492, 0x47848A0B, 0x5692B285, 0x095BBF00, 0xAD19489D, 0x1462B174, 0x23820E00, 0x58428D2A, 0x0C55F5EA, 0x1DADF43E, 0x233F7061, 0x3372F092, 0x8D937E41, 0xD65FECF1, 0x6C223BDB, 0x7CDE3759, 0xCBEE7460, 0x4085F2A7, 0xCE77326E, 0xA6078084, 0x19F8509E, 0xE8EFD855, 0x61D99735, 0xA969A7AA, 0xC50C06C2, 0x5A04ABFC, 0x800BCADC, 0x9E447A2E, 0xC3453484, 0xFDD56705, 0x0E1E9EC9, 0xDB73DBD3, 0x105588CD, 0x675FDA79, 0xE3674340, 0xC5C43465, 0x713E38D8, 0x3D28F89E, 0xF16DFF20, 0x153E21E7, 0x8FB03D4A, 0xE6E39F2B, 0xDB83ADF7], [0xE93D5A68, 0x948140F7, 0xF64C261C, 0x94692934, 0x411520F7, 0x7602D4F7, 0xBCF46B2E, 0xD4A20068, 0xD4082471, 0x3320F46A, 0x43B7D4B7, 0x500061AF, 0x1E39F62E, 0x97244546, 0x14214F74, 0xBF8B8840, 0x4D95FC1D, 0x96B591AF, 0x70F4DDD3, 0x66A02F45, 0xBFBC09EC, 0x03BD9785, 0x7FAC6DD0, 0x31CB8504, 0x96EB27B3, 0x55FD3941, 0xDA2547E6, 0xABCA0A9A, 0x28507825, 0x530429F4, 0x0A2C86DA, 0xE9B66DFB, 0x68DC1462, 0xD7486900, 0x680EC0A4, 0x27A18DEE, 0x4F3FFEA2, 0xE887AD8C, 0xB58CE006, 0x7AF4D6B6, 0xAACE1E7C, 0xD3375FEC, 0xCE78A399, 0x406B2A42, 0x20FE9E35, 0xD9F385B9, 0xEE39D7AB, 0x3B124E8B, 0x1DC9FAF7, 0x4B6D1856, 0x26A36631, 0xEAE397B2, 0x3A6EFA74, 0xDD5B4332, 0x6841E7F7, 0xCA7820FB, 0xFB0AF54E, 0xD8FEB397, 0x454056AC, 0xBA489527, 0x55533A3A, 0x20838D87, 0xFE6BA9B7, 0xD096954B, 0x55A867BC, 0xA1159A58, 0xCCA92963, 0x99E1DB33, 0xA62A4A56, 0x3F3125F9, 0x5EF47E1C, 0x9029317C, 0xFDF8E802, 0x04272F70, 0x80BB155C, 0x05282CE3, 0x95C11548, 0xE4C66D22, 0x48C1133F, 0xC70F86DC, 0x07F9C9EE, 0x41041F0F, 0x404779A4, 0x5D886E17, 0x325F51EB, 0xD59BC0D1, 0xF2BCC18F, 0x41113564, 0x257B7834, 0x602A9C60, 0xDFF8E8A3, 0x1F636C1B, 0x0E12B4C2, 0x02E1329E, 0xAF664FD1, 0xCAD18115, 0x6B2395E0, 0x333E92E1, 0x3B240B62, 0xEEBEB922, 0x85B2A20E, 0xE6BA0D99, 0xDE720C8C, 0x2DA2F728, 0xD0127845, 0x95B794FD, 0x647D0862, 0xE7CCF5F0, 0x5449A36F, 0x877D48FA, 0xC39DFD27, 0xF33E8D1E, 0x0A476341, 0x992EFF74, 0x3A6F6EAB, 0xF4F8FD37, 0xA812DC60, 0xA1EBDDF8, 0x991BE14C, 0xDB6E6B0D, 0xC67B5510, 0x6D672C37, 0x2765D43B, 0xDCD0E804, 0xF1290DC7, 0xCC00FFA3, 0xB5390F92, 0x690FED0B, 0x667B9FFB, 0xCEDB7D9C, 0xA091CF0B, 0xD9155EA3, 0xBB132F88, 0x515BAD24, 0x7B9479BF, 0x763BD6EB, 0x37392EB3, 0xCC115979, 0x8026E297, 0xF42E312D, 0x6842ADA7, 0xC66A2B3B, 0x12754CCC, 0x782EF11C, 0x6A124237, 0xB79251E7, 0x06A1BBE6, 0x4BFB6350, 0x1A6B1018, 0x11CAEDFA, 0x3D25BDD8, 0xE2E1C3C9, 0x44421659, 0x0A121386, 0xD90CEC6E, 0xD5ABEA2A, 0x64AF674E, 0xDA86A85F, 0xBEBFE988, 0x64E4C3FE, 0x9DBC8057, 0xF0F7C086, 0x60787BF8, 0x6003604D, 0xD1FD8346, 0xF6381FB0, 0x7745AE04, 0xD736FCCC, 0x83426B33, 0xF01EAB71, 0xB0804187, 0x3C005E5F, 0x77A057BE, 0xBDE8AE24, 0x55464299, 0xBF582E61, 0x4E58F48F, 0xF2DDFDA2, 0xF474EF38, 0x8789BDC2, 0x5366F9C3, 0xC8B38E74, 0xB475F255, 0x46FCD9B9, 0x7AEB2661, 0x8B1DDF84, 0x846A0E79, 0x915F95E2, 0x466E598E, 0x20B45770, 0x8CD55591, 0xC902DE4C, 0xB90BACE1, 0xBB8205D0, 0x11A86248, 0x7574A99E, 0xB77F19B6, 0xE0A9DC09, 0x662D09A1, 0xC4324633, 0xE85A1F02, 0x09F0BE8C, 0x4A99A025, 0x1D6EFE10, 0x1AB93D1D, 0x0BA5A4DF, 0xA186F20F, 0x2868F169, 0xDCB7DA83, 0x573906FE, 0xA1E2CE9B, 0x4FCD7F52, 0x50115E01, 0xA70683FA, 0xA002B5C4, 0x0DE6D027, 0x9AF88C27, 0x773F8641, 0xC3604C06, 0x61A806B5, 0xF0177A28, 0xC0F586E0, 0x006058AA, 0x30DC7D62, 0x11E69ED7, 0x2338EA63, 0x53C2DD94, 0xC2C21634, 0xBBCBEE56, 0x90BCB6DE, 0xEBFC7DA1, 0xCE591D76, 0x6F05E409, 0x4B7C0188, 0x39720A3D, 0x7C927C24, 0x86E3725F, 0x724D9DB9, 0x1AC15BB4, 0xD39EB8FC, 0xED545578, 0x08FCA5B5, 0xD83D7CD3, 0x4DAD0FC4, 0x1E50EF5E, 0xB161E6F8, 0xA28514D9, 0x6C51133C, 0x6FD5C7E7, 0x56E14EC4, 0x362ABFCE, 0xDDC6C837, 0xD79A3234, 0x92638212, 0x670EFA8E, 0x406000E0], [0x3A39CE37, 0xD3FAF5CF, 0xABC27737, 0x5AC52D1B, 0x5CB0679E, 0x4FA33742, 0xD3822740, 0x99BC9BBE, 0xD5118E9D, 0xBF0F7315, 0xD62D1C7E, 0xC700C47B, 0xB78C1B6B, 0x21A19045, 0xB26EB1BE, 0x6A366EB4, 0x5748AB2F, 0xBC946E79, 0xC6A376D2, 0x6549C2C8, 0x530FF8EE, 0x468DDE7D, 0xD5730A1D, 0x4CD04DC6, 0x2939BBDB, 0xA9BA4650, 0xAC9526E8, 0xBE5EE304, 0xA1FAD5F0, 0x6A2D519A, 0x63EF8CE2, 0x9A86EE22, 0xC089C2B8, 0x43242EF6, 0xA51E03AA, 0x9CF2D0A4, 0x83C061BA, 0x9BE96A4D, 0x8FE51550, 0xBA645BD6, 0x2826A2F9, 0xA73A3AE1, 0x4BA99586, 0xEF5562E9, 0xC72FEFD3, 0xF752F7DA, 0x3F046F69, 0x77FA0A59, 0x80E4A915, 0x87B08601, 0x9B09E6AD, 0x3B3EE593, 0xE990FD5A, 0x9E34D797, 0x2CF0B7D9, 0x022B8B51, 0x96D5AC3A, 0x017DA67D, 0xD1CF3ED6, 0x7C7D2D28, 0x1F9F25CF, 0xADF2B89B, 0x5AD6B472, 0x5A88F54C, 0xE029AC71, 0xE019A5E6, 0x47B0ACFD, 0xED93FA9B, 0xE8D3C48D, 0x283B57CC, 0xF8D56629, 0x79132E28, 0x785F0191, 0xED756055, 0xF7960E44, 0xE3D35E8C, 0x15056DD4, 0x88F46DBA, 0x03A16125, 0x0564F0BD, 0xC3EB9E15, 0x3C9057A2, 0x97271AEC, 0xA93A072A, 0x1B3F6D9B, 0x1E6321F5, 0xF59C66FB, 0x26DCF319, 0x7533D928, 0xB155FDF5, 0x03563482, 0x8ABA3CBB, 0x28517711, 0xC20AD9F8, 0xABCC5167, 0xCCAD925F, 0x4DE81751, 0x3830DC8E, 0x379D5862, 0x9320F991, 0xEA7A90C2, 0xFB3E7BCE, 0x5121CE64, 0x774FBE32, 0xA8B6E37E, 0xC3293D46, 0x48DE5369, 0x6413E680, 0xA2AE0810, 0xDD6DB224, 0x69852DFD, 0x09072166, 0xB39A460A, 0x6445C0DD, 0x586CDECF, 0x1C20C8AE, 0x5BBEF7DD, 0x1B588D40, 0xCCD2017F, 0x6BB4E3BB, 0xDDA26A7E, 0x3A59FF45, 0x3E350A44, 0xBCB4CDD5, 0x72EACEA8, 0xFA6484BB, 0x8D6612AE, 0xBF3C6F47, 0xD29BE463, 0x542F5D9E, 0xAEC2771B, 0xF64E6370, 0x740E0D8D, 0xE75B1357, 0xF8721671, 0xAF537D5D, 0x4040CB08, 0x4EB4E2CC, 0x34D2466A, 0x0115AF84, 0xE1B00428, 0x95983A1D, 0x06B89FB4, 0xCE6EA048, 0x6F3F3B82, 0x3520AB82, 0x011A1D4B, 0x277227F8, 0x611560B1, 0xE7933FDC, 0xBB3A792B, 0x344525BD, 0xA08839E1, 0x51CE794B, 0x2F32C9B7, 0xA01FBAC9, 0xE01CC87E, 0xBCC7D1F6, 0xCF0111C3, 0xA1E8AAC7, 0x1A908749, 0xD44FBD9A, 0xD0DADECB, 0xD50ADA38, 0x0339C32A, 0xC6913667, 0x8DF9317C, 0xE0B12B4F, 0xF79E59B7, 0x43F5BB3A, 0xF2D519FF, 0x27D9459C, 0xBF97222C, 0x15E6FC2A, 0x0F91FC71, 0x9B941525, 0xFAE59361, 0xCEB69CEB, 0xC2A86459, 0x12BAA8D1, 0xB6C1075E, 0xE3056A0C, 0x10D25065, 0xCB03A442, 0xE0EC6E0E, 0x1698DB3B, 0x4C98A0BE, 0x3278E964, 0x9F1F9532, 0xE0D392DF, 0xD3A0342B, 0x8971F21E, 0x1B0A7441, 0x4BA3348C, 0xC5BE7120, 0xC37632D8, 0xDF359F8D, 0x9B992F2E, 0xE60B6F47, 0x0FE3F11D, 0xE54CDA54, 0x1EDAD891, 0xCE6279CF, 0xCD3E7E6F, 0x1618B166, 0xFD2C1D05, 0x848FD2C5, 0xF6FB2299, 0xF523F357, 0xA6327623, 0x93A83531, 0x56CCCD02, 0xACF08162, 0x5A75EBB5, 0x6E163697, 0x88D273CC, 0xDE966292, 0x81B949D0, 0x4C50901B, 0x71C65614, 0xE6C6C7BD, 0x327A140A, 0x45E1D006, 0xC3F27B9A, 0xC9AA53FD, 0x62A80F00, 0xBB25BFE2, 0x35BDD2F6, 0x71126905, 0xB2040222, 0xB6CBCF7C, 0xCD769C2B, 0x53113EC0, 0x1640E3D3, 0x38ABBD60, 0x2547ADF0, 0xBA38209C, 0xF746CE76, 0x77AFA1C5, 0x20756060, 0x85CBFE4E, 0x8AE88DD8, 0x7AAAF9B0, 0x4CF9AA7E, 0x1948C25C, 0x02FB8A8C, 0x01C36AE4, 0xD6EBE1F9, 0x90D4F869, 0xA65CDEA0, 0x3F09252D, 0xC208E69F, 0xB74E6132, 0xCE77E25B, 0x578FDFE3, 0x3AC372E6]];
    var BLOWFISH_CTX = {
      pbox: [],
      sbox: []
    };
    function F(ctx, x) {
      var a = x >> 24 & 0xFF;
      var b = x >> 16 & 0xFF;
      var c = x >> 8 & 0xFF;
      var d = x & 0xFF;
      var y = ctx.sbox[0][a] + ctx.sbox[1][b];
      y = y ^ ctx.sbox[2][c];
      y = y + ctx.sbox[3][d];
      return y;
    }
    function BlowFish_Encrypt(ctx, left, right) {
      var Xl = left;
      var Xr = right;
      var temp;
      for (var i = 0; i < N; ++i) {
        Xl = Xl ^ ctx.pbox[i];
        Xr = F(ctx, Xl) ^ Xr;
        temp = Xl;
        Xl = Xr;
        Xr = temp;
      }
      temp = Xl;
      Xl = Xr;
      Xr = temp;
      Xr = Xr ^ ctx.pbox[N];
      Xl = Xl ^ ctx.pbox[N + 1];
      return {
        left: Xl,
        right: Xr
      };
    }
    function BlowFish_Decrypt(ctx, left, right) {
      var Xl = left;
      var Xr = right;
      var temp;
      for (var i = N + 1; i > 1; --i) {
        Xl = Xl ^ ctx.pbox[i];
        Xr = F(ctx, Xl) ^ Xr;
        temp = Xl;
        Xl = Xr;
        Xr = temp;
      }
      temp = Xl;
      Xl = Xr;
      Xr = temp;
      Xr = Xr ^ ctx.pbox[1];
      Xl = Xl ^ ctx.pbox[0];
      return {
        left: Xl,
        right: Xr
      };
    }

    /**
     * Initialization ctx's pbox and sbox.
     *
     * @param {Object} ctx The object has pbox and sbox.
     * @param {Array} key An array of 32-bit words.
     * @param {int} keysize The length of the key.
     *
     * @example
     *
     *     BlowFishInit(BLOWFISH_CTX, key, 128/32);
     */
    function BlowFishInit(ctx, key, keysize) {
      for (var Row = 0; Row < 4; Row++) {
        ctx.sbox[Row] = [];
        for (var Col = 0; Col < 256; Col++) {
          ctx.sbox[Row][Col] = ORIG_S[Row][Col];
        }
      }
      var keyIndex = 0;
      for (var index = 0; index < N + 2; index++) {
        ctx.pbox[index] = ORIG_P[index] ^ key[keyIndex];
        keyIndex++;
        if (keyIndex >= keysize) {
          keyIndex = 0;
        }
      }
      var Data1 = 0;
      var Data2 = 0;
      var res = 0;
      for (var i = 0; i < N + 2; i += 2) {
        res = BlowFish_Encrypt(ctx, Data1, Data2);
        Data1 = res.left;
        Data2 = res.right;
        ctx.pbox[i] = Data1;
        ctx.pbox[i + 1] = Data2;
      }
      for (var _i = 0; _i < 4; _i++) {
        for (var j = 0; j < 256; j += 2) {
          res = BlowFish_Encrypt(ctx, Data1, Data2);
          Data1 = res.left;
          Data2 = res.right;
          ctx.sbox[_i][j] = Data1;
          ctx.sbox[_i][j + 1] = Data2;
        }
      }
      return true;
    }

    /**
     * Blowfish block cipher algorithm.
     */
    var Blowfish = C_algo.Blowfish = BlockCipher.extend({
      _doReset: function _doReset() {
        // Skip reset of nRounds has been set before and key did not change
        if (this._keyPriorReset === this._key) {
          return;
        }

        // Shortcuts
        var key = this._keyPriorReset = this._key;
        var keyWords = key.words;
        var keySize = key.sigBytes / 4;

        //Initialization pbox and sbox
        BlowFishInit(BLOWFISH_CTX, keyWords, keySize);
      },
      encryptBlock: function encryptBlock(M, offset) {
        var res = BlowFish_Encrypt(BLOWFISH_CTX, M[offset], M[offset + 1]);
        M[offset] = res.left;
        M[offset + 1] = res.right;
      },
      decryptBlock: function decryptBlock(M, offset) {
        var res = BlowFish_Decrypt(BLOWFISH_CTX, M[offset], M[offset + 1]);
        M[offset] = res.left;
        M[offset + 1] = res.right;
      },
      blockSize: 64 / 32,
      keySize: 128 / 32,
      ivSize: 64 / 32
    });

    /**
     * Shortcut functions to the cipher's object interface.
     *
     * @example
     *
     *     var ciphertext = CryptoJS.Blowfish.encrypt(message, key, cfg);
     *     var plaintext  = CryptoJS.Blowfish.decrypt(ciphertext, key, cfg);
     */
    C.Blowfish = BlockCipher._createHelper(Blowfish);
  })();
  return CryptoJS.Blowfish;
});

/***/ }),
/* 98 */,
/* 99 */,
/* 100 */,
/* 101 */,
/* 102 */,
/* 103 */,
/* 104 */,
/* 105 */,
/* 106 */,
/* 107 */,
/* 108 */,
/* 109 */,
/* 110 */,
/* 111 */,
/* 112 */,
/* 113 */,
/* 114 */,
/* 115 */,
/* 116 */,
/* 117 */,
/* 118 */,
/* 119 */,
/* 120 */,
/* 121 */,
/* 122 */,
/* 123 */,
/* 124 */,
/* 125 */,
/* 126 */,
/* 127 */,
/* 128 */,
/* 129 */,
/* 130 */,
/* 131 */,
/* 132 */,
/* 133 */,
/* 134 */,
/* 135 */,
/* 136 */,
/* 137 */,
/* 138 */,
/* 139 */,
/* 140 */,
/* 141 */,
/* 142 */,
/* 143 */,
/* 144 */,
/* 145 */,
/* 146 */,
/* 147 */,
/* 148 */,
/* 149 */,
/* 150 */,
/* 151 */,
/* 152 */,
/* 153 */,
/* 154 */,
/* 155 */,
/* 156 */,
/* 157 */,
/* 158 */,
/* 159 */,
/* 160 */,
/* 161 */,
/* 162 */,
/* 163 */,
/* 164 */,
/* 165 */,
/* 166 */,
/* 167 */,
/* 168 */,
/* 169 */,
/* 170 */,
/* 171 */,
/* 172 */
/*!**************************************************************************!*\
  !*** F:/project/qianduan/zhanhuitong_yudengji_git/style/weapp-qrcode.js ***!
  \**************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(wx) {//Core code comes from https://github.com/davidshimjs/qrcodejs

var QRCode;
(function () {
  /**
       * Get the type by string length
       * 
       * @private
       * @param {String} sText
       * @param {Number} nCorrectLevel
       * @return {Number} type
       */
  function _getTypeNumber(sText, nCorrectLevel) {
    var nType = 1;
    var length = _getUTF8Length(sText);
    for (var i = 0, len = QRCodeLimitLength.length; i <= len; i++) {
      var nLimit = 0;
      switch (nCorrectLevel) {
        case QRErrorCorrectLevel.L:
          nLimit = QRCodeLimitLength[i][0];
          break;
        case QRErrorCorrectLevel.M:
          nLimit = QRCodeLimitLength[i][1];
          break;
        case QRErrorCorrectLevel.Q:
          nLimit = QRCodeLimitLength[i][2];
          break;
        case QRErrorCorrectLevel.H:
          nLimit = QRCodeLimitLength[i][3];
          break;
      }
      if (length <= nLimit) {
        break;
      } else {
        nType++;
      }
    }
    if (nType > QRCodeLimitLength.length) {
      throw new Error("Too long data");
    }
    return nType;
  }
  function _getUTF8Length(sText) {
    var replacedText = encodeURI(sText).toString().replace(/\%[0-9a-fA-F]{2}/g, 'a');
    return replacedText.length + (replacedText.length != sText ? 3 : 0);
  }
  function QR8bitByte(data) {
    this.mode = QRMode.MODE_8BIT_BYTE;
    this.data = data;
    this.parsedData = [];

    // Added to support UTF-8 Characters
    for (var i = 0, l = this.data.length; i < l; i++) {
      var byteArray = [];
      var code = this.data.charCodeAt(i);
      if (code > 0x10000) {
        byteArray[0] = 0xF0 | (code & 0x1C0000) >>> 18;
        byteArray[1] = 0x80 | (code & 0x3F000) >>> 12;
        byteArray[2] = 0x80 | (code & 0xFC0) >>> 6;
        byteArray[3] = 0x80 | code & 0x3F;
      } else if (code > 0x800) {
        byteArray[0] = 0xE0 | (code & 0xF000) >>> 12;
        byteArray[1] = 0x80 | (code & 0xFC0) >>> 6;
        byteArray[2] = 0x80 | code & 0x3F;
      } else if (code > 0x80) {
        byteArray[0] = 0xC0 | (code & 0x7C0) >>> 6;
        byteArray[1] = 0x80 | code & 0x3F;
      } else {
        byteArray[0] = code;
      }
      this.parsedData.push(byteArray);
    }
    this.parsedData = Array.prototype.concat.apply([], this.parsedData);
    if (this.parsedData.length != this.data.length) {
      this.parsedData.unshift(191);
      this.parsedData.unshift(187);
      this.parsedData.unshift(239);
    }
  }
  QR8bitByte.prototype = {
    getLength: function getLength(buffer) {
      return this.parsedData.length;
    },
    write: function write(buffer) {
      for (var i = 0, l = this.parsedData.length; i < l; i++) {
        buffer.put(this.parsedData[i], 8);
      }
    }
  };

  // QRCodeModel
  function QRCodeModel(typeNumber, errorCorrectLevel) {
    this.typeNumber = typeNumber;
    this.errorCorrectLevel = errorCorrectLevel;
    this.modules = null;
    this.moduleCount = 0;
    this.dataCache = null;
    this.dataList = [];
  }
  QRCodeModel.prototype = {
    addData: function addData(data) {
      var newData = new QR8bitByte(data);
      this.dataList.push(newData);
      this.dataCache = null;
    },
    isDark: function isDark(row, col) {
      if (row < 0 || this.moduleCount <= row || col < 0 || this.moduleCount <= col) {
        throw new Error(row + "," + col);
      }
      return this.modules[row][col];
    },
    getModuleCount: function getModuleCount() {
      return this.moduleCount;
    },
    make: function make() {
      this.makeImpl(false, this.getBestMaskPattern());
    },
    makeImpl: function makeImpl(test, maskPattern) {
      this.moduleCount = this.typeNumber * 4 + 17;
      this.modules = new Array(this.moduleCount);
      for (var row = 0; row < this.moduleCount; row++) {
        this.modules[row] = new Array(this.moduleCount);
        for (var col = 0; col < this.moduleCount; col++) {
          this.modules[row][col] = null;
        }
      }
      this.setupPositionProbePattern(0, 0);
      this.setupPositionProbePattern(this.moduleCount - 7, 0);
      this.setupPositionProbePattern(0, this.moduleCount - 7);
      this.setupPositionAdjustPattern();
      this.setupTimingPattern();
      this.setupTypeInfo(test, maskPattern);
      if (this.typeNumber >= 7) {
        this.setupTypeNumber(test);
      }
      if (this.dataCache == null) {
        this.dataCache = QRCodeModel.createData(this.typeNumber, this.errorCorrectLevel, this.dataList);
      }
      this.mapData(this.dataCache, maskPattern);
    },
    setupPositionProbePattern: function setupPositionProbePattern(row, col) {
      for (var r = -1; r <= 7; r++) {
        if (row + r <= -1 || this.moduleCount <= row + r) continue;
        for (var c = -1; c <= 7; c++) {
          if (col + c <= -1 || this.moduleCount <= col + c) continue;
          if (0 <= r && r <= 6 && (c == 0 || c == 6) || 0 <= c && c <= 6 && (r == 0 || r == 6) || 2 <= r && r <= 4 && 2 <= c && c <= 4) {
            this.modules[row + r][col + c] = true;
          } else {
            this.modules[row + r][col + c] = false;
          }
        }
      }
    },
    getBestMaskPattern: function getBestMaskPattern() {
      var minLostPoint = 0;
      var pattern = 0;
      for (var i = 0; i < 8; i++) {
        this.makeImpl(true, i);
        var lostPoint = QRUtil.getLostPoint(this);
        if (i == 0 || minLostPoint > lostPoint) {
          minLostPoint = lostPoint;
          pattern = i;
        }
      }
      return pattern;
    },
    createMovieClip: function createMovieClip(target_mc, instance_name, depth) {
      var qr_mc = target_mc.createEmptyMovieClip(instance_name, depth);
      var cs = 1;
      this.make();
      for (var row = 0; row < this.modules.length; row++) {
        var y = row * cs;
        for (var col = 0; col < this.modules[row].length; col++) {
          var x = col * cs;
          var dark = this.modules[row][col];
          if (dark) {
            qr_mc.beginFill(0, 100);
            qr_mc.moveTo(x, y);
            qr_mc.lineTo(x + cs, y);
            qr_mc.lineTo(x + cs, y + cs);
            qr_mc.lineTo(x, y + cs);
            qr_mc.endFill();
          }
        }
      }
      return qr_mc;
    },
    setupTimingPattern: function setupTimingPattern() {
      for (var r = 8; r < this.moduleCount - 8; r++) {
        if (this.modules[r][6] != null) {
          continue;
        }
        this.modules[r][6] = r % 2 == 0;
      }
      for (var c = 8; c < this.moduleCount - 8; c++) {
        if (this.modules[6][c] != null) {
          continue;
        }
        this.modules[6][c] = c % 2 == 0;
      }
    },
    setupPositionAdjustPattern: function setupPositionAdjustPattern() {
      var pos = QRUtil.getPatternPosition(this.typeNumber);
      for (var i = 0; i < pos.length; i++) {
        for (var j = 0; j < pos.length; j++) {
          var row = pos[i];
          var col = pos[j];
          if (this.modules[row][col] != null) {
            continue;
          }
          for (var r = -2; r <= 2; r++) {
            for (var c = -2; c <= 2; c++) {
              if (r == -2 || r == 2 || c == -2 || c == 2 || r == 0 && c == 0) {
                this.modules[row + r][col + c] = true;
              } else {
                this.modules[row + r][col + c] = false;
              }
            }
          }
        }
      }
    },
    setupTypeNumber: function setupTypeNumber(test) {
      var bits = QRUtil.getBCHTypeNumber(this.typeNumber);
      for (var i = 0; i < 18; i++) {
        var mod = !test && (bits >> i & 1) == 1;
        this.modules[Math.floor(i / 3)][i % 3 + this.moduleCount - 8 - 3] = mod;
      }
      for (var i = 0; i < 18; i++) {
        var mod = !test && (bits >> i & 1) == 1;
        this.modules[i % 3 + this.moduleCount - 8 - 3][Math.floor(i / 3)] = mod;
      }
    },
    setupTypeInfo: function setupTypeInfo(test, maskPattern) {
      var data = this.errorCorrectLevel << 3 | maskPattern;
      var bits = QRUtil.getBCHTypeInfo(data);
      for (var i = 0; i < 15; i++) {
        var mod = !test && (bits >> i & 1) == 1;
        if (i < 6) {
          this.modules[i][8] = mod;
        } else if (i < 8) {
          this.modules[i + 1][8] = mod;
        } else {
          this.modules[this.moduleCount - 15 + i][8] = mod;
        }
      }
      for (var i = 0; i < 15; i++) {
        var mod = !test && (bits >> i & 1) == 1;
        if (i < 8) {
          this.modules[8][this.moduleCount - i - 1] = mod;
        } else if (i < 9) {
          this.modules[8][15 - i - 1 + 1] = mod;
        } else {
          this.modules[8][15 - i - 1] = mod;
        }
      }
      this.modules[this.moduleCount - 8][8] = !test;
    },
    mapData: function mapData(data, maskPattern) {
      var inc = -1;
      var row = this.moduleCount - 1;
      var bitIndex = 7;
      var byteIndex = 0;
      for (var col = this.moduleCount - 1; col > 0; col -= 2) {
        if (col == 6) col--;
        while (true) {
          for (var c = 0; c < 2; c++) {
            if (this.modules[row][col - c] == null) {
              var dark = false;
              if (byteIndex < data.length) {
                dark = (data[byteIndex] >>> bitIndex & 1) == 1;
              }
              var mask = QRUtil.getMask(maskPattern, row, col - c);
              if (mask) {
                dark = !dark;
              }
              this.modules[row][col - c] = dark;
              bitIndex--;
              if (bitIndex == -1) {
                byteIndex++;
                bitIndex = 7;
              }
            }
          }
          row += inc;
          if (row < 0 || this.moduleCount <= row) {
            row -= inc;
            inc = -inc;
            break;
          }
        }
      }
    }
  };
  QRCodeModel.PAD0 = 0xEC;
  QRCodeModel.PAD1 = 0x11;
  QRCodeModel.createData = function (typeNumber, errorCorrectLevel, dataList) {
    var rsBlocks = QRRSBlock.getRSBlocks(typeNumber, errorCorrectLevel);
    var buffer = new QRBitBuffer();
    for (var i = 0; i < dataList.length; i++) {
      var data = dataList[i];
      buffer.put(data.mode, 4);
      buffer.put(data.getLength(), QRUtil.getLengthInBits(data.mode, typeNumber));
      data.write(buffer);
    }
    var totalDataCount = 0;
    for (var i = 0; i < rsBlocks.length; i++) {
      totalDataCount += rsBlocks[i].dataCount;
    }
    if (buffer.getLengthInBits() > totalDataCount * 8) {
      throw new Error("code length overflow. (" + buffer.getLengthInBits() + ">" + totalDataCount * 8 + ")");
    }
    if (buffer.getLengthInBits() + 4 <= totalDataCount * 8) {
      buffer.put(0, 4);
    }
    while (buffer.getLengthInBits() % 8 != 0) {
      buffer.putBit(false);
    }
    while (true) {
      if (buffer.getLengthInBits() >= totalDataCount * 8) {
        break;
      }
      buffer.put(QRCodeModel.PAD0, 8);
      if (buffer.getLengthInBits() >= totalDataCount * 8) {
        break;
      }
      buffer.put(QRCodeModel.PAD1, 8);
    }
    return QRCodeModel.createBytes(buffer, rsBlocks);
  };
  QRCodeModel.createBytes = function (buffer, rsBlocks) {
    var offset = 0;
    var maxDcCount = 0;
    var maxEcCount = 0;
    var dcdata = new Array(rsBlocks.length);
    var ecdata = new Array(rsBlocks.length);
    for (var r = 0; r < rsBlocks.length; r++) {
      var dcCount = rsBlocks[r].dataCount;
      var ecCount = rsBlocks[r].totalCount - dcCount;
      maxDcCount = Math.max(maxDcCount, dcCount);
      maxEcCount = Math.max(maxEcCount, ecCount);
      dcdata[r] = new Array(dcCount);
      for (var i = 0; i < dcdata[r].length; i++) {
        dcdata[r][i] = 0xff & buffer.buffer[i + offset];
      }
      offset += dcCount;
      var rsPoly = QRUtil.getErrorCorrectPolynomial(ecCount);
      var rawPoly = new QRPolynomial(dcdata[r], rsPoly.getLength() - 1);
      var modPoly = rawPoly.mod(rsPoly);
      ecdata[r] = new Array(rsPoly.getLength() - 1);
      for (var i = 0; i < ecdata[r].length; i++) {
        var modIndex = i + modPoly.getLength() - ecdata[r].length;
        ecdata[r][i] = modIndex >= 0 ? modPoly.get(modIndex) : 0;
      }
    }
    var totalCodeCount = 0;
    for (var i = 0; i < rsBlocks.length; i++) {
      totalCodeCount += rsBlocks[i].totalCount;
    }
    var data = new Array(totalCodeCount);
    var index = 0;
    for (var i = 0; i < maxDcCount; i++) {
      for (var r = 0; r < rsBlocks.length; r++) {
        if (i < dcdata[r].length) {
          data[index++] = dcdata[r][i];
        }
      }
    }
    for (var i = 0; i < maxEcCount; i++) {
      for (var r = 0; r < rsBlocks.length; r++) {
        if (i < ecdata[r].length) {
          data[index++] = ecdata[r][i];
        }
      }
    }
    return data;
  };
  var QRMode = {
    MODE_NUMBER: 1 << 0,
    MODE_ALPHA_NUM: 1 << 1,
    MODE_8BIT_BYTE: 1 << 2,
    MODE_KANJI: 1 << 3
  };
  var QRErrorCorrectLevel = {
    L: 1,
    M: 0,
    Q: 3,
    H: 2
  };
  var QRMaskPattern = {
    PATTERN000: 0,
    PATTERN001: 1,
    PATTERN010: 2,
    PATTERN011: 3,
    PATTERN100: 4,
    PATTERN101: 5,
    PATTERN110: 6,
    PATTERN111: 7
  };
  var QRUtil = {
    PATTERN_POSITION_TABLE: [[], [6, 18], [6, 22], [6, 26], [6, 30], [6, 34], [6, 22, 38], [6, 24, 42], [6, 26, 46], [6, 28, 50], [6, 30, 54], [6, 32, 58], [6, 34, 62], [6, 26, 46, 66], [6, 26, 48, 70], [6, 26, 50, 74], [6, 30, 54, 78], [6, 30, 56, 82], [6, 30, 58, 86], [6, 34, 62, 90], [6, 28, 50, 72, 94], [6, 26, 50, 74, 98], [6, 30, 54, 78, 102], [6, 28, 54, 80, 106], [6, 32, 58, 84, 110], [6, 30, 58, 86, 114], [6, 34, 62, 90, 118], [6, 26, 50, 74, 98, 122], [6, 30, 54, 78, 102, 126], [6, 26, 52, 78, 104, 130], [6, 30, 56, 82, 108, 134], [6, 34, 60, 86, 112, 138], [6, 30, 58, 86, 114, 142], [6, 34, 62, 90, 118, 146], [6, 30, 54, 78, 102, 126, 150], [6, 24, 50, 76, 102, 128, 154], [6, 28, 54, 80, 106, 132, 158], [6, 32, 58, 84, 110, 136, 162], [6, 26, 54, 82, 110, 138, 166], [6, 30, 58, 86, 114, 142, 170]],
    G15: 1 << 10 | 1 << 8 | 1 << 5 | 1 << 4 | 1 << 2 | 1 << 1 | 1 << 0,
    G18: 1 << 12 | 1 << 11 | 1 << 10 | 1 << 9 | 1 << 8 | 1 << 5 | 1 << 2 | 1 << 0,
    G15_MASK: 1 << 14 | 1 << 12 | 1 << 10 | 1 << 4 | 1 << 1,
    getBCHTypeInfo: function getBCHTypeInfo(data) {
      var d = data << 10;
      while (QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G15) >= 0) {
        d ^= QRUtil.G15 << QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G15);
      }
      return (data << 10 | d) ^ QRUtil.G15_MASK;
    },
    getBCHTypeNumber: function getBCHTypeNumber(data) {
      var d = data << 12;
      while (QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G18) >= 0) {
        d ^= QRUtil.G18 << QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G18);
      }
      return data << 12 | d;
    },
    getBCHDigit: function getBCHDigit(data) {
      var digit = 0;
      while (data != 0) {
        digit++;
        data >>>= 1;
      }
      return digit;
    },
    getPatternPosition: function getPatternPosition(typeNumber) {
      return QRUtil.PATTERN_POSITION_TABLE[typeNumber - 1];
    },
    getMask: function getMask(maskPattern, i, j) {
      switch (maskPattern) {
        case QRMaskPattern.PATTERN000:
          return (i + j) % 2 == 0;
        case QRMaskPattern.PATTERN001:
          return i % 2 == 0;
        case QRMaskPattern.PATTERN010:
          return j % 3 == 0;
        case QRMaskPattern.PATTERN011:
          return (i + j) % 3 == 0;
        case QRMaskPattern.PATTERN100:
          return (Math.floor(i / 2) + Math.floor(j / 3)) % 2 == 0;
        case QRMaskPattern.PATTERN101:
          return i * j % 2 + i * j % 3 == 0;
        case QRMaskPattern.PATTERN110:
          return (i * j % 2 + i * j % 3) % 2 == 0;
        case QRMaskPattern.PATTERN111:
          return (i * j % 3 + (i + j) % 2) % 2 == 0;
        default:
          throw new Error("bad maskPattern:" + maskPattern);
      }
    },
    getErrorCorrectPolynomial: function getErrorCorrectPolynomial(errorCorrectLength) {
      var a = new QRPolynomial([1], 0);
      for (var i = 0; i < errorCorrectLength; i++) {
        a = a.multiply(new QRPolynomial([1, QRMath.gexp(i)], 0));
      }
      return a;
    },
    getLengthInBits: function getLengthInBits(mode, type) {
      if (1 <= type && type < 10) {
        switch (mode) {
          case QRMode.MODE_NUMBER:
            return 10;
          case QRMode.MODE_ALPHA_NUM:
            return 9;
          case QRMode.MODE_8BIT_BYTE:
            return 8;
          case QRMode.MODE_KANJI:
            return 8;
          default:
            throw new Error("mode:" + mode);
        }
      } else if (type < 27) {
        switch (mode) {
          case QRMode.MODE_NUMBER:
            return 12;
          case QRMode.MODE_ALPHA_NUM:
            return 11;
          case QRMode.MODE_8BIT_BYTE:
            return 16;
          case QRMode.MODE_KANJI:
            return 10;
          default:
            throw new Error("mode:" + mode);
        }
      } else if (type < 41) {
        switch (mode) {
          case QRMode.MODE_NUMBER:
            return 14;
          case QRMode.MODE_ALPHA_NUM:
            return 13;
          case QRMode.MODE_8BIT_BYTE:
            return 16;
          case QRMode.MODE_KANJI:
            return 12;
          default:
            throw new Error("mode:" + mode);
        }
      } else {
        throw new Error("type:" + type);
      }
    },
    getLostPoint: function getLostPoint(qrCode) {
      var moduleCount = qrCode.getModuleCount();
      var lostPoint = 0;
      for (var row = 0; row < moduleCount; row++) {
        for (var col = 0; col < moduleCount; col++) {
          var sameCount = 0;
          var dark = qrCode.isDark(row, col);
          for (var r = -1; r <= 1; r++) {
            if (row + r < 0 || moduleCount <= row + r) {
              continue;
            }
            for (var c = -1; c <= 1; c++) {
              if (col + c < 0 || moduleCount <= col + c) {
                continue;
              }
              if (r == 0 && c == 0) {
                continue;
              }
              if (dark == qrCode.isDark(row + r, col + c)) {
                sameCount++;
              }
            }
          }
          if (sameCount > 5) {
            lostPoint += 3 + sameCount - 5;
          }
        }
      }
      for (var row = 0; row < moduleCount - 1; row++) {
        for (var col = 0; col < moduleCount - 1; col++) {
          var count = 0;
          if (qrCode.isDark(row, col)) count++;
          if (qrCode.isDark(row + 1, col)) count++;
          if (qrCode.isDark(row, col + 1)) count++;
          if (qrCode.isDark(row + 1, col + 1)) count++;
          if (count == 0 || count == 4) {
            lostPoint += 3;
          }
        }
      }
      for (var row = 0; row < moduleCount; row++) {
        for (var col = 0; col < moduleCount - 6; col++) {
          if (qrCode.isDark(row, col) && !qrCode.isDark(row, col + 1) && qrCode.isDark(row, col + 2) && qrCode.isDark(row, col + 3) && qrCode.isDark(row, col + 4) && !qrCode.isDark(row, col + 5) && qrCode.isDark(row, col + 6)) {
            lostPoint += 40;
          }
        }
      }
      for (var col = 0; col < moduleCount; col++) {
        for (var row = 0; row < moduleCount - 6; row++) {
          if (qrCode.isDark(row, col) && !qrCode.isDark(row + 1, col) && qrCode.isDark(row + 2, col) && qrCode.isDark(row + 3, col) && qrCode.isDark(row + 4, col) && !qrCode.isDark(row + 5, col) && qrCode.isDark(row + 6, col)) {
            lostPoint += 40;
          }
        }
      }
      var darkCount = 0;
      for (var col = 0; col < moduleCount; col++) {
        for (var row = 0; row < moduleCount; row++) {
          if (qrCode.isDark(row, col)) {
            darkCount++;
          }
        }
      }
      var ratio = Math.abs(100 * darkCount / moduleCount / moduleCount - 50) / 5;
      lostPoint += ratio * 10;
      return lostPoint;
    }
  };
  var QRMath = {
    glog: function glog(n) {
      if (n < 1) {
        throw new Error("glog(" + n + ")");
      }
      return QRMath.LOG_TABLE[n];
    },
    gexp: function gexp(n) {
      while (n < 0) {
        n += 255;
      }
      while (n >= 256) {
        n -= 255;
      }
      return QRMath.EXP_TABLE[n];
    },
    EXP_TABLE: new Array(256),
    LOG_TABLE: new Array(256)
  };
  for (var i = 0; i < 8; i++) {
    QRMath.EXP_TABLE[i] = 1 << i;
  }
  for (var i = 8; i < 256; i++) {
    QRMath.EXP_TABLE[i] = QRMath.EXP_TABLE[i - 4] ^ QRMath.EXP_TABLE[i - 5] ^ QRMath.EXP_TABLE[i - 6] ^ QRMath.EXP_TABLE[i - 8];
  }
  for (var i = 0; i < 255; i++) {
    QRMath.LOG_TABLE[QRMath.EXP_TABLE[i]] = i;
  }
  function QRPolynomial(num, shift) {
    if (num.length == undefined) {
      throw new Error(num.length + "/" + shift);
    }
    var offset = 0;
    while (offset < num.length && num[offset] == 0) {
      offset++;
    }
    this.num = new Array(num.length - offset + shift);
    for (var i = 0; i < num.length - offset; i++) {
      this.num[i] = num[i + offset];
    }
  }
  QRPolynomial.prototype = {
    get: function get(index) {
      return this.num[index];
    },
    getLength: function getLength() {
      return this.num.length;
    },
    multiply: function multiply(e) {
      var num = new Array(this.getLength() + e.getLength() - 1);
      for (var i = 0; i < this.getLength(); i++) {
        for (var j = 0; j < e.getLength(); j++) {
          num[i + j] ^= QRMath.gexp(QRMath.glog(this.get(i)) + QRMath.glog(e.get(j)));
        }
      }
      return new QRPolynomial(num, 0);
    },
    mod: function mod(e) {
      if (this.getLength() - e.getLength() < 0) {
        return this;
      }
      var ratio = QRMath.glog(this.get(0)) - QRMath.glog(e.get(0));
      var num = new Array(this.getLength());
      for (var i = 0; i < this.getLength(); i++) {
        num[i] = this.get(i);
      }
      for (var i = 0; i < e.getLength(); i++) {
        num[i] ^= QRMath.gexp(QRMath.glog(e.get(i)) + ratio);
      }
      return new QRPolynomial(num, 0).mod(e);
    }
  };
  function QRRSBlock(totalCount, dataCount) {
    this.totalCount = totalCount;
    this.dataCount = dataCount;
  }
  QRRSBlock.RS_BLOCK_TABLE = [[1, 26, 19], [1, 26, 16], [1, 26, 13], [1, 26, 9], [1, 44, 34], [1, 44, 28], [1, 44, 22], [1, 44, 16], [1, 70, 55], [1, 70, 44], [2, 35, 17], [2, 35, 13], [1, 100, 80], [2, 50, 32], [2, 50, 24], [4, 25, 9], [1, 134, 108], [2, 67, 43], [2, 33, 15, 2, 34, 16], [2, 33, 11, 2, 34, 12], [2, 86, 68], [4, 43, 27], [4, 43, 19], [4, 43, 15], [2, 98, 78], [4, 49, 31], [2, 32, 14, 4, 33, 15], [4, 39, 13, 1, 40, 14], [2, 121, 97], [2, 60, 38, 2, 61, 39], [4, 40, 18, 2, 41, 19], [4, 40, 14, 2, 41, 15], [2, 146, 116], [3, 58, 36, 2, 59, 37], [4, 36, 16, 4, 37, 17], [4, 36, 12, 4, 37, 13], [2, 86, 68, 2, 87, 69], [4, 69, 43, 1, 70, 44], [6, 43, 19, 2, 44, 20], [6, 43, 15, 2, 44, 16], [4, 101, 81], [1, 80, 50, 4, 81, 51], [4, 50, 22, 4, 51, 23], [3, 36, 12, 8, 37, 13], [2, 116, 92, 2, 117, 93], [6, 58, 36, 2, 59, 37], [4, 46, 20, 6, 47, 21], [7, 42, 14, 4, 43, 15], [4, 133, 107], [8, 59, 37, 1, 60, 38], [8, 44, 20, 4, 45, 21], [12, 33, 11, 4, 34, 12], [3, 145, 115, 1, 146, 116], [4, 64, 40, 5, 65, 41], [11, 36, 16, 5, 37, 17], [11, 36, 12, 5, 37, 13], [5, 109, 87, 1, 110, 88], [5, 65, 41, 5, 66, 42], [5, 54, 24, 7, 55, 25], [11, 36, 12], [5, 122, 98, 1, 123, 99], [7, 73, 45, 3, 74, 46], [15, 43, 19, 2, 44, 20], [3, 45, 15, 13, 46, 16], [1, 135, 107, 5, 136, 108], [10, 74, 46, 1, 75, 47], [1, 50, 22, 15, 51, 23], [2, 42, 14, 17, 43, 15], [5, 150, 120, 1, 151, 121], [9, 69, 43, 4, 70, 44], [17, 50, 22, 1, 51, 23], [2, 42, 14, 19, 43, 15], [3, 141, 113, 4, 142, 114], [3, 70, 44, 11, 71, 45], [17, 47, 21, 4, 48, 22], [9, 39, 13, 16, 40, 14], [3, 135, 107, 5, 136, 108], [3, 67, 41, 13, 68, 42], [15, 54, 24, 5, 55, 25], [15, 43, 15, 10, 44, 16], [4, 144, 116, 4, 145, 117], [17, 68, 42], [17, 50, 22, 6, 51, 23], [19, 46, 16, 6, 47, 17], [2, 139, 111, 7, 140, 112], [17, 74, 46], [7, 54, 24, 16, 55, 25], [34, 37, 13], [4, 151, 121, 5, 152, 122], [4, 75, 47, 14, 76, 48], [11, 54, 24, 14, 55, 25], [16, 45, 15, 14, 46, 16], [6, 147, 117, 4, 148, 118], [6, 73, 45, 14, 74, 46], [11, 54, 24, 16, 55, 25], [30, 46, 16, 2, 47, 17], [8, 132, 106, 4, 133, 107], [8, 75, 47, 13, 76, 48], [7, 54, 24, 22, 55, 25], [22, 45, 15, 13, 46, 16], [10, 142, 114, 2, 143, 115], [19, 74, 46, 4, 75, 47], [28, 50, 22, 6, 51, 23], [33, 46, 16, 4, 47, 17], [8, 152, 122, 4, 153, 123], [22, 73, 45, 3, 74, 46], [8, 53, 23, 26, 54, 24], [12, 45, 15, 28, 46, 16], [3, 147, 117, 10, 148, 118], [3, 73, 45, 23, 74, 46], [4, 54, 24, 31, 55, 25], [11, 45, 15, 31, 46, 16], [7, 146, 116, 7, 147, 117], [21, 73, 45, 7, 74, 46], [1, 53, 23, 37, 54, 24], [19, 45, 15, 26, 46, 16], [5, 145, 115, 10, 146, 116], [19, 75, 47, 10, 76, 48], [15, 54, 24, 25, 55, 25], [23, 45, 15, 25, 46, 16], [13, 145, 115, 3, 146, 116], [2, 74, 46, 29, 75, 47], [42, 54, 24, 1, 55, 25], [23, 45, 15, 28, 46, 16], [17, 145, 115], [10, 74, 46, 23, 75, 47], [10, 54, 24, 35, 55, 25], [19, 45, 15, 35, 46, 16], [17, 145, 115, 1, 146, 116], [14, 74, 46, 21, 75, 47], [29, 54, 24, 19, 55, 25], [11, 45, 15, 46, 46, 16], [13, 145, 115, 6, 146, 116], [14, 74, 46, 23, 75, 47], [44, 54, 24, 7, 55, 25], [59, 46, 16, 1, 47, 17], [12, 151, 121, 7, 152, 122], [12, 75, 47, 26, 76, 48], [39, 54, 24, 14, 55, 25], [22, 45, 15, 41, 46, 16], [6, 151, 121, 14, 152, 122], [6, 75, 47, 34, 76, 48], [46, 54, 24, 10, 55, 25], [2, 45, 15, 64, 46, 16], [17, 152, 122, 4, 153, 123], [29, 74, 46, 14, 75, 47], [49, 54, 24, 10, 55, 25], [24, 45, 15, 46, 46, 16], [4, 152, 122, 18, 153, 123], [13, 74, 46, 32, 75, 47], [48, 54, 24, 14, 55, 25], [42, 45, 15, 32, 46, 16], [20, 147, 117, 4, 148, 118], [40, 75, 47, 7, 76, 48], [43, 54, 24, 22, 55, 25], [10, 45, 15, 67, 46, 16], [19, 148, 118, 6, 149, 119], [18, 75, 47, 31, 76, 48], [34, 54, 24, 34, 55, 25], [20, 45, 15, 61, 46, 16]];
  QRRSBlock.getRSBlocks = function (typeNumber, errorCorrectLevel) {
    var rsBlock = QRRSBlock.getRsBlockTable(typeNumber, errorCorrectLevel);
    if (rsBlock == undefined) {
      throw new Error("bad rs block @ typeNumber:" + typeNumber + "/errorCorrectLevel:" + errorCorrectLevel);
    }
    var length = rsBlock.length / 3;
    var list = [];
    for (var i = 0; i < length; i++) {
      var count = rsBlock[i * 3 + 0];
      var totalCount = rsBlock[i * 3 + 1];
      var dataCount = rsBlock[i * 3 + 2];
      for (var j = 0; j < count; j++) {
        list.push(new QRRSBlock(totalCount, dataCount));
      }
    }
    return list;
  };
  QRRSBlock.getRsBlockTable = function (typeNumber, errorCorrectLevel) {
    switch (errorCorrectLevel) {
      case QRErrorCorrectLevel.L:
        return QRRSBlock.RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 0];
      case QRErrorCorrectLevel.M:
        return QRRSBlock.RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 1];
      case QRErrorCorrectLevel.Q:
        return QRRSBlock.RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 2];
      case QRErrorCorrectLevel.H:
        return QRRSBlock.RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 3];
      default:
        return undefined;
    }
  };
  function QRBitBuffer() {
    this.buffer = [];
    this.length = 0;
  }
  QRBitBuffer.prototype = {
    get: function get(index) {
      var bufIndex = Math.floor(index / 8);
      return (this.buffer[bufIndex] >>> 7 - index % 8 & 1) == 1;
    },
    put: function put(num, length) {
      for (var i = 0; i < length; i++) {
        this.putBit((num >>> length - i - 1 & 1) == 1);
      }
    },
    getLengthInBits: function getLengthInBits() {
      return this.length;
    },
    putBit: function putBit(bit) {
      var bufIndex = Math.floor(this.length / 8);
      if (this.buffer.length <= bufIndex) {
        this.buffer.push(0);
      }
      if (bit) {
        this.buffer[bufIndex] |= 0x80 >>> this.length % 8;
      }
      this.length++;
    }
  };
  var QRCodeLimitLength = [[17, 14, 11, 7], [32, 26, 20, 14], [53, 42, 32, 24], [78, 62, 46, 34], [106, 84, 60, 44], [134, 106, 74, 58], [154, 122, 86, 64], [192, 152, 108, 84], [230, 180, 130, 98], [271, 213, 151, 119], [321, 251, 177, 137], [367, 287, 203, 155], [425, 331, 241, 177], [458, 362, 258, 194], [520, 412, 292, 220], [586, 450, 322, 250], [644, 504, 364, 280], [718, 560, 394, 310], [792, 624, 442, 338], [858, 666, 482, 382], [929, 711, 509, 403], [1003, 779, 565, 439], [1091, 857, 611, 461], [1171, 911, 661, 511], [1273, 997, 715, 535], [1367, 1059, 751, 593], [1465, 1125, 805, 625], [1528, 1190, 868, 658], [1628, 1264, 908, 698], [1732, 1370, 982, 742], [1840, 1452, 1030, 790], [1952, 1538, 1112, 842], [2068, 1628, 1168, 898], [2188, 1722, 1228, 958], [2303, 1809, 1283, 983], [2431, 1911, 1351, 1051], [2563, 1989, 1423, 1093], [2699, 2099, 1499, 1139], [2809, 2213, 1579, 1219], [2953, 2331, 1663, 1273]];

  // QRCode object
  QRCode = function QRCode(canvasId, vOption) {
    this._htOption = {
      width: 256,
      height: 256,
      typeNumber: 4,
      colorDark: "#000000",
      colorLight: "#ffffff",
      correctLevel: QRErrorCorrectLevel.H
    };
    if (typeof vOption === 'string') {
      vOption = {
        text: vOption
      };
    }

    // Overwrites options
    if (vOption) {
      for (var i in vOption) {
        this._htOption[i] = vOption[i];
      }
    }
    this._oQRCode = null;
    this.canvasId = canvasId;
    if (this._htOption.text && this.canvasId) {
      this.makeCode(this._htOption.text);
    }
  };
  QRCode.prototype.makeCode = function (sText) {
    this._oQRCode = new QRCodeModel(_getTypeNumber(sText, this._htOption.correctLevel), this._htOption.correctLevel);
    this._oQRCode.addData(sText);
    this._oQRCode.make();
    this.makeImage();
  };
  QRCode.prototype.makeImage = function () {
    var _oContext;
    if (this._htOption.usingIn) {
      _oContext = wx.createCanvasContext(this.canvasId, this._htOption.usingIn);
    } else {
      _oContext = wx.createCanvasContext(this.canvasId);
    }
    var _htOption = this._htOption;
    var oQRCode = this._oQRCode;
    var nCount = oQRCode.getModuleCount();
    var nWidth = _htOption.width / nCount;
    var nHeight = _htOption.height / nCount;
    var nRoundedWidth = Math.round(nWidth);
    var nRoundedHeight = Math.round(nHeight);
    if (_htOption.image && _htOption.image != '') {
      _oContext.drawImage(_htOption.image, 0, 0, _htOption.width, _htOption.height);
    }
    for (var row = 0; row < nCount; row++) {
      for (var col = 0; col < nCount; col++) {
        var bIsDark = oQRCode.isDark(row, col);
        var nLeft = col * nWidth;
        var nTop = row * nHeight;
        _oContext.setStrokeStyle(bIsDark ? _htOption.colorDark : _htOption.colorLight);
        // _oContext.setStrokeStyle('yellow')
        _oContext.setLineWidth(1);
        _oContext.setFillStyle(bIsDark ? _htOption.colorDark : _htOption.colorLight);
        // _oContext.setFillStyle('red')
        // if (bIsDark) {
        _oContext.fillRect(nLeft, nTop, nWidth, nHeight);
        // }

        // 안티 앨리어싱 방지 처리
        // if (bIsDark) {
        _oContext.strokeRect(Math.floor(nLeft) + 0.5, Math.floor(nTop) + 0.5, nRoundedWidth, nRoundedHeight);
        _oContext.strokeRect(Math.ceil(nLeft) - 0.5, Math.ceil(nTop) - 0.5, nRoundedWidth, nRoundedHeight);
        // }
        // _oContext.fillRect(
        //     Math.floor(nLeft) + 0.5,
        //     Math.floor(nTop) + 0.5,
        //     nRoundedWidth,
        //     nRoundedHeight
        // );
        // _oContext.fillRect(
        //     Math.ceil(nLeft) - 0.5,
        //     Math.ceil(nTop) - 0.5,
        //     nRoundedWidth,
        //     nRoundedHeight
        // );
        // _oContext.clearRect(
        //     Math.floor(nLeft) + 0.5,
        //     Math.floor(nTop) + 0.5,
        //     nRoundedWidth,
        //     nRoundedHeight
        // );
        // _oContext.clearRect(
        //     Math.ceil(nLeft) - 0.5,
        //     Math.ceil(nTop) - 0.5,
        //     nRoundedWidth,
        //     nRoundedHeight
        // );
      }
    }

    _oContext.draw();
  };

  // 保存为图片，将临时路径传给回调
  QRCode.prototype.exportImage = function (callback) {
    if (!callback) {
      return;
    }
    wx.canvasToTempFilePath({
      x: 0,
      y: 0,
      width: this._htOption.width,
      height: this._htOption.height,
      destWidth: this._htOption.width,
      destHeight: this._htOption.height,
      canvasId: this.canvasId,
      success: function success(res) {
        console.log(res.tempFilePath);
        callback(res.tempFilePath);
      }
    });
  };
  QRCode.CorrectLevel = QRErrorCorrectLevel;
})();
module.exports = QRCode;
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/uni-mp-weixin/dist/wx.js */ 1)["default"]))

/***/ }),
/* 173 */,
/* 174 */,
/* 175 */,
/* 176 */,
/* 177 */,
/* 178 */,
/* 179 */,
/* 180 */
/*!************************************************************************************!*\
  !*** F:/project/qianduan/zhanhuitong_yudengji_git/components/tki-qrcode/qrcode.js ***!
  \************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(uni) {

var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ 4);
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _typeof2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/typeof */ 13));
var QRCode = {};
(function () {
  /**
   * 获取单个字符的utf8编码
   * unicode BMP平面约65535个字符
   * @param {num} code
   * return {array}
   */
  function unicodeFormat8(code) {
    // 1 byte
    var c0, c1, c2;
    if (code < 128) {
      return [code];
      // 2 bytes
    } else if (code < 2048) {
      c0 = 192 + (code >> 6);
      c1 = 128 + (code & 63);
      return [c0, c1];
      // 3 bytes
    } else {
      c0 = 224 + (code >> 12);
      c1 = 128 + (code >> 6 & 63);
      c2 = 128 + (code & 63);
      return [c0, c1, c2];
    }
  }
  /**
   * 获取字符串的utf8编码字节串
   * @param {string} string
   * @return {array}
   */
  function getUTF8Bytes(string) {
    var utf8codes = [];
    for (var i = 0; i < string.length; i++) {
      var code = string.charCodeAt(i);
      var utf8 = unicodeFormat8(code);
      for (var j = 0; j < utf8.length; j++) {
        utf8codes.push(utf8[j]);
      }
    }
    return utf8codes;
  }
  /**
   * 二维码算法实现
   * @param {string} data              要编码的信息字符串
   * @param {num} errorCorrectLevel 纠错等级
   */
  function QRCodeAlg(data, errorCorrectLevel) {
    this.typeNumber = -1; //版本
    this.errorCorrectLevel = errorCorrectLevel;
    this.modules = null; //二维矩阵，存放最终结果
    this.moduleCount = 0; //矩阵大小
    this.dataCache = null; //数据缓存
    this.rsBlocks = null; //版本数据信息
    this.totalDataCount = -1; //可使用的数据量
    this.data = data;
    this.utf8bytes = getUTF8Bytes(data);
    this.make();
  }
  QRCodeAlg.prototype = {
    constructor: QRCodeAlg,
    /**
     * 获取二维码矩阵大小
     * @return {num} 矩阵大小
     */
    getModuleCount: function getModuleCount() {
      return this.moduleCount;
    },
    /**
     * 编码
     */
    make: function make() {
      this.getRightType();
      this.dataCache = this.createData();
      this.createQrcode();
    },
    /**
     * 设置二位矩阵功能图形
     * @param  {bool} test 表示是否在寻找最好掩膜阶段
     * @param  {num} maskPattern 掩膜的版本
     */
    makeImpl: function makeImpl(maskPattern) {
      this.moduleCount = this.typeNumber * 4 + 17;
      this.modules = new Array(this.moduleCount);
      for (var row = 0; row < this.moduleCount; row++) {
        this.modules[row] = new Array(this.moduleCount);
      }
      this.setupPositionProbePattern(0, 0);
      this.setupPositionProbePattern(this.moduleCount - 7, 0);
      this.setupPositionProbePattern(0, this.moduleCount - 7);
      this.setupPositionAdjustPattern();
      this.setupTimingPattern();
      this.setupTypeInfo(true, maskPattern);
      if (this.typeNumber >= 7) {
        this.setupTypeNumber(true);
      }
      this.mapData(this.dataCache, maskPattern);
    },
    /**
     * 设置二维码的位置探测图形
     * @param  {num} row 探测图形的中心横坐标
     * @param  {num} col 探测图形的中心纵坐标
     */
    setupPositionProbePattern: function setupPositionProbePattern(row, col) {
      for (var r = -1; r <= 7; r++) {
        if (row + r <= -1 || this.moduleCount <= row + r) continue;
        for (var c = -1; c <= 7; c++) {
          if (col + c <= -1 || this.moduleCount <= col + c) continue;
          if (0 <= r && r <= 6 && (c == 0 || c == 6) || 0 <= c && c <= 6 && (r == 0 || r == 6) || 2 <= r && r <= 4 && 2 <= c && c <= 4) {
            this.modules[row + r][col + c] = true;
          } else {
            this.modules[row + r][col + c] = false;
          }
        }
      }
    },
    /**
     * 创建二维码
     * @return {[type]} [description]
     */
    createQrcode: function createQrcode() {
      var minLostPoint = 0;
      var pattern = 0;
      var bestModules = null;
      for (var i = 0; i < 8; i++) {
        this.makeImpl(i);
        var lostPoint = QRUtil.getLostPoint(this);
        if (i == 0 || minLostPoint > lostPoint) {
          minLostPoint = lostPoint;
          pattern = i;
          bestModules = this.modules;
        }
      }
      this.modules = bestModules;
      this.setupTypeInfo(false, pattern);
      if (this.typeNumber >= 7) {
        this.setupTypeNumber(false);
      }
    },
    /**
     * 设置定位图形
     * @return {[type]} [description]
     */
    setupTimingPattern: function setupTimingPattern() {
      for (var r = 8; r < this.moduleCount - 8; r++) {
        if (this.modules[r][6] != null) {
          continue;
        }
        this.modules[r][6] = r % 2 == 0;
        if (this.modules[6][r] != null) {
          continue;
        }
        this.modules[6][r] = r % 2 == 0;
      }
    },
    /**
     * 设置矫正图形
     * @return {[type]} [description]
     */
    setupPositionAdjustPattern: function setupPositionAdjustPattern() {
      var pos = QRUtil.getPatternPosition(this.typeNumber);
      for (var i = 0; i < pos.length; i++) {
        for (var j = 0; j < pos.length; j++) {
          var row = pos[i];
          var col = pos[j];
          if (this.modules[row][col] != null) {
            continue;
          }
          for (var r = -2; r <= 2; r++) {
            for (var c = -2; c <= 2; c++) {
              if (r == -2 || r == 2 || c == -2 || c == 2 || r == 0 && c == 0) {
                this.modules[row + r][col + c] = true;
              } else {
                this.modules[row + r][col + c] = false;
              }
            }
          }
        }
      }
    },
    /**
     * 设置版本信息（7以上版本才有）
     * @param  {bool} test 是否处于判断最佳掩膜阶段
     * @return {[type]}      [description]
     */
    setupTypeNumber: function setupTypeNumber(test) {
      var bits = QRUtil.getBCHTypeNumber(this.typeNumber);
      for (var i = 0; i < 18; i++) {
        var mod = !test && (bits >> i & 1) == 1;
        this.modules[Math.floor(i / 3)][i % 3 + this.moduleCount - 8 - 3] = mod;
        this.modules[i % 3 + this.moduleCount - 8 - 3][Math.floor(i / 3)] = mod;
      }
    },
    /**
     * 设置格式信息（纠错等级和掩膜版本）
     * @param  {bool} test
     * @param  {num} maskPattern 掩膜版本
     * @return {}
     */
    setupTypeInfo: function setupTypeInfo(test, maskPattern) {
      var data = QRErrorCorrectLevel[this.errorCorrectLevel] << 3 | maskPattern;
      var bits = QRUtil.getBCHTypeInfo(data);
      // vertical
      for (var i = 0; i < 15; i++) {
        var mod = !test && (bits >> i & 1) == 1;
        if (i < 6) {
          this.modules[i][8] = mod;
        } else if (i < 8) {
          this.modules[i + 1][8] = mod;
        } else {
          this.modules[this.moduleCount - 15 + i][8] = mod;
        }
        // horizontal
        var mod = !test && (bits >> i & 1) == 1;
        if (i < 8) {
          this.modules[8][this.moduleCount - i - 1] = mod;
        } else if (i < 9) {
          this.modules[8][15 - i - 1 + 1] = mod;
        } else {
          this.modules[8][15 - i - 1] = mod;
        }
      }
      // fixed module
      this.modules[this.moduleCount - 8][8] = !test;
    },
    /**
     * 数据编码
     * @return {[type]} [description]
     */
    createData: function createData() {
      var buffer = new QRBitBuffer();
      var lengthBits = this.typeNumber > 9 ? 16 : 8;
      buffer.put(4, 4); //添加模式
      buffer.put(this.utf8bytes.length, lengthBits);
      for (var i = 0, l = this.utf8bytes.length; i < l; i++) {
        buffer.put(this.utf8bytes[i], 8);
      }
      if (buffer.length + 4 <= this.totalDataCount * 8) {
        buffer.put(0, 4);
      }
      // padding
      while (buffer.length % 8 != 0) {
        buffer.putBit(false);
      }
      // padding
      while (true) {
        if (buffer.length >= this.totalDataCount * 8) {
          break;
        }
        buffer.put(QRCodeAlg.PAD0, 8);
        if (buffer.length >= this.totalDataCount * 8) {
          break;
        }
        buffer.put(QRCodeAlg.PAD1, 8);
      }
      return this.createBytes(buffer);
    },
    /**
     * 纠错码编码
     * @param  {buffer} buffer 数据编码
     * @return {[type]}
     */
    createBytes: function createBytes(buffer) {
      var offset = 0;
      var maxDcCount = 0;
      var maxEcCount = 0;
      var length = this.rsBlock.length / 3;
      var rsBlocks = new Array();
      for (var i = 0; i < length; i++) {
        var count = this.rsBlock[i * 3 + 0];
        var totalCount = this.rsBlock[i * 3 + 1];
        var dataCount = this.rsBlock[i * 3 + 2];
        for (var j = 0; j < count; j++) {
          rsBlocks.push([dataCount, totalCount]);
        }
      }
      var dcdata = new Array(rsBlocks.length);
      var ecdata = new Array(rsBlocks.length);
      for (var r = 0; r < rsBlocks.length; r++) {
        var dcCount = rsBlocks[r][0];
        var ecCount = rsBlocks[r][1] - dcCount;
        maxDcCount = Math.max(maxDcCount, dcCount);
        maxEcCount = Math.max(maxEcCount, ecCount);
        dcdata[r] = new Array(dcCount);
        for (var i = 0; i < dcdata[r].length; i++) {
          dcdata[r][i] = 0xff & buffer.buffer[i + offset];
        }
        offset += dcCount;
        var rsPoly = QRUtil.getErrorCorrectPolynomial(ecCount);
        var rawPoly = new QRPolynomial(dcdata[r], rsPoly.getLength() - 1);
        var modPoly = rawPoly.mod(rsPoly);
        ecdata[r] = new Array(rsPoly.getLength() - 1);
        for (var i = 0; i < ecdata[r].length; i++) {
          var modIndex = i + modPoly.getLength() - ecdata[r].length;
          ecdata[r][i] = modIndex >= 0 ? modPoly.get(modIndex) : 0;
        }
      }
      var data = new Array(this.totalDataCount);
      var index = 0;
      for (var i = 0; i < maxDcCount; i++) {
        for (var r = 0; r < rsBlocks.length; r++) {
          if (i < dcdata[r].length) {
            data[index++] = dcdata[r][i];
          }
        }
      }
      for (var i = 0; i < maxEcCount; i++) {
        for (var r = 0; r < rsBlocks.length; r++) {
          if (i < ecdata[r].length) {
            data[index++] = ecdata[r][i];
          }
        }
      }
      return data;
    },
    /**
     * 布置模块，构建最终信息
     * @param  {} data
     * @param  {} maskPattern
     * @return {}
     */
    mapData: function mapData(data, maskPattern) {
      var inc = -1;
      var row = this.moduleCount - 1;
      var bitIndex = 7;
      var byteIndex = 0;
      for (var col = this.moduleCount - 1; col > 0; col -= 2) {
        if (col == 6) col--;
        while (true) {
          for (var c = 0; c < 2; c++) {
            if (this.modules[row][col - c] == null) {
              var dark = false;
              if (byteIndex < data.length) {
                dark = (data[byteIndex] >>> bitIndex & 1) == 1;
              }
              var mask = QRUtil.getMask(maskPattern, row, col - c);
              if (mask) {
                dark = !dark;
              }
              this.modules[row][col - c] = dark;
              bitIndex--;
              if (bitIndex == -1) {
                byteIndex++;
                bitIndex = 7;
              }
            }
          }
          row += inc;
          if (row < 0 || this.moduleCount <= row) {
            row -= inc;
            inc = -inc;
            break;
          }
        }
      }
    }
  };
  /**
   * 填充字段
   */
  QRCodeAlg.PAD0 = 0xEC;
  QRCodeAlg.PAD1 = 0x11;
  //---------------------------------------------------------------------
  // 纠错等级对应的编码
  //---------------------------------------------------------------------
  var QRErrorCorrectLevel = [1, 0, 3, 2];
  //---------------------------------------------------------------------
  // 掩膜版本
  //---------------------------------------------------------------------
  var QRMaskPattern = {
    PATTERN000: 0,
    PATTERN001: 1,
    PATTERN010: 2,
    PATTERN011: 3,
    PATTERN100: 4,
    PATTERN101: 5,
    PATTERN110: 6,
    PATTERN111: 7
  };
  //---------------------------------------------------------------------
  // 工具类
  //---------------------------------------------------------------------
  var QRUtil = {
    /*
    每个版本矫正图形的位置
     */
    PATTERN_POSITION_TABLE: [[], [6, 18], [6, 22], [6, 26], [6, 30], [6, 34], [6, 22, 38], [6, 24, 42], [6, 26, 46], [6, 28, 50], [6, 30, 54], [6, 32, 58], [6, 34, 62], [6, 26, 46, 66], [6, 26, 48, 70], [6, 26, 50, 74], [6, 30, 54, 78], [6, 30, 56, 82], [6, 30, 58, 86], [6, 34, 62, 90], [6, 28, 50, 72, 94], [6, 26, 50, 74, 98], [6, 30, 54, 78, 102], [6, 28, 54, 80, 106], [6, 32, 58, 84, 110], [6, 30, 58, 86, 114], [6, 34, 62, 90, 118], [6, 26, 50, 74, 98, 122], [6, 30, 54, 78, 102, 126], [6, 26, 52, 78, 104, 130], [6, 30, 56, 82, 108, 134], [6, 34, 60, 86, 112, 138], [6, 30, 58, 86, 114, 142], [6, 34, 62, 90, 118, 146], [6, 30, 54, 78, 102, 126, 150], [6, 24, 50, 76, 102, 128, 154], [6, 28, 54, 80, 106, 132, 158], [6, 32, 58, 84, 110, 136, 162], [6, 26, 54, 82, 110, 138, 166], [6, 30, 58, 86, 114, 142, 170]],
    G15: 1 << 10 | 1 << 8 | 1 << 5 | 1 << 4 | 1 << 2 | 1 << 1 | 1 << 0,
    G18: 1 << 12 | 1 << 11 | 1 << 10 | 1 << 9 | 1 << 8 | 1 << 5 | 1 << 2 | 1 << 0,
    G15_MASK: 1 << 14 | 1 << 12 | 1 << 10 | 1 << 4 | 1 << 1,
    /*
    BCH编码格式信息
     */
    getBCHTypeInfo: function getBCHTypeInfo(data) {
      var d = data << 10;
      while (QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G15) >= 0) {
        d ^= QRUtil.G15 << QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G15);
      }
      return (data << 10 | d) ^ QRUtil.G15_MASK;
    },
    /*
    BCH编码版本信息
     */
    getBCHTypeNumber: function getBCHTypeNumber(data) {
      var d = data << 12;
      while (QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G18) >= 0) {
        d ^= QRUtil.G18 << QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G18);
      }
      return data << 12 | d;
    },
    /*
    获取BCH位信息
     */
    getBCHDigit: function getBCHDigit(data) {
      var digit = 0;
      while (data != 0) {
        digit++;
        data >>>= 1;
      }
      return digit;
    },
    /*
    获取版本对应的矫正图形位置
     */
    getPatternPosition: function getPatternPosition(typeNumber) {
      return QRUtil.PATTERN_POSITION_TABLE[typeNumber - 1];
    },
    /*
    掩膜算法
     */
    getMask: function getMask(maskPattern, i, j) {
      switch (maskPattern) {
        case QRMaskPattern.PATTERN000:
          return (i + j) % 2 == 0;
        case QRMaskPattern.PATTERN001:
          return i % 2 == 0;
        case QRMaskPattern.PATTERN010:
          return j % 3 == 0;
        case QRMaskPattern.PATTERN011:
          return (i + j) % 3 == 0;
        case QRMaskPattern.PATTERN100:
          return (Math.floor(i / 2) + Math.floor(j / 3)) % 2 == 0;
        case QRMaskPattern.PATTERN101:
          return i * j % 2 + i * j % 3 == 0;
        case QRMaskPattern.PATTERN110:
          return (i * j % 2 + i * j % 3) % 2 == 0;
        case QRMaskPattern.PATTERN111:
          return (i * j % 3 + (i + j) % 2) % 2 == 0;
        default:
          throw new Error("bad maskPattern:" + maskPattern);
      }
    },
    /*
    获取RS的纠错多项式
     */
    getErrorCorrectPolynomial: function getErrorCorrectPolynomial(errorCorrectLength) {
      var a = new QRPolynomial([1], 0);
      for (var i = 0; i < errorCorrectLength; i++) {
        a = a.multiply(new QRPolynomial([1, QRMath.gexp(i)], 0));
      }
      return a;
    },
    /*
    获取评价
     */
    getLostPoint: function getLostPoint(qrCode) {
      var moduleCount = qrCode.getModuleCount(),
        lostPoint = 0,
        darkCount = 0;
      for (var row = 0; row < moduleCount; row++) {
        var sameCount = 0;
        var head = qrCode.modules[row][0];
        for (var col = 0; col < moduleCount; col++) {
          var current = qrCode.modules[row][col];
          //level 3 评价
          if (col < moduleCount - 6) {
            if (current && !qrCode.modules[row][col + 1] && qrCode.modules[row][col + 2] && qrCode.modules[row][col + 3] && qrCode.modules[row][col + 4] && !qrCode.modules[row][col + 5] && qrCode.modules[row][col + 6]) {
              if (col < moduleCount - 10) {
                if (qrCode.modules[row][col + 7] && qrCode.modules[row][col + 8] && qrCode.modules[row][col + 9] && qrCode.modules[row][col + 10]) {
                  lostPoint += 40;
                }
              } else if (col > 3) {
                if (qrCode.modules[row][col - 1] && qrCode.modules[row][col - 2] && qrCode.modules[row][col - 3] && qrCode.modules[row][col - 4]) {
                  lostPoint += 40;
                }
              }
            }
          }
          //level 2 评价
          if (row < moduleCount - 1 && col < moduleCount - 1) {
            var count = 0;
            if (current) count++;
            if (qrCode.modules[row + 1][col]) count++;
            if (qrCode.modules[row][col + 1]) count++;
            if (qrCode.modules[row + 1][col + 1]) count++;
            if (count == 0 || count == 4) {
              lostPoint += 3;
            }
          }
          //level 1 评价
          if (head ^ current) {
            sameCount++;
          } else {
            head = current;
            if (sameCount >= 5) {
              lostPoint += 3 + sameCount - 5;
            }
            sameCount = 1;
          }
          //level 4 评价
          if (current) {
            darkCount++;
          }
        }
      }
      for (var col = 0; col < moduleCount; col++) {
        var sameCount = 0;
        var head = qrCode.modules[0][col];
        for (var row = 0; row < moduleCount; row++) {
          var current = qrCode.modules[row][col];
          //level 3 评价
          if (row < moduleCount - 6) {
            if (current && !qrCode.modules[row + 1][col] && qrCode.modules[row + 2][col] && qrCode.modules[row + 3][col] && qrCode.modules[row + 4][col] && !qrCode.modules[row + 5][col] && qrCode.modules[row + 6][col]) {
              if (row < moduleCount - 10) {
                if (qrCode.modules[row + 7][col] && qrCode.modules[row + 8][col] && qrCode.modules[row + 9][col] && qrCode.modules[row + 10][col]) {
                  lostPoint += 40;
                }
              } else if (row > 3) {
                if (qrCode.modules[row - 1][col] && qrCode.modules[row - 2][col] && qrCode.modules[row - 3][col] && qrCode.modules[row - 4][col]) {
                  lostPoint += 40;
                }
              }
            }
          }
          //level 1 评价
          if (head ^ current) {
            sameCount++;
          } else {
            head = current;
            if (sameCount >= 5) {
              lostPoint += 3 + sameCount - 5;
            }
            sameCount = 1;
          }
        }
      }
      // LEVEL4
      var ratio = Math.abs(100 * darkCount / moduleCount / moduleCount - 50) / 5;
      lostPoint += ratio * 10;
      return lostPoint;
    }
  };
  //---------------------------------------------------------------------
  // QRMath使用的数学工具
  //---------------------------------------------------------------------
  var QRMath = {
    /*
    将n转化为a^m
     */
    glog: function glog(n) {
      if (n < 1) {
        throw new Error("glog(" + n + ")");
      }
      return QRMath.LOG_TABLE[n];
    },
    /*
    将a^m转化为n
     */
    gexp: function gexp(n) {
      while (n < 0) {
        n += 255;
      }
      while (n >= 256) {
        n -= 255;
      }
      return QRMath.EXP_TABLE[n];
    },
    EXP_TABLE: new Array(256),
    LOG_TABLE: new Array(256)
  };
  for (var i = 0; i < 8; i++) {
    QRMath.EXP_TABLE[i] = 1 << i;
  }
  for (var i = 8; i < 256; i++) {
    QRMath.EXP_TABLE[i] = QRMath.EXP_TABLE[i - 4] ^ QRMath.EXP_TABLE[i - 5] ^ QRMath.EXP_TABLE[i - 6] ^ QRMath.EXP_TABLE[i - 8];
  }
  for (var i = 0; i < 255; i++) {
    QRMath.LOG_TABLE[QRMath.EXP_TABLE[i]] = i;
  }
  //---------------------------------------------------------------------
  // QRPolynomial 多项式
  //---------------------------------------------------------------------
  /**
   * 多项式类
   * @param {Array} num   系数
   * @param {num} shift a^shift
   */
  function QRPolynomial(num, shift) {
    if (num.length == undefined) {
      throw new Error(num.length + "/" + shift);
    }
    var offset = 0;
    while (offset < num.length && num[offset] == 0) {
      offset++;
    }
    this.num = new Array(num.length - offset + shift);
    for (var i = 0; i < num.length - offset; i++) {
      this.num[i] = num[i + offset];
    }
  }
  QRPolynomial.prototype = {
    get: function get(index) {
      return this.num[index];
    },
    getLength: function getLength() {
      return this.num.length;
    },
    /**
     * 多项式乘法
     * @param  {QRPolynomial} e 被乘多项式
     * @return {[type]}   [description]
     */
    multiply: function multiply(e) {
      var num = new Array(this.getLength() + e.getLength() - 1);
      for (var i = 0; i < this.getLength(); i++) {
        for (var j = 0; j < e.getLength(); j++) {
          num[i + j] ^= QRMath.gexp(QRMath.glog(this.get(i)) + QRMath.glog(e.get(j)));
        }
      }
      return new QRPolynomial(num, 0);
    },
    /**
     * 多项式模运算
     * @param  {QRPolynomial} e 模多项式
     * @return {}
     */
    mod: function mod(e) {
      var tl = this.getLength(),
        el = e.getLength();
      if (tl - el < 0) {
        return this;
      }
      var num = new Array(tl);
      for (var i = 0; i < tl; i++) {
        num[i] = this.get(i);
      }
      while (num.length >= el) {
        var ratio = QRMath.glog(num[0]) - QRMath.glog(e.get(0));
        for (var i = 0; i < e.getLength(); i++) {
          num[i] ^= QRMath.gexp(QRMath.glog(e.get(i)) + ratio);
        }
        while (num[0] == 0) {
          num.shift();
        }
      }
      return new QRPolynomial(num, 0);
    }
  };

  //---------------------------------------------------------------------
  // RS_BLOCK_TABLE
  //---------------------------------------------------------------------
  /*
  二维码各个版本信息[块数, 每块中的数据块数, 每块中的信息块数]
   */
  var RS_BLOCK_TABLE = [
  // L
  // M
  // Q
  // H
  // 1
  [1, 26, 19], [1, 26, 16], [1, 26, 13], [1, 26, 9],
  // 2
  [1, 44, 34], [1, 44, 28], [1, 44, 22], [1, 44, 16],
  // 3
  [1, 70, 55], [1, 70, 44], [2, 35, 17], [2, 35, 13],
  // 4
  [1, 100, 80], [2, 50, 32], [2, 50, 24], [4, 25, 9],
  // 5
  [1, 134, 108], [2, 67, 43], [2, 33, 15, 2, 34, 16], [2, 33, 11, 2, 34, 12],
  // 6
  [2, 86, 68], [4, 43, 27], [4, 43, 19], [4, 43, 15],
  // 7
  [2, 98, 78], [4, 49, 31], [2, 32, 14, 4, 33, 15], [4, 39, 13, 1, 40, 14],
  // 8
  [2, 121, 97], [2, 60, 38, 2, 61, 39], [4, 40, 18, 2, 41, 19], [4, 40, 14, 2, 41, 15],
  // 9
  [2, 146, 116], [3, 58, 36, 2, 59, 37], [4, 36, 16, 4, 37, 17], [4, 36, 12, 4, 37, 13],
  // 10
  [2, 86, 68, 2, 87, 69], [4, 69, 43, 1, 70, 44], [6, 43, 19, 2, 44, 20], [6, 43, 15, 2, 44, 16],
  // 11
  [4, 101, 81], [1, 80, 50, 4, 81, 51], [4, 50, 22, 4, 51, 23], [3, 36, 12, 8, 37, 13],
  // 12
  [2, 116, 92, 2, 117, 93], [6, 58, 36, 2, 59, 37], [4, 46, 20, 6, 47, 21], [7, 42, 14, 4, 43, 15],
  // 13
  [4, 133, 107], [8, 59, 37, 1, 60, 38], [8, 44, 20, 4, 45, 21], [12, 33, 11, 4, 34, 12],
  // 14
  [3, 145, 115, 1, 146, 116], [4, 64, 40, 5, 65, 41], [11, 36, 16, 5, 37, 17], [11, 36, 12, 5, 37, 13],
  // 15
  [5, 109, 87, 1, 110, 88], [5, 65, 41, 5, 66, 42], [5, 54, 24, 7, 55, 25], [11, 36, 12],
  // 16
  [5, 122, 98, 1, 123, 99], [7, 73, 45, 3, 74, 46], [15, 43, 19, 2, 44, 20], [3, 45, 15, 13, 46, 16],
  // 17
  [1, 135, 107, 5, 136, 108], [10, 74, 46, 1, 75, 47], [1, 50, 22, 15, 51, 23], [2, 42, 14, 17, 43, 15],
  // 18
  [5, 150, 120, 1, 151, 121], [9, 69, 43, 4, 70, 44], [17, 50, 22, 1, 51, 23], [2, 42, 14, 19, 43, 15],
  // 19
  [3, 141, 113, 4, 142, 114], [3, 70, 44, 11, 71, 45], [17, 47, 21, 4, 48, 22], [9, 39, 13, 16, 40, 14],
  // 20
  [3, 135, 107, 5, 136, 108], [3, 67, 41, 13, 68, 42], [15, 54, 24, 5, 55, 25], [15, 43, 15, 10, 44, 16],
  // 21
  [4, 144, 116, 4, 145, 117], [17, 68, 42], [17, 50, 22, 6, 51, 23], [19, 46, 16, 6, 47, 17],
  // 22
  [2, 139, 111, 7, 140, 112], [17, 74, 46], [7, 54, 24, 16, 55, 25], [34, 37, 13],
  // 23
  [4, 151, 121, 5, 152, 122], [4, 75, 47, 14, 76, 48], [11, 54, 24, 14, 55, 25], [16, 45, 15, 14, 46, 16],
  // 24
  [6, 147, 117, 4, 148, 118], [6, 73, 45, 14, 74, 46], [11, 54, 24, 16, 55, 25], [30, 46, 16, 2, 47, 17],
  // 25
  [8, 132, 106, 4, 133, 107], [8, 75, 47, 13, 76, 48], [7, 54, 24, 22, 55, 25], [22, 45, 15, 13, 46, 16],
  // 26
  [10, 142, 114, 2, 143, 115], [19, 74, 46, 4, 75, 47], [28, 50, 22, 6, 51, 23], [33, 46, 16, 4, 47, 17],
  // 27
  [8, 152, 122, 4, 153, 123], [22, 73, 45, 3, 74, 46], [8, 53, 23, 26, 54, 24], [12, 45, 15, 28, 46, 16],
  // 28
  [3, 147, 117, 10, 148, 118], [3, 73, 45, 23, 74, 46], [4, 54, 24, 31, 55, 25], [11, 45, 15, 31, 46, 16],
  // 29
  [7, 146, 116, 7, 147, 117], [21, 73, 45, 7, 74, 46], [1, 53, 23, 37, 54, 24], [19, 45, 15, 26, 46, 16],
  // 30
  [5, 145, 115, 10, 146, 116], [19, 75, 47, 10, 76, 48], [15, 54, 24, 25, 55, 25], [23, 45, 15, 25, 46, 16],
  // 31
  [13, 145, 115, 3, 146, 116], [2, 74, 46, 29, 75, 47], [42, 54, 24, 1, 55, 25], [23, 45, 15, 28, 46, 16],
  // 32
  [17, 145, 115], [10, 74, 46, 23, 75, 47], [10, 54, 24, 35, 55, 25], [19, 45, 15, 35, 46, 16],
  // 33
  [17, 145, 115, 1, 146, 116], [14, 74, 46, 21, 75, 47], [29, 54, 24, 19, 55, 25], [11, 45, 15, 46, 46, 16],
  // 34
  [13, 145, 115, 6, 146, 116], [14, 74, 46, 23, 75, 47], [44, 54, 24, 7, 55, 25], [59, 46, 16, 1, 47, 17],
  // 35
  [12, 151, 121, 7, 152, 122], [12, 75, 47, 26, 76, 48], [39, 54, 24, 14, 55, 25], [22, 45, 15, 41, 46, 16],
  // 36
  [6, 151, 121, 14, 152, 122], [6, 75, 47, 34, 76, 48], [46, 54, 24, 10, 55, 25], [2, 45, 15, 64, 46, 16],
  // 37
  [17, 152, 122, 4, 153, 123], [29, 74, 46, 14, 75, 47], [49, 54, 24, 10, 55, 25], [24, 45, 15, 46, 46, 16],
  // 38
  [4, 152, 122, 18, 153, 123], [13, 74, 46, 32, 75, 47], [48, 54, 24, 14, 55, 25], [42, 45, 15, 32, 46, 16],
  // 39
  [20, 147, 117, 4, 148, 118], [40, 75, 47, 7, 76, 48], [43, 54, 24, 22, 55, 25], [10, 45, 15, 67, 46, 16],
  // 40
  [19, 148, 118, 6, 149, 119], [18, 75, 47, 31, 76, 48], [34, 54, 24, 34, 55, 25], [20, 45, 15, 61, 46, 16]];

  /**
   * 根据数据获取对应版本
   * @return {[type]} [description]
   */
  QRCodeAlg.prototype.getRightType = function () {
    for (var typeNumber = 1; typeNumber < 41; typeNumber++) {
      var rsBlock = RS_BLOCK_TABLE[(typeNumber - 1) * 4 + this.errorCorrectLevel];
      if (rsBlock == undefined) {
        throw new Error("bad rs block @ typeNumber:" + typeNumber + "/errorCorrectLevel:" + this.errorCorrectLevel);
      }
      var length = rsBlock.length / 3;
      var totalDataCount = 0;
      for (var i = 0; i < length; i++) {
        var count = rsBlock[i * 3 + 0];
        var dataCount = rsBlock[i * 3 + 2];
        totalDataCount += dataCount * count;
      }
      var lengthBytes = typeNumber > 9 ? 2 : 1;
      if (this.utf8bytes.length + lengthBytes < totalDataCount || typeNumber == 40) {
        this.typeNumber = typeNumber;
        this.rsBlock = rsBlock;
        this.totalDataCount = totalDataCount;
        break;
      }
    }
  };

  //---------------------------------------------------------------------
  // QRBitBuffer
  //---------------------------------------------------------------------
  function QRBitBuffer() {
    this.buffer = new Array();
    this.length = 0;
  }
  QRBitBuffer.prototype = {
    get: function get(index) {
      var bufIndex = Math.floor(index / 8);
      return this.buffer[bufIndex] >>> 7 - index % 8 & 1;
    },
    put: function put(num, length) {
      for (var i = 0; i < length; i++) {
        this.putBit(num >>> length - i - 1 & 1);
      }
    },
    putBit: function putBit(bit) {
      var bufIndex = Math.floor(this.length / 8);
      if (this.buffer.length <= bufIndex) {
        this.buffer.push(0);
      }
      if (bit) {
        this.buffer[bufIndex] |= 0x80 >>> this.length % 8;
      }
      this.length++;
    }
  };

  // xzedit
  var qrcodeAlgObjCache = [];
  /**
   * 二维码构造函数，主要用于绘制
   * @param  {参数列表} opt 传递参数
   * @return {}
   */
  QRCode = function QRCode(opt) {
    //设置默认参数
    this.options = {
      text: '',
      size: 256,
      correctLevel: 3,
      background: '#ffffff',
      foreground: '#000000',
      pdground: '#000000',
      image: '',
      imageSize: 30,
      canvasId: opt.canvasId,
      context: opt.context,
      usingComponents: opt.usingComponents,
      showLoading: opt.showLoading,
      loadingText: opt.loadingText
    };
    if (typeof opt === 'string') {
      // 只编码ASCII字符串
      opt = {
        text: opt
      };
    }
    if (opt) {
      for (var i in opt) {
        this.options[i] = opt[i];
      }
    }
    //使用QRCodeAlg创建二维码结构
    var qrCodeAlg = null;
    for (var i = 0, l = qrcodeAlgObjCache.length; i < l; i++) {
      if (qrcodeAlgObjCache[i].text == this.options.text && qrcodeAlgObjCache[i].text.correctLevel == this.options.correctLevel) {
        qrCodeAlg = qrcodeAlgObjCache[i].obj;
        break;
      }
    }
    if (i == l) {
      qrCodeAlg = new QRCodeAlg(this.options.text, this.options.correctLevel);
      qrcodeAlgObjCache.push({
        text: this.options.text,
        correctLevel: this.options.correctLevel,
        obj: qrCodeAlg
      });
    }
    /**
     * 计算矩阵点的前景色
     * @param {Obj} config
     * @param {Number} config.row 点x坐标
     * @param {Number} config.col 点y坐标
     * @param {Number} config.count 矩阵大小
     * @param {Number} config.options 组件的options
     * @return {String}
     */
    var getForeGround = function getForeGround(config) {
      var options = config.options;
      if (options.pdground && (config.row > 1 && config.row < 5 && config.col > 1 && config.col < 5 || config.row > config.count - 6 && config.row < config.count - 2 && config.col > 1 && config.col < 5 || config.row > 1 && config.row < 5 && config.col > config.count - 6 && config.col < config.count - 2)) {
        return options.pdground;
      }
      return options.foreground;
    };
    // 创建canvas
    var createCanvas = function createCanvas(options) {
      if (options.showLoading) {
        uni.showLoading({
          title: options.loadingText,
          mask: true
        });
      }
      var ctx = uni.createCanvasContext(options.canvasId, options.context);
      var count = qrCodeAlg.getModuleCount();
      var ratioSize = options.size;
      var ratioImgSize = options.imageSize;
      //计算每个点的长宽
      var tileW = (ratioSize / count).toPrecision(4);
      var tileH = (ratioSize / count).toPrecision(4);
      //绘制
      for (var row = 0; row < count; row++) {
        for (var col = 0; col < count; col++) {
          var w = Math.ceil((col + 1) * tileW) - Math.floor(col * tileW);
          var h = Math.ceil((row + 1) * tileW) - Math.floor(row * tileW);
          var foreground = getForeGround({
            row: row,
            col: col,
            count: count,
            options: options
          });
          ctx.setFillStyle(qrCodeAlg.modules[row][col] ? foreground : options.background);
          ctx.fillRect(Math.round(col * tileW), Math.round(row * tileH), w, h);
        }
      }
      if (options.image) {
        // 画圆角矩形
        var drawRoundedRect = function drawRoundedRect(ctxi, x, y, width, height, r, lineWidth, fill, stroke) {
          ctxi.setLineWidth(lineWidth);
          ctxi.setFillStyle(options.background);
          ctxi.setStrokeStyle(options.background);
          ctxi.beginPath(); // draw top and top right corner 
          ctxi.moveTo(x + r, y);
          ctxi.arcTo(x + width, y, x + width, y + r, r); // draw right side and bottom right corner 
          ctxi.arcTo(x + width, y + height, x + width - r, y + height, r); // draw bottom and bottom left corner 
          ctxi.arcTo(x, y + height, x, y + height - r, r); // draw left and top left corner 
          ctxi.arcTo(x, y, x + r, y, r);
          ctxi.closePath();
          if (fill) {
            ctxi.fill();
          }
          if (stroke) {
            ctxi.stroke();
          }
        };
        var x = Number(((ratioSize - ratioImgSize) / 2).toFixed(2));
        var y = Number(((ratioSize - ratioImgSize) / 2).toFixed(2));
        drawRoundedRect(ctx, x, y, ratioImgSize, ratioImgSize, 2, 6, true, true);
        ctx.drawImage(options.image, x, y, ratioImgSize, ratioImgSize);
      }
      setTimeout(function () {
        ctx.draw(true, function () {
          // 保存到临时区域
          setTimeout(function () {
            uni.canvasToTempFilePath({
              width: options.width,
              height: options.height,
              destWidth: options.width,
              destHeight: options.height,
              canvasId: options.canvasId,
              quality: Number(1),
              success: function success(res) {
                if (options.cbResult) {
                  options.cbResult(res.tempFilePath);
                }
              },
              fail: function fail(res) {
                if (options.cbResult) {
                  options.cbResult(res);
                }
              },
              complete: function complete() {
                if (options.showLoading) {
                  uni.hideLoading();
                }
              }
            }, options.context);
          }, options.text.length + 100);
        });
      }, options.usingComponents ? 0 : 150);
    };
    createCanvas(this.options);
    // 空判定
    var empty = function empty(v) {
      var tp = (0, _typeof2.default)(v),
        rt = false;
      if (tp == "number" && String(v) == "") {
        rt = true;
      } else if (tp == "undefined") {
        rt = true;
      } else if (tp == "object") {
        if (JSON.stringify(v) == "{}" || JSON.stringify(v) == "[]" || v == null) rt = true;
      } else if (tp == "string") {
        if (v == "" || v == "undefined" || v == "null" || v == "{}" || v == "[]") rt = true;
      } else if (tp == "function") {
        rt = false;
      }
      return rt;
    };
  };
  QRCode.prototype.clear = function (fn) {
    var ctx = uni.createCanvasContext(this.options.canvasId, this.options.context);
    ctx.clearRect(0, 0, this.options.size, this.options.size);
    ctx.draw(false, function () {
      if (fn) {
        fn();
      }
    });
  };
})();
var _default = QRCode;
exports.default = _default;
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/uni-mp-weixin/dist/index.js */ 2)["default"]))

/***/ }),
/* 181 */,
/* 182 */,
/* 183 */,
/* 184 */,
/* 185 */,
/* 186 */,
/* 187 */,
/* 188 */
/*!**************************************************************************************!*\
  !*** F:/project/qianduan/zhanhuitong_yudengji_git/components/ay-qrcode/qrcode_wx.js ***!
  \**************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(uni) {!function () {
  // alignment pattern
  var adelta = [0, 11, 15, 19, 23, 27, 31, 16, 18, 20, 22, 24, 26, 28, 20, 22, 24, 24, 26, 28, 28, 22, 24, 24, 26, 26, 28, 28, 24, 24, 26, 26, 26, 28, 28, 24, 26, 26, 26, 28, 28];

  // version block
  var vpat = [0xc94, 0x5bc, 0xa99, 0x4d3, 0xbf6, 0x762, 0x847, 0x60d, 0x928, 0xb78, 0x45d, 0xa17, 0x532, 0x9a6, 0x683, 0x8c9, 0x7ec, 0xec4, 0x1e1, 0xfab, 0x08e, 0xc1a, 0x33f, 0xd75, 0x250, 0x9d5, 0x6f0, 0x8ba, 0x79f, 0xb0b, 0x42e, 0xa64, 0x541, 0xc69];

  // final format bits with mask: level << 3 | mask
  var fmtword = [0x77c4, 0x72f3, 0x7daa, 0x789d, 0x662f, 0x6318, 0x6c41, 0x6976,
  //L
  0x5412, 0x5125, 0x5e7c, 0x5b4b, 0x45f9, 0x40ce, 0x4f97, 0x4aa0,
  //M
  0x355f, 0x3068, 0x3f31, 0x3a06, 0x24b4, 0x2183, 0x2eda, 0x2bed,
  //Q
  0x1689, 0x13be, 0x1ce7, 0x19d0, 0x0762, 0x0255, 0x0d0c, 0x083b //H
  ];

  // 4 per version: number of blocks 1,2; data width; ecc width
  var eccblocks = [1, 0, 19, 7, 1, 0, 16, 10, 1, 0, 13, 13, 1, 0, 9, 17, 1, 0, 34, 10, 1, 0, 28, 16, 1, 0, 22, 22, 1, 0, 16, 28, 1, 0, 55, 15, 1, 0, 44, 26, 2, 0, 17, 18, 2, 0, 13, 22, 1, 0, 80, 20, 2, 0, 32, 18, 2, 0, 24, 26, 4, 0, 9, 16, 1, 0, 108, 26, 2, 0, 43, 24, 2, 2, 15, 18, 2, 2, 11, 22, 2, 0, 68, 18, 4, 0, 27, 16, 4, 0, 19, 24, 4, 0, 15, 28, 2, 0, 78, 20, 4, 0, 31, 18, 2, 4, 14, 18, 4, 1, 13, 26, 2, 0, 97, 24, 2, 2, 38, 22, 4, 2, 18, 22, 4, 2, 14, 26, 2, 0, 116, 30, 3, 2, 36, 22, 4, 4, 16, 20, 4, 4, 12, 24, 2, 2, 68, 18, 4, 1, 43, 26, 6, 2, 19, 24, 6, 2, 15, 28, 4, 0, 81, 20, 1, 4, 50, 30, 4, 4, 22, 28, 3, 8, 12, 24, 2, 2, 92, 24, 6, 2, 36, 22, 4, 6, 20, 26, 7, 4, 14, 28, 4, 0, 107, 26, 8, 1, 37, 22, 8, 4, 20, 24, 12, 4, 11, 22, 3, 1, 115, 30, 4, 5, 40, 24, 11, 5, 16, 20, 11, 5, 12, 24, 5, 1, 87, 22, 5, 5, 41, 24, 5, 7, 24, 30, 11, 7, 12, 24, 5, 1, 98, 24, 7, 3, 45, 28, 15, 2, 19, 24, 3, 13, 15, 30, 1, 5, 107, 28, 10, 1, 46, 28, 1, 15, 22, 28, 2, 17, 14, 28, 5, 1, 120, 30, 9, 4, 43, 26, 17, 1, 22, 28, 2, 19, 14, 28, 3, 4, 113, 28, 3, 11, 44, 26, 17, 4, 21, 26, 9, 16, 13, 26, 3, 5, 107, 28, 3, 13, 41, 26, 15, 5, 24, 30, 15, 10, 15, 28, 4, 4, 116, 28, 17, 0, 42, 26, 17, 6, 22, 28, 19, 6, 16, 30, 2, 7, 111, 28, 17, 0, 46, 28, 7, 16, 24, 30, 34, 0, 13, 24, 4, 5, 121, 30, 4, 14, 47, 28, 11, 14, 24, 30, 16, 14, 15, 30, 6, 4, 117, 30, 6, 14, 45, 28, 11, 16, 24, 30, 30, 2, 16, 30, 8, 4, 106, 26, 8, 13, 47, 28, 7, 22, 24, 30, 22, 13, 15, 30, 10, 2, 114, 28, 19, 4, 46, 28, 28, 6, 22, 28, 33, 4, 16, 30, 8, 4, 122, 30, 22, 3, 45, 28, 8, 26, 23, 30, 12, 28, 15, 30, 3, 10, 117, 30, 3, 23, 45, 28, 4, 31, 24, 30, 11, 31, 15, 30, 7, 7, 116, 30, 21, 7, 45, 28, 1, 37, 23, 30, 19, 26, 15, 30, 5, 10, 115, 30, 19, 10, 47, 28, 15, 25, 24, 30, 23, 25, 15, 30, 13, 3, 115, 30, 2, 29, 46, 28, 42, 1, 24, 30, 23, 28, 15, 30, 17, 0, 115, 30, 10, 23, 46, 28, 10, 35, 24, 30, 19, 35, 15, 30, 17, 1, 115, 30, 14, 21, 46, 28, 29, 19, 24, 30, 11, 46, 15, 30, 13, 6, 115, 30, 14, 23, 46, 28, 44, 7, 24, 30, 59, 1, 16, 30, 12, 7, 121, 30, 12, 26, 47, 28, 39, 14, 24, 30, 22, 41, 15, 30, 6, 14, 121, 30, 6, 34, 47, 28, 46, 10, 24, 30, 2, 64, 15, 30, 17, 4, 122, 30, 29, 14, 46, 28, 49, 10, 24, 30, 24, 46, 15, 30, 4, 18, 122, 30, 13, 32, 46, 28, 48, 14, 24, 30, 42, 32, 15, 30, 20, 4, 117, 30, 40, 7, 47, 28, 43, 22, 24, 30, 10, 67, 15, 30, 19, 6, 118, 30, 18, 31, 47, 28, 34, 34, 24, 30, 20, 61, 15, 30];

  // Galois field log table
  var glog = [0xff, 0x00, 0x01, 0x19, 0x02, 0x32, 0x1a, 0xc6, 0x03, 0xdf, 0x33, 0xee, 0x1b, 0x68, 0xc7, 0x4b, 0x04, 0x64, 0xe0, 0x0e, 0x34, 0x8d, 0xef, 0x81, 0x1c, 0xc1, 0x69, 0xf8, 0xc8, 0x08, 0x4c, 0x71, 0x05, 0x8a, 0x65, 0x2f, 0xe1, 0x24, 0x0f, 0x21, 0x35, 0x93, 0x8e, 0xda, 0xf0, 0x12, 0x82, 0x45, 0x1d, 0xb5, 0xc2, 0x7d, 0x6a, 0x27, 0xf9, 0xb9, 0xc9, 0x9a, 0x09, 0x78, 0x4d, 0xe4, 0x72, 0xa6, 0x06, 0xbf, 0x8b, 0x62, 0x66, 0xdd, 0x30, 0xfd, 0xe2, 0x98, 0x25, 0xb3, 0x10, 0x91, 0x22, 0x88, 0x36, 0xd0, 0x94, 0xce, 0x8f, 0x96, 0xdb, 0xbd, 0xf1, 0xd2, 0x13, 0x5c, 0x83, 0x38, 0x46, 0x40, 0x1e, 0x42, 0xb6, 0xa3, 0xc3, 0x48, 0x7e, 0x6e, 0x6b, 0x3a, 0x28, 0x54, 0xfa, 0x85, 0xba, 0x3d, 0xca, 0x5e, 0x9b, 0x9f, 0x0a, 0x15, 0x79, 0x2b, 0x4e, 0xd4, 0xe5, 0xac, 0x73, 0xf3, 0xa7, 0x57, 0x07, 0x70, 0xc0, 0xf7, 0x8c, 0x80, 0x63, 0x0d, 0x67, 0x4a, 0xde, 0xed, 0x31, 0xc5, 0xfe, 0x18, 0xe3, 0xa5, 0x99, 0x77, 0x26, 0xb8, 0xb4, 0x7c, 0x11, 0x44, 0x92, 0xd9, 0x23, 0x20, 0x89, 0x2e, 0x37, 0x3f, 0xd1, 0x5b, 0x95, 0xbc, 0xcf, 0xcd, 0x90, 0x87, 0x97, 0xb2, 0xdc, 0xfc, 0xbe, 0x61, 0xf2, 0x56, 0xd3, 0xab, 0x14, 0x2a, 0x5d, 0x9e, 0x84, 0x3c, 0x39, 0x53, 0x47, 0x6d, 0x41, 0xa2, 0x1f, 0x2d, 0x43, 0xd8, 0xb7, 0x7b, 0xa4, 0x76, 0xc4, 0x17, 0x49, 0xec, 0x7f, 0x0c, 0x6f, 0xf6, 0x6c, 0xa1, 0x3b, 0x52, 0x29, 0x9d, 0x55, 0xaa, 0xfb, 0x60, 0x86, 0xb1, 0xbb, 0xcc, 0x3e, 0x5a, 0xcb, 0x59, 0x5f, 0xb0, 0x9c, 0xa9, 0xa0, 0x51, 0x0b, 0xf5, 0x16, 0xeb, 0x7a, 0x75, 0x2c, 0xd7, 0x4f, 0xae, 0xd5, 0xe9, 0xe6, 0xe7, 0xad, 0xe8, 0x74, 0xd6, 0xf4, 0xea, 0xa8, 0x50, 0x58, 0xaf];

  // Galios field exponent table
  var gexp = [0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1d, 0x3a, 0x74, 0xe8, 0xcd, 0x87, 0x13, 0x26, 0x4c, 0x98, 0x2d, 0x5a, 0xb4, 0x75, 0xea, 0xc9, 0x8f, 0x03, 0x06, 0x0c, 0x18, 0x30, 0x60, 0xc0, 0x9d, 0x27, 0x4e, 0x9c, 0x25, 0x4a, 0x94, 0x35, 0x6a, 0xd4, 0xb5, 0x77, 0xee, 0xc1, 0x9f, 0x23, 0x46, 0x8c, 0x05, 0x0a, 0x14, 0x28, 0x50, 0xa0, 0x5d, 0xba, 0x69, 0xd2, 0xb9, 0x6f, 0xde, 0xa1, 0x5f, 0xbe, 0x61, 0xc2, 0x99, 0x2f, 0x5e, 0xbc, 0x65, 0xca, 0x89, 0x0f, 0x1e, 0x3c, 0x78, 0xf0, 0xfd, 0xe7, 0xd3, 0xbb, 0x6b, 0xd6, 0xb1, 0x7f, 0xfe, 0xe1, 0xdf, 0xa3, 0x5b, 0xb6, 0x71, 0xe2, 0xd9, 0xaf, 0x43, 0x86, 0x11, 0x22, 0x44, 0x88, 0x0d, 0x1a, 0x34, 0x68, 0xd0, 0xbd, 0x67, 0xce, 0x81, 0x1f, 0x3e, 0x7c, 0xf8, 0xed, 0xc7, 0x93, 0x3b, 0x76, 0xec, 0xc5, 0x97, 0x33, 0x66, 0xcc, 0x85, 0x17, 0x2e, 0x5c, 0xb8, 0x6d, 0xda, 0xa9, 0x4f, 0x9e, 0x21, 0x42, 0x84, 0x15, 0x2a, 0x54, 0xa8, 0x4d, 0x9a, 0x29, 0x52, 0xa4, 0x55, 0xaa, 0x49, 0x92, 0x39, 0x72, 0xe4, 0xd5, 0xb7, 0x73, 0xe6, 0xd1, 0xbf, 0x63, 0xc6, 0x91, 0x3f, 0x7e, 0xfc, 0xe5, 0xd7, 0xb3, 0x7b, 0xf6, 0xf1, 0xff, 0xe3, 0xdb, 0xab, 0x4b, 0x96, 0x31, 0x62, 0xc4, 0x95, 0x37, 0x6e, 0xdc, 0xa5, 0x57, 0xae, 0x41, 0x82, 0x19, 0x32, 0x64, 0xc8, 0x8d, 0x07, 0x0e, 0x1c, 0x38, 0x70, 0xe0, 0xdd, 0xa7, 0x53, 0xa6, 0x51, 0xa2, 0x59, 0xb2, 0x79, 0xf2, 0xf9, 0xef, 0xc3, 0x9b, 0x2b, 0x56, 0xac, 0x45, 0x8a, 0x09, 0x12, 0x24, 0x48, 0x90, 0x3d, 0x7a, 0xf4, 0xf5, 0xf7, 0xf3, 0xfb, 0xeb, 0xcb, 0x8b, 0x0b, 0x16, 0x2c, 0x58, 0xb0, 0x7d, 0xfa, 0xe9, 0xcf, 0x83, 0x1b, 0x36, 0x6c, 0xd8, 0xad, 0x47, 0x8e, 0x00];

  // Working buffers:
  // data input and ecc append, image working buffer, fixed part of image, run lengths for badness
  var strinbuf = [],
    eccbuf = [],
    qrframe = [],
    framask = [],
    rlens = [];
  // Control values - width is based on version, last 4 are from table.
  var version, width, neccblk1, neccblk2, datablkw, eccblkwid;
  var ecclevel = 2;
  // set bit to indicate cell in qrframe is immutable.  symmetric around diagonal
  function setmask(x, y) {
    var bt;
    if (x > y) {
      bt = x;
      x = y;
      y = bt;
    }
    // y*y = 1+3+5...
    bt = y;
    bt *= y;
    bt += y;
    bt >>= 1;
    bt += x;
    framask[bt] = 1;
  }

  // enter alignment pattern - black to qrframe, white to mask (later black frame merged to mask)
  function putalign(x, y) {
    var j;
    qrframe[x + width * y] = 1;
    for (j = -2; j < 2; j++) {
      qrframe[x + j + width * (y - 2)] = 1;
      qrframe[x - 2 + width * (y + j + 1)] = 1;
      qrframe[x + 2 + width * (y + j)] = 1;
      qrframe[x + j + 1 + width * (y + 2)] = 1;
    }
    for (j = 0; j < 2; j++) {
      setmask(x - 1, y + j);
      setmask(x + 1, y - j);
      setmask(x - j, y - 1);
      setmask(x + j, y + 1);
    }
  }

  //========================================================================
  // Reed Solomon error correction
  // exponentiation mod N
  function modnn(x) {
    while (x >= 255) {
      x -= 255;
      x = (x >> 8) + (x & 255);
    }
    return x;
  }
  var genpoly = [];

  // Calculate and append ECC data to data block.  Block is in strinbuf, indexes to buffers given.
  function appendrs(data, dlen, ecbuf, eclen) {
    var i, j, fb;
    for (i = 0; i < eclen; i++) {
      strinbuf[ecbuf + i] = 0;
    }
    for (i = 0; i < dlen; i++) {
      fb = glog[strinbuf[data + i] ^ strinbuf[ecbuf]];
      if (fb != 255) /* fb term is non-zero */
        for (j = 1; j < eclen; j++) {
          strinbuf[ecbuf + j - 1] = strinbuf[ecbuf + j] ^ gexp[modnn(fb + genpoly[eclen - j])];
        } else for (j = ecbuf; j < ecbuf + eclen; j++) {
        strinbuf[j] = strinbuf[j + 1];
      }
      strinbuf[ecbuf + eclen - 1] = fb == 255 ? 0 : gexp[modnn(fb + genpoly[0])];
    }
  }

  //========================================================================
  // Frame data insert following the path rules

  // check mask - since symmetrical use half.
  function ismasked(x, y) {
    var bt;
    if (x > y) {
      bt = x;
      x = y;
      y = bt;
    }
    bt = y;
    bt += y * y;
    bt >>= 1;
    bt += x;
    return framask[bt];
  }

  //========================================================================
  //  Apply the selected mask out of the 8.
  function applymask(m) {
    var x, y, r3x, r3y;
    switch (m) {
      case 0:
        for (y = 0; y < width; y++) {
          for (x = 0; x < width; x++) {
            if (!(x + y & 1) && !ismasked(x, y)) qrframe[x + y * width] ^= 1;
          }
        }
        break;
      case 1:
        for (y = 0; y < width; y++) {
          for (x = 0; x < width; x++) {
            if (!(y & 1) && !ismasked(x, y)) qrframe[x + y * width] ^= 1;
          }
        }
        break;
      case 2:
        for (y = 0; y < width; y++) {
          for (r3x = 0, x = 0; x < width; x++, r3x++) {
            if (r3x == 3) r3x = 0;
            if (!r3x && !ismasked(x, y)) qrframe[x + y * width] ^= 1;
          }
        }
        break;
      case 3:
        for (r3y = 0, y = 0; y < width; y++, r3y++) {
          if (r3y == 3) r3y = 0;
          for (r3x = r3y, x = 0; x < width; x++, r3x++) {
            if (r3x == 3) r3x = 0;
            if (!r3x && !ismasked(x, y)) qrframe[x + y * width] ^= 1;
          }
        }
        break;
      case 4:
        for (y = 0; y < width; y++) {
          for (r3x = 0, r3y = y >> 1 & 1, x = 0; x < width; x++, r3x++) {
            if (r3x == 3) {
              r3x = 0;
              r3y = !r3y;
            }
            if (!r3y && !ismasked(x, y)) qrframe[x + y * width] ^= 1;
          }
        }
        break;
      case 5:
        for (r3y = 0, y = 0; y < width; y++, r3y++) {
          if (r3y == 3) r3y = 0;
          for (r3x = 0, x = 0; x < width; x++, r3x++) {
            if (r3x == 3) r3x = 0;
            if (!((x & y & 1) + !(!r3x | !r3y)) && !ismasked(x, y)) qrframe[x + y * width] ^= 1;
          }
        }
        break;
      case 6:
        for (r3y = 0, y = 0; y < width; y++, r3y++) {
          if (r3y == 3) r3y = 0;
          for (r3x = 0, x = 0; x < width; x++, r3x++) {
            if (r3x == 3) r3x = 0;
            if (!((x & y & 1) + (r3x && r3x == r3y) & 1) && !ismasked(x, y)) qrframe[x + y * width] ^= 1;
          }
        }
        break;
      case 7:
        for (r3y = 0, y = 0; y < width; y++, r3y++) {
          if (r3y == 3) r3y = 0;
          for (r3x = 0, x = 0; x < width; x++, r3x++) {
            if (r3x == 3) r3x = 0;
            if (!((r3x && r3x == r3y) + (x + y & 1) & 1) && !ismasked(x, y)) qrframe[x + y * width] ^= 1;
          }
        }
        break;
    }
    return;
  }

  // Badness coefficients.
  var N1 = 3,
    N2 = 3,
    N3 = 40,
    N4 = 10;

  // Using the table of the length of each run, calculate the amount of bad image 
  // - long runs or those that look like finders; called twice, once each for X and Y
  function badruns(length) {
    var i;
    var runsbad = 0;
    for (i = 0; i <= length; i++) {
      if (rlens[i] >= 5) runsbad += N1 + rlens[i] - 5;
    }
    // BwBBBwB as in finder
    for (i = 3; i < length - 1; i += 2) {
      if (rlens[i - 2] == rlens[i + 2] && rlens[i + 2] == rlens[i - 1] && rlens[i - 1] == rlens[i + 1] && rlens[i - 1] * 3 == rlens[i]
      // white around the black pattern? Not part of spec
      && (rlens[i - 3] == 0 // beginning
      || i + 3 > length // end
      || rlens[i - 3] * 3 >= rlens[i] * 4 || rlens[i + 3] * 3 >= rlens[i] * 4)) runsbad += N3;
    }
    return runsbad;
  }

  // Calculate how bad the masked image is - blocks, imbalance, runs, or finders.
  function badcheck() {
    var x, y, h, b, b1;
    var thisbad = 0;
    var bw = 0;

    // blocks of same color.
    for (y = 0; y < width - 1; y++) {
      for (x = 0; x < width - 1; x++) {
        if (qrframe[x + width * y] && qrframe[x + 1 + width * y] && qrframe[x + width * (y + 1)] && qrframe[x + 1 + width * (y + 1)] // all black
        || !(qrframe[x + width * y] || qrframe[x + 1 + width * y] || qrframe[x + width * (y + 1)] || qrframe[x + 1 + width * (y + 1)]))
          // all white
          thisbad += N2;
      }
    }

    // X runs
    for (y = 0; y < width; y++) {
      rlens[0] = 0;
      for (h = b = x = 0; x < width; x++) {
        if ((b1 = qrframe[x + width * y]) == b) rlens[h]++;else rlens[++h] = 1;
        b = b1;
        bw += b ? 1 : -1;
      }
      thisbad += badruns(h);
    }

    // black/white imbalance
    if (bw < 0) bw = -bw;
    var big = bw;
    var count = 0;
    big += big << 2;
    big <<= 1;
    while (big > width * width) {
      big -= width * width, count++;
    }
    thisbad += count * N4;

    // Y runs
    for (x = 0; x < width; x++) {
      rlens[0] = 0;
      for (h = b = y = 0; y < width; y++) {
        if ((b1 = qrframe[x + width * y]) == b) rlens[h]++;else rlens[++h] = 1;
        b = b1;
      }
      thisbad += badruns(h);
    }
    return thisbad;
  }
  function genframe(instring) {
    var x, y, k, t, v, i, j, m;

    // find the smallest version that fits the string
    t = instring.length;
    version = 0;
    do {
      version++;
      k = (ecclevel - 1) * 4 + (version - 1) * 16;
      neccblk1 = eccblocks[k++];
      neccblk2 = eccblocks[k++];
      datablkw = eccblocks[k++];
      eccblkwid = eccblocks[k];
      k = datablkw * (neccblk1 + neccblk2) + neccblk2 - 3 + (version <= 9);
      if (t <= k) break;
    } while (version < 40);

    // FIXME - insure that it fits insted of being truncated
    width = 17 + 4 * version;

    // allocate, clear and setup data structures
    v = datablkw + (datablkw + eccblkwid) * (neccblk1 + neccblk2) + neccblk2;
    for (t = 0; t < v; t++) {
      eccbuf[t] = 0;
    }
    strinbuf = instring.slice(0);
    for (t = 0; t < width * width; t++) {
      qrframe[t] = 0;
    }
    for (t = 0; t < (width * (width + 1) + 1) / 2; t++) {
      framask[t] = 0;
    }

    // insert finders - black to frame, white to mask
    for (t = 0; t < 3; t++) {
      k = 0;
      y = 0;
      if (t == 1) k = width - 7;
      if (t == 2) y = width - 7;
      qrframe[y + 3 + width * (k + 3)] = 1;
      for (x = 0; x < 6; x++) {
        qrframe[y + x + width * k] = 1;
        qrframe[y + width * (k + x + 1)] = 1;
        qrframe[y + 6 + width * (k + x)] = 1;
        qrframe[y + x + 1 + width * (k + 6)] = 1;
      }
      for (x = 1; x < 5; x++) {
        setmask(y + x, k + 1);
        setmask(y + 1, k + x + 1);
        setmask(y + 5, k + x);
        setmask(y + x + 1, k + 5);
      }
      for (x = 2; x < 4; x++) {
        qrframe[y + x + width * (k + 2)] = 1;
        qrframe[y + 2 + width * (k + x + 1)] = 1;
        qrframe[y + 4 + width * (k + x)] = 1;
        qrframe[y + x + 1 + width * (k + 4)] = 1;
      }
    }

    // alignment blocks
    if (version > 1) {
      t = adelta[version];
      y = width - 7;
      for (;;) {
        x = width - 7;
        while (x > t - 3) {
          putalign(x, y);
          if (x < t) break;
          x -= t;
        }
        if (y <= t + 9) break;
        y -= t;
        putalign(6, y);
        putalign(y, 6);
      }
    }

    // single black
    qrframe[8 + width * (width - 8)] = 1;

    // timing gap - mask only
    for (y = 0; y < 7; y++) {
      setmask(7, y);
      setmask(width - 8, y);
      setmask(7, y + width - 7);
    }
    for (x = 0; x < 8; x++) {
      setmask(x, 7);
      setmask(x + width - 8, 7);
      setmask(x, width - 8);
    }

    // reserve mask-format area
    for (x = 0; x < 9; x++) {
      setmask(x, 8);
    }
    for (x = 0; x < 8; x++) {
      setmask(x + width - 8, 8);
      setmask(8, x);
    }
    for (y = 0; y < 7; y++) {
      setmask(8, y + width - 7);
    }

    // timing row/col
    for (x = 0; x < width - 14; x++) {
      if (x & 1) {
        setmask(8 + x, 6);
        setmask(6, 8 + x);
      } else {
        qrframe[8 + x + width * 6] = 1;
        qrframe[6 + width * (8 + x)] = 1;
      }
    }

    // version block
    if (version > 6) {
      t = vpat[version - 7];
      k = 17;
      for (x = 0; x < 6; x++) {
        for (y = 0; y < 3; y++, k--) {
          if (1 & (k > 11 ? version >> k - 12 : t >> k)) {
            qrframe[5 - x + width * (2 - y + width - 11)] = 1;
            qrframe[2 - y + width - 11 + width * (5 - x)] = 1;
          } else {
            setmask(5 - x, 2 - y + width - 11);
            setmask(2 - y + width - 11, 5 - x);
          }
        }
      }
    }

    // sync mask bits - only set above for white spaces, so add in black bits
    for (y = 0; y < width; y++) {
      for (x = 0; x <= y; x++) {
        if (qrframe[x + width * y]) setmask(x, y);
      }
    }

    // convert string to bitstream
    // 8 bit data to QR-coded 8 bit data (numeric or alphanum, or kanji not supported)
    v = strinbuf.length;

    // string to array
    for (i = 0; i < v; i++) {
      eccbuf[i] = strinbuf.charCodeAt(i);
    }
    strinbuf = eccbuf.slice(0);

    // calculate max string length
    x = datablkw * (neccblk1 + neccblk2) + neccblk2;
    if (v >= x - 2) {
      v = x - 2;
      if (version > 9) v--;
    }

    // shift and repack to insert length prefix
    i = v;
    if (version > 9) {
      strinbuf[i + 2] = 0;
      strinbuf[i + 3] = 0;
      while (i--) {
        t = strinbuf[i];
        strinbuf[i + 3] |= 255 & t << 4;
        strinbuf[i + 2] = t >> 4;
      }
      strinbuf[2] |= 255 & v << 4;
      strinbuf[1] = v >> 4;
      strinbuf[0] = 0x40 | v >> 12;
    } else {
      strinbuf[i + 1] = 0;
      strinbuf[i + 2] = 0;
      while (i--) {
        t = strinbuf[i];
        strinbuf[i + 2] |= 255 & t << 4;
        strinbuf[i + 1] = t >> 4;
      }
      strinbuf[1] |= 255 & v << 4;
      strinbuf[0] = 0x40 | v >> 4;
    }
    // fill to end with pad pattern
    i = v + 3 - (version < 10);
    while (i < x) {
      strinbuf[i++] = 0xec;
      // buffer has room    if (i == x)      break;
      strinbuf[i++] = 0x11;
    }

    // calculate and append ECC

    // calculate generator polynomial
    genpoly[0] = 1;
    for (i = 0; i < eccblkwid; i++) {
      genpoly[i + 1] = 1;
      for (j = i; j > 0; j--) {
        genpoly[j] = genpoly[j] ? genpoly[j - 1] ^ gexp[modnn(glog[genpoly[j]] + i)] : genpoly[j - 1];
      }
      genpoly[0] = gexp[modnn(glog[genpoly[0]] + i)];
    }
    for (i = 0; i <= eccblkwid; i++) {
      genpoly[i] = glog[genpoly[i]];
    } // use logs for genpoly[] to save calc step

    // append ecc to data buffer
    k = x;
    y = 0;
    for (i = 0; i < neccblk1; i++) {
      appendrs(y, datablkw, k, eccblkwid);
      y += datablkw;
      k += eccblkwid;
    }
    for (i = 0; i < neccblk2; i++) {
      appendrs(y, datablkw + 1, k, eccblkwid);
      y += datablkw + 1;
      k += eccblkwid;
    }
    // interleave blocks
    y = 0;
    for (i = 0; i < datablkw; i++) {
      for (j = 0; j < neccblk1; j++) {
        eccbuf[y++] = strinbuf[i + j * datablkw];
      }
      for (j = 0; j < neccblk2; j++) {
        eccbuf[y++] = strinbuf[neccblk1 * datablkw + i + j * (datablkw + 1)];
      }
    }
    for (j = 0; j < neccblk2; j++) {
      eccbuf[y++] = strinbuf[neccblk1 * datablkw + i + j * (datablkw + 1)];
    }
    for (i = 0; i < eccblkwid; i++) {
      for (j = 0; j < neccblk1 + neccblk2; j++) {
        eccbuf[y++] = strinbuf[x + i + j * eccblkwid];
      }
    }
    strinbuf = eccbuf;

    // pack bits into frame avoiding masked area.
    x = y = width - 1;
    k = v = 1; // up, minus
    /* inteleaved data and ecc codes */
    m = (datablkw + eccblkwid) * (neccblk1 + neccblk2) + neccblk2;
    for (i = 0; i < m; i++) {
      t = strinbuf[i];
      for (j = 0; j < 8; j++, t <<= 1) {
        if (0x80 & t) qrframe[x + width * y] = 1;
        do {
          // find next fill position
          if (v) x--;else {
            x++;
            if (k) {
              if (y != 0) y--;else {
                x -= 2;
                k = !k;
                if (x == 6) {
                  x--;
                  y = 9;
                }
              }
            } else {
              if (y != width - 1) y++;else {
                x -= 2;
                k = !k;
                if (x == 6) {
                  x--;
                  y -= 8;
                }
              }
            }
          }
          v = !v;
        } while (ismasked(x, y));
      }
    }

    // save pre-mask copy of frame
    strinbuf = qrframe.slice(0);
    t = 0; // best
    y = 30000; // demerit
    // for instead of while since in original arduino code
    // if an early mask was "good enough" it wouldn't try for a better one
    // since they get more complex and take longer.
    for (k = 0; k < 8; k++) {
      applymask(k); // returns black-white imbalance
      x = badcheck();
      if (x < y) {
        // current mask better than previous best?
        y = x;
        t = k;
      }
      if (t == 7) break; // don't increment i to a void redoing mask
      qrframe = strinbuf.slice(0); // reset for next pass
    }

    if (t != k)
      // redo best mask - none good enough, last wasn't t
      applymask(t);

    // add in final mask/ecclevel bytes
    y = fmtword[t + (ecclevel - 1 << 3)];
    // low byte
    for (k = 0; k < 8; k++, y >>= 1) {
      if (y & 1) {
        qrframe[width - 1 - k + width * 8] = 1;
        if (k < 6) qrframe[8 + width * k] = 1;else qrframe[8 + width * (k + 1)] = 1;
      }
    }
    // high byte
    for (k = 0; k < 7; k++, y >>= 1) {
      if (y & 1) {
        qrframe[8 + width * (width - 7 + k)] = 1;
        if (k) qrframe[6 - k + width * 8] = 1;else qrframe[7 + width * 8] = 1;
      }
    }
    return qrframe;
  }
  var _canvas = null;
  var api = {
    get ecclevel() {
      return ecclevel;
    },
    set ecclevel(val) {
      ecclevel = val;
    },
    get size() {
      return _size;
    },
    set size(val) {
      _size = val;
    },
    get canvas() {
      return _canvas;
    },
    set canvas(el) {
      _canvas = el;
    },
    getFrame: function getFrame(string) {
      return genframe(string);
    },
    //这里的utf16to8(str)是对Text中的字符串进行转码，让其支持中文
    utf16to8: function utf16to8(str) {
      var out, i, len, c;
      out = "";
      len = str.length;
      for (i = 0; i < len; i++) {
        c = str.charCodeAt(i);
        if (c >= 0x0001 && c <= 0x007F) {
          out += str.charAt(i);
        } else if (c > 0x07FF) {
          out += String.fromCharCode(0xE0 | c >> 12 & 0x0F);
          out += String.fromCharCode(0x80 | c >> 6 & 0x3F);
          out += String.fromCharCode(0x80 | c >> 0 & 0x3F);
        } else {
          out += String.fromCharCode(0xC0 | c >> 6 & 0x1F);
          out += String.fromCharCode(0x80 | c >> 0 & 0x3F);
        }
      }
      return out;
    },
    /**
     * 新增$this参数，传入组件的this,兼容在组件中生成
     */
    draw: function draw(str, canvas, cavW, cavH, cavColor, haveImg, imageUrl, imageSize, $this) {
      var cb = arguments.length > 9 && arguments[9] !== undefined ? arguments[9] : function () {};
      var ecc = arguments.length > 10 ? arguments[10] : undefined;
      var that = this;
      ecclevel = ecc || ecclevel;
      canvas = canvas || _canvas;
      if (!canvas) {
        console.warn('No canvas provided to draw QR code in!');
        return;
      }
      var pre_background = "#ffffff";
      var size = Math.min(cavW, cavH);
      str = that.utf16to8(str); //增加中文显示

      var frame = that.getFrame(str);
      // 组件中生成qrcode需要绑定this 
      var ctx = uni.createCanvasContext(canvas, $this);
      var px = Math.round(size / width);
      var roundedSize = px * width;
      // var px = 1 ;
      // var roundedSize = px * (width + 8) ;

      //var roundedSize = 0 ;
      //var offset = Math.floor((size - roundedSize) / 2);
      var offset = 0;
      size = roundedSize;
      //ctx.clearRect(0, 0, cavW, cavW);
      ctx.setFillStyle(pre_background);
      ctx.fillRect(0, 0, cavW, cavW);
      ctx.setFillStyle(cavColor);
      for (var i = 0; i < width; i++) {
        for (var j = 0; j < width; j++) {
          if (frame[j * width + i]) {
            ctx.fillRect(px * i + offset, px * j + offset, px, px);
          }
        }
      }

      //画图片
      if (haveImg) {
        try {
          // 画圆角矩形
          var drawRoundedRect = function drawRoundedRect(ctxi, x, y, width, height, r, lineWidth, fill, stroke) {
            ctxi.setLineWidth(lineWidth);
            ctxi.setFillStyle(pre_background);
            ctxi.setStrokeStyle(pre_background);
            ctxi.beginPath(); // draw top and top right corner 
            ctxi.moveTo(x + r, y);
            ctxi.arcTo(x + width, y, x + width, y + r, r); // draw right side and bottom right corner 
            ctxi.arcTo(x + width, y + height, x + width - r, y + height, r); // draw bottom and bottom left corner 
            ctxi.arcTo(x, y + height, x, y + height - r, r); // draw left and top left corner 
            ctxi.arcTo(x, y, x + r, y, r);
            ctxi.closePath();
            if (fill) {
              ctxi.fill();
            }
            if (stroke) {
              ctxi.stroke();
            }
          };
          var x = Number(((cavW - imageSize - 14) / 2).toFixed(2));
          var y = Number(((cavH - imageSize - 14) / 2).toFixed(2));
          drawRoundedRect(ctx, x, y, imageSize, imageSize, imageSize / 2, 6, true, true);
          var isNetImg = false;
          isNetImg = imageUrl.substr(0, 4) == 'http' ? true : false;
          if (isNetImg) {
            //网络图片下载到本地
            uni.getImageInfo({
              src: imageUrl,
              success: function success(res) {
                ctx.drawImage(res.path, x, y, imageSize, imageSize);
                //--增加绘制完成回调
                ctx.draw(false, function () {
                  cb();
                });
              }
            });
          } else {
            ctx.drawImage(imageUrl, x, y, imageSize, imageSize);
            //--增加绘制完成回调
            ctx.draw(false, function () {
              cb();
            });
          }
        } catch (e) {
          //TODO handle the exception
        }
      } else {
        //--增加绘制完成回调
        ctx.draw(false, function () {
          cb();
        });
      }
    }
  };
  module.exports = {
    api: api
  };
}();
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/uni-mp-weixin/dist/index.js */ 2)["default"]))

/***/ }),
/* 189 */
/*!*****************************************************************************************!*\
  !*** F:/project/qianduan/zhanhuitong_yudengji_git/components/ay-qrcode/weapp-qrcode.js ***!
  \*****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(wx) {//Core code comes from https://github.com/davidshimjs/qrcodejs

var QRCode;
(function () {
  /**
       * Get the type by string length
       * 
       * @private
       * @param {String} sText
       * @param {Number} nCorrectLevel
       * @return {Number} type
       */
  function _getTypeNumber(sText, nCorrectLevel) {
    var nType = 1;
    var length = _getUTF8Length(sText);
    for (var i = 0, len = QRCodeLimitLength.length; i <= len; i++) {
      var nLimit = 0;
      switch (nCorrectLevel) {
        case QRErrorCorrectLevel.L:
          nLimit = QRCodeLimitLength[i][0];
          break;
        case QRErrorCorrectLevel.M:
          nLimit = QRCodeLimitLength[i][1];
          break;
        case QRErrorCorrectLevel.Q:
          nLimit = QRCodeLimitLength[i][2];
          break;
        case QRErrorCorrectLevel.H:
          nLimit = QRCodeLimitLength[i][3];
          break;
      }
      if (length <= nLimit) {
        break;
      } else {
        nType++;
      }
    }
    if (nType > QRCodeLimitLength.length) {
      throw new Error("Too long data");
    }
    return nType;
  }
  function _getUTF8Length(sText) {
    var replacedText = encodeURI(sText).toString().replace(/\%[0-9a-fA-F]{2}/g, 'a');
    return replacedText.length + (replacedText.length != sText ? 3 : 0);
  }
  function QR8bitByte(data) {
    this.mode = QRMode.MODE_8BIT_BYTE;
    this.data = data;
    this.parsedData = [];

    // Added to support UTF-8 Characters
    for (var i = 0, l = this.data.length; i < l; i++) {
      var byteArray = [];
      var code = this.data.charCodeAt(i);
      if (code > 0x10000) {
        byteArray[0] = 0xF0 | (code & 0x1C0000) >>> 18;
        byteArray[1] = 0x80 | (code & 0x3F000) >>> 12;
        byteArray[2] = 0x80 | (code & 0xFC0) >>> 6;
        byteArray[3] = 0x80 | code & 0x3F;
      } else if (code > 0x800) {
        byteArray[0] = 0xE0 | (code & 0xF000) >>> 12;
        byteArray[1] = 0x80 | (code & 0xFC0) >>> 6;
        byteArray[2] = 0x80 | code & 0x3F;
      } else if (code > 0x80) {
        byteArray[0] = 0xC0 | (code & 0x7C0) >>> 6;
        byteArray[1] = 0x80 | code & 0x3F;
      } else {
        byteArray[0] = code;
      }
      this.parsedData.push(byteArray);
    }
    this.parsedData = Array.prototype.concat.apply([], this.parsedData);
    if (this.parsedData.length != this.data.length) {
      this.parsedData.unshift(191);
      this.parsedData.unshift(187);
      this.parsedData.unshift(239);
    }
  }
  QR8bitByte.prototype = {
    getLength: function getLength(buffer) {
      return this.parsedData.length;
    },
    write: function write(buffer) {
      for (var i = 0, l = this.parsedData.length; i < l; i++) {
        buffer.put(this.parsedData[i], 8);
      }
    }
  };

  // QRCodeModel
  function QRCodeModel(typeNumber, errorCorrectLevel) {
    this.typeNumber = typeNumber;
    this.errorCorrectLevel = errorCorrectLevel;
    this.modules = null;
    this.moduleCount = 0;
    this.dataCache = null;
    this.dataList = [];
  }
  QRCodeModel.prototype = {
    addData: function addData(data) {
      var newData = new QR8bitByte(data);
      this.dataList.push(newData);
      this.dataCache = null;
    },
    isDark: function isDark(row, col) {
      if (row < 0 || this.moduleCount <= row || col < 0 || this.moduleCount <= col) {
        throw new Error(row + "," + col);
      }
      return this.modules[row][col];
    },
    getModuleCount: function getModuleCount() {
      return this.moduleCount;
    },
    make: function make() {
      this.makeImpl(false, this.getBestMaskPattern());
    },
    makeImpl: function makeImpl(test, maskPattern) {
      this.moduleCount = this.typeNumber * 4 + 17;
      this.modules = new Array(this.moduleCount);
      for (var row = 0; row < this.moduleCount; row++) {
        this.modules[row] = new Array(this.moduleCount);
        for (var col = 0; col < this.moduleCount; col++) {
          this.modules[row][col] = null;
        }
      }
      this.setupPositionProbePattern(0, 0);
      this.setupPositionProbePattern(this.moduleCount - 7, 0);
      this.setupPositionProbePattern(0, this.moduleCount - 7);
      this.setupPositionAdjustPattern();
      this.setupTimingPattern();
      this.setupTypeInfo(test, maskPattern);
      if (this.typeNumber >= 7) {
        this.setupTypeNumber(test);
      }
      if (this.dataCache == null) {
        this.dataCache = QRCodeModel.createData(this.typeNumber, this.errorCorrectLevel, this.dataList);
      }
      this.mapData(this.dataCache, maskPattern);
    },
    setupPositionProbePattern: function setupPositionProbePattern(row, col) {
      for (var r = -1; r <= 7; r++) {
        if (row + r <= -1 || this.moduleCount <= row + r) continue;
        for (var c = -1; c <= 7; c++) {
          if (col + c <= -1 || this.moduleCount <= col + c) continue;
          if (0 <= r && r <= 6 && (c == 0 || c == 6) || 0 <= c && c <= 6 && (r == 0 || r == 6) || 2 <= r && r <= 4 && 2 <= c && c <= 4) {
            this.modules[row + r][col + c] = true;
          } else {
            this.modules[row + r][col + c] = false;
          }
        }
      }
    },
    getBestMaskPattern: function getBestMaskPattern() {
      var minLostPoint = 0;
      var pattern = 0;
      for (var i = 0; i < 8; i++) {
        this.makeImpl(true, i);
        var lostPoint = QRUtil.getLostPoint(this);
        if (i == 0 || minLostPoint > lostPoint) {
          minLostPoint = lostPoint;
          pattern = i;
        }
      }
      return pattern;
    },
    createMovieClip: function createMovieClip(target_mc, instance_name, depth) {
      var qr_mc = target_mc.createEmptyMovieClip(instance_name, depth);
      var cs = 1;
      this.make();
      for (var row = 0; row < this.modules.length; row++) {
        var y = row * cs;
        for (var col = 0; col < this.modules[row].length; col++) {
          var x = col * cs;
          var dark = this.modules[row][col];
          if (dark) {
            qr_mc.beginFill(0, 100);
            qr_mc.moveTo(x, y);
            qr_mc.lineTo(x + cs, y);
            qr_mc.lineTo(x + cs, y + cs);
            qr_mc.lineTo(x, y + cs);
            qr_mc.endFill();
          }
        }
      }
      return qr_mc;
    },
    setupTimingPattern: function setupTimingPattern() {
      for (var r = 8; r < this.moduleCount - 8; r++) {
        if (this.modules[r][6] != null) {
          continue;
        }
        this.modules[r][6] = r % 2 == 0;
      }
      for (var c = 8; c < this.moduleCount - 8; c++) {
        if (this.modules[6][c] != null) {
          continue;
        }
        this.modules[6][c] = c % 2 == 0;
      }
    },
    setupPositionAdjustPattern: function setupPositionAdjustPattern() {
      var pos = QRUtil.getPatternPosition(this.typeNumber);
      for (var i = 0; i < pos.length; i++) {
        for (var j = 0; j < pos.length; j++) {
          var row = pos[i];
          var col = pos[j];
          if (this.modules[row][col] != null) {
            continue;
          }
          for (var r = -2; r <= 2; r++) {
            for (var c = -2; c <= 2; c++) {
              if (r == -2 || r == 2 || c == -2 || c == 2 || r == 0 && c == 0) {
                this.modules[row + r][col + c] = true;
              } else {
                this.modules[row + r][col + c] = false;
              }
            }
          }
        }
      }
    },
    setupTypeNumber: function setupTypeNumber(test) {
      var bits = QRUtil.getBCHTypeNumber(this.typeNumber);
      for (var i = 0; i < 18; i++) {
        var mod = !test && (bits >> i & 1) == 1;
        this.modules[Math.floor(i / 3)][i % 3 + this.moduleCount - 8 - 3] = mod;
      }
      for (var i = 0; i < 18; i++) {
        var mod = !test && (bits >> i & 1) == 1;
        this.modules[i % 3 + this.moduleCount - 8 - 3][Math.floor(i / 3)] = mod;
      }
    },
    setupTypeInfo: function setupTypeInfo(test, maskPattern) {
      var data = this.errorCorrectLevel << 3 | maskPattern;
      var bits = QRUtil.getBCHTypeInfo(data);
      for (var i = 0; i < 15; i++) {
        var mod = !test && (bits >> i & 1) == 1;
        if (i < 6) {
          this.modules[i][8] = mod;
        } else if (i < 8) {
          this.modules[i + 1][8] = mod;
        } else {
          this.modules[this.moduleCount - 15 + i][8] = mod;
        }
      }
      for (var i = 0; i < 15; i++) {
        var mod = !test && (bits >> i & 1) == 1;
        if (i < 8) {
          this.modules[8][this.moduleCount - i - 1] = mod;
        } else if (i < 9) {
          this.modules[8][15 - i - 1 + 1] = mod;
        } else {
          this.modules[8][15 - i - 1] = mod;
        }
      }
      this.modules[this.moduleCount - 8][8] = !test;
    },
    mapData: function mapData(data, maskPattern) {
      var inc = -1;
      var row = this.moduleCount - 1;
      var bitIndex = 7;
      var byteIndex = 0;
      for (var col = this.moduleCount - 1; col > 0; col -= 2) {
        if (col == 6) col--;
        while (true) {
          for (var c = 0; c < 2; c++) {
            if (this.modules[row][col - c] == null) {
              var dark = false;
              if (byteIndex < data.length) {
                dark = (data[byteIndex] >>> bitIndex & 1) == 1;
              }
              var mask = QRUtil.getMask(maskPattern, row, col - c);
              if (mask) {
                dark = !dark;
              }
              this.modules[row][col - c] = dark;
              bitIndex--;
              if (bitIndex == -1) {
                byteIndex++;
                bitIndex = 7;
              }
            }
          }
          row += inc;
          if (row < 0 || this.moduleCount <= row) {
            row -= inc;
            inc = -inc;
            break;
          }
        }
      }
    }
  };
  QRCodeModel.PAD0 = 0xEC;
  QRCodeModel.PAD1 = 0x11;
  QRCodeModel.createData = function (typeNumber, errorCorrectLevel, dataList) {
    var rsBlocks = QRRSBlock.getRSBlocks(typeNumber, errorCorrectLevel);
    var buffer = new QRBitBuffer();
    for (var i = 0; i < dataList.length; i++) {
      var data = dataList[i];
      buffer.put(data.mode, 4);
      buffer.put(data.getLength(), QRUtil.getLengthInBits(data.mode, typeNumber));
      data.write(buffer);
    }
    var totalDataCount = 0;
    for (var i = 0; i < rsBlocks.length; i++) {
      totalDataCount += rsBlocks[i].dataCount;
    }
    if (buffer.getLengthInBits() > totalDataCount * 8) {
      throw new Error("code length overflow. (" + buffer.getLengthInBits() + ">" + totalDataCount * 8 + ")");
    }
    if (buffer.getLengthInBits() + 4 <= totalDataCount * 8) {
      buffer.put(0, 4);
    }
    while (buffer.getLengthInBits() % 8 != 0) {
      buffer.putBit(false);
    }
    while (true) {
      if (buffer.getLengthInBits() >= totalDataCount * 8) {
        break;
      }
      buffer.put(QRCodeModel.PAD0, 8);
      if (buffer.getLengthInBits() >= totalDataCount * 8) {
        break;
      }
      buffer.put(QRCodeModel.PAD1, 8);
    }
    return QRCodeModel.createBytes(buffer, rsBlocks);
  };
  QRCodeModel.createBytes = function (buffer, rsBlocks) {
    var offset = 0;
    var maxDcCount = 0;
    var maxEcCount = 0;
    var dcdata = new Array(rsBlocks.length);
    var ecdata = new Array(rsBlocks.length);
    for (var r = 0; r < rsBlocks.length; r++) {
      var dcCount = rsBlocks[r].dataCount;
      var ecCount = rsBlocks[r].totalCount - dcCount;
      maxDcCount = Math.max(maxDcCount, dcCount);
      maxEcCount = Math.max(maxEcCount, ecCount);
      dcdata[r] = new Array(dcCount);
      for (var i = 0; i < dcdata[r].length; i++) {
        dcdata[r][i] = 0xff & buffer.buffer[i + offset];
      }
      offset += dcCount;
      var rsPoly = QRUtil.getErrorCorrectPolynomial(ecCount);
      var rawPoly = new QRPolynomial(dcdata[r], rsPoly.getLength() - 1);
      var modPoly = rawPoly.mod(rsPoly);
      ecdata[r] = new Array(rsPoly.getLength() - 1);
      for (var i = 0; i < ecdata[r].length; i++) {
        var modIndex = i + modPoly.getLength() - ecdata[r].length;
        ecdata[r][i] = modIndex >= 0 ? modPoly.get(modIndex) : 0;
      }
    }
    var totalCodeCount = 0;
    for (var i = 0; i < rsBlocks.length; i++) {
      totalCodeCount += rsBlocks[i].totalCount;
    }
    var data = new Array(totalCodeCount);
    var index = 0;
    for (var i = 0; i < maxDcCount; i++) {
      for (var r = 0; r < rsBlocks.length; r++) {
        if (i < dcdata[r].length) {
          data[index++] = dcdata[r][i];
        }
      }
    }
    for (var i = 0; i < maxEcCount; i++) {
      for (var r = 0; r < rsBlocks.length; r++) {
        if (i < ecdata[r].length) {
          data[index++] = ecdata[r][i];
        }
      }
    }
    return data;
  };
  var QRMode = {
    MODE_NUMBER: 1 << 0,
    MODE_ALPHA_NUM: 1 << 1,
    MODE_8BIT_BYTE: 1 << 2,
    MODE_KANJI: 1 << 3
  };
  var QRErrorCorrectLevel = {
    L: 1,
    M: 0,
    Q: 3,
    H: 2
  };
  var QRMaskPattern = {
    PATTERN000: 0,
    PATTERN001: 1,
    PATTERN010: 2,
    PATTERN011: 3,
    PATTERN100: 4,
    PATTERN101: 5,
    PATTERN110: 6,
    PATTERN111: 7
  };
  var QRUtil = {
    PATTERN_POSITION_TABLE: [[], [6, 18], [6, 22], [6, 26], [6, 30], [6, 34], [6, 22, 38], [6, 24, 42], [6, 26, 46], [6, 28, 50], [6, 30, 54], [6, 32, 58], [6, 34, 62], [6, 26, 46, 66], [6, 26, 48, 70], [6, 26, 50, 74], [6, 30, 54, 78], [6, 30, 56, 82], [6, 30, 58, 86], [6, 34, 62, 90], [6, 28, 50, 72, 94], [6, 26, 50, 74, 98], [6, 30, 54, 78, 102], [6, 28, 54, 80, 106], [6, 32, 58, 84, 110], [6, 30, 58, 86, 114], [6, 34, 62, 90, 118], [6, 26, 50, 74, 98, 122], [6, 30, 54, 78, 102, 126], [6, 26, 52, 78, 104, 130], [6, 30, 56, 82, 108, 134], [6, 34, 60, 86, 112, 138], [6, 30, 58, 86, 114, 142], [6, 34, 62, 90, 118, 146], [6, 30, 54, 78, 102, 126, 150], [6, 24, 50, 76, 102, 128, 154], [6, 28, 54, 80, 106, 132, 158], [6, 32, 58, 84, 110, 136, 162], [6, 26, 54, 82, 110, 138, 166], [6, 30, 58, 86, 114, 142, 170]],
    G15: 1 << 10 | 1 << 8 | 1 << 5 | 1 << 4 | 1 << 2 | 1 << 1 | 1 << 0,
    G18: 1 << 12 | 1 << 11 | 1 << 10 | 1 << 9 | 1 << 8 | 1 << 5 | 1 << 2 | 1 << 0,
    G15_MASK: 1 << 14 | 1 << 12 | 1 << 10 | 1 << 4 | 1 << 1,
    getBCHTypeInfo: function getBCHTypeInfo(data) {
      var d = data << 10;
      while (QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G15) >= 0) {
        d ^= QRUtil.G15 << QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G15);
      }
      return (data << 10 | d) ^ QRUtil.G15_MASK;
    },
    getBCHTypeNumber: function getBCHTypeNumber(data) {
      var d = data << 12;
      while (QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G18) >= 0) {
        d ^= QRUtil.G18 << QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G18);
      }
      return data << 12 | d;
    },
    getBCHDigit: function getBCHDigit(data) {
      var digit = 0;
      while (data != 0) {
        digit++;
        data >>>= 1;
      }
      return digit;
    },
    getPatternPosition: function getPatternPosition(typeNumber) {
      return QRUtil.PATTERN_POSITION_TABLE[typeNumber - 1];
    },
    getMask: function getMask(maskPattern, i, j) {
      switch (maskPattern) {
        case QRMaskPattern.PATTERN000:
          return (i + j) % 2 == 0;
        case QRMaskPattern.PATTERN001:
          return i % 2 == 0;
        case QRMaskPattern.PATTERN010:
          return j % 3 == 0;
        case QRMaskPattern.PATTERN011:
          return (i + j) % 3 == 0;
        case QRMaskPattern.PATTERN100:
          return (Math.floor(i / 2) + Math.floor(j / 3)) % 2 == 0;
        case QRMaskPattern.PATTERN101:
          return i * j % 2 + i * j % 3 == 0;
        case QRMaskPattern.PATTERN110:
          return (i * j % 2 + i * j % 3) % 2 == 0;
        case QRMaskPattern.PATTERN111:
          return (i * j % 3 + (i + j) % 2) % 2 == 0;
        default:
          throw new Error("bad maskPattern:" + maskPattern);
      }
    },
    getErrorCorrectPolynomial: function getErrorCorrectPolynomial(errorCorrectLength) {
      var a = new QRPolynomial([1], 0);
      for (var i = 0; i < errorCorrectLength; i++) {
        a = a.multiply(new QRPolynomial([1, QRMath.gexp(i)], 0));
      }
      return a;
    },
    getLengthInBits: function getLengthInBits(mode, type) {
      if (1 <= type && type < 10) {
        switch (mode) {
          case QRMode.MODE_NUMBER:
            return 10;
          case QRMode.MODE_ALPHA_NUM:
            return 9;
          case QRMode.MODE_8BIT_BYTE:
            return 8;
          case QRMode.MODE_KANJI:
            return 8;
          default:
            throw new Error("mode:" + mode);
        }
      } else if (type < 27) {
        switch (mode) {
          case QRMode.MODE_NUMBER:
            return 12;
          case QRMode.MODE_ALPHA_NUM:
            return 11;
          case QRMode.MODE_8BIT_BYTE:
            return 16;
          case QRMode.MODE_KANJI:
            return 10;
          default:
            throw new Error("mode:" + mode);
        }
      } else if (type < 41) {
        switch (mode) {
          case QRMode.MODE_NUMBER:
            return 14;
          case QRMode.MODE_ALPHA_NUM:
            return 13;
          case QRMode.MODE_8BIT_BYTE:
            return 16;
          case QRMode.MODE_KANJI:
            return 12;
          default:
            throw new Error("mode:" + mode);
        }
      } else {
        throw new Error("type:" + type);
      }
    },
    getLostPoint: function getLostPoint(qrCode) {
      var moduleCount = qrCode.getModuleCount();
      var lostPoint = 0;
      for (var row = 0; row < moduleCount; row++) {
        for (var col = 0; col < moduleCount; col++) {
          var sameCount = 0;
          var dark = qrCode.isDark(row, col);
          for (var r = -1; r <= 1; r++) {
            if (row + r < 0 || moduleCount <= row + r) {
              continue;
            }
            for (var c = -1; c <= 1; c++) {
              if (col + c < 0 || moduleCount <= col + c) {
                continue;
              }
              if (r == 0 && c == 0) {
                continue;
              }
              if (dark == qrCode.isDark(row + r, col + c)) {
                sameCount++;
              }
            }
          }
          if (sameCount > 5) {
            lostPoint += 3 + sameCount - 5;
          }
        }
      }
      for (var row = 0; row < moduleCount - 1; row++) {
        for (var col = 0; col < moduleCount - 1; col++) {
          var count = 0;
          if (qrCode.isDark(row, col)) count++;
          if (qrCode.isDark(row + 1, col)) count++;
          if (qrCode.isDark(row, col + 1)) count++;
          if (qrCode.isDark(row + 1, col + 1)) count++;
          if (count == 0 || count == 4) {
            lostPoint += 3;
          }
        }
      }
      for (var row = 0; row < moduleCount; row++) {
        for (var col = 0; col < moduleCount - 6; col++) {
          if (qrCode.isDark(row, col) && !qrCode.isDark(row, col + 1) && qrCode.isDark(row, col + 2) && qrCode.isDark(row, col + 3) && qrCode.isDark(row, col + 4) && !qrCode.isDark(row, col + 5) && qrCode.isDark(row, col + 6)) {
            lostPoint += 40;
          }
        }
      }
      for (var col = 0; col < moduleCount; col++) {
        for (var row = 0; row < moduleCount - 6; row++) {
          if (qrCode.isDark(row, col) && !qrCode.isDark(row + 1, col) && qrCode.isDark(row + 2, col) && qrCode.isDark(row + 3, col) && qrCode.isDark(row + 4, col) && !qrCode.isDark(row + 5, col) && qrCode.isDark(row + 6, col)) {
            lostPoint += 40;
          }
        }
      }
      var darkCount = 0;
      for (var col = 0; col < moduleCount; col++) {
        for (var row = 0; row < moduleCount; row++) {
          if (qrCode.isDark(row, col)) {
            darkCount++;
          }
        }
      }
      var ratio = Math.abs(100 * darkCount / moduleCount / moduleCount - 50) / 5;
      lostPoint += ratio * 10;
      return lostPoint;
    }
  };
  var QRMath = {
    glog: function glog(n) {
      if (n < 1) {
        throw new Error("glog(" + n + ")");
      }
      return QRMath.LOG_TABLE[n];
    },
    gexp: function gexp(n) {
      while (n < 0) {
        n += 255;
      }
      while (n >= 256) {
        n -= 255;
      }
      return QRMath.EXP_TABLE[n];
    },
    EXP_TABLE: new Array(256),
    LOG_TABLE: new Array(256)
  };
  for (var i = 0; i < 8; i++) {
    QRMath.EXP_TABLE[i] = 1 << i;
  }
  for (var i = 8; i < 256; i++) {
    QRMath.EXP_TABLE[i] = QRMath.EXP_TABLE[i - 4] ^ QRMath.EXP_TABLE[i - 5] ^ QRMath.EXP_TABLE[i - 6] ^ QRMath.EXP_TABLE[i - 8];
  }
  for (var i = 0; i < 255; i++) {
    QRMath.LOG_TABLE[QRMath.EXP_TABLE[i]] = i;
  }
  function QRPolynomial(num, shift) {
    if (num.length == undefined) {
      throw new Error(num.length + "/" + shift);
    }
    var offset = 0;
    while (offset < num.length && num[offset] == 0) {
      offset++;
    }
    this.num = new Array(num.length - offset + shift);
    for (var i = 0; i < num.length - offset; i++) {
      this.num[i] = num[i + offset];
    }
  }
  QRPolynomial.prototype = {
    get: function get(index) {
      return this.num[index];
    },
    getLength: function getLength() {
      return this.num.length;
    },
    multiply: function multiply(e) {
      var num = new Array(this.getLength() + e.getLength() - 1);
      for (var i = 0; i < this.getLength(); i++) {
        for (var j = 0; j < e.getLength(); j++) {
          num[i + j] ^= QRMath.gexp(QRMath.glog(this.get(i)) + QRMath.glog(e.get(j)));
        }
      }
      return new QRPolynomial(num, 0);
    },
    mod: function mod(e) {
      if (this.getLength() - e.getLength() < 0) {
        return this;
      }
      var ratio = QRMath.glog(this.get(0)) - QRMath.glog(e.get(0));
      var num = new Array(this.getLength());
      for (var i = 0; i < this.getLength(); i++) {
        num[i] = this.get(i);
      }
      for (var i = 0; i < e.getLength(); i++) {
        num[i] ^= QRMath.gexp(QRMath.glog(e.get(i)) + ratio);
      }
      return new QRPolynomial(num, 0).mod(e);
    }
  };
  function QRRSBlock(totalCount, dataCount) {
    this.totalCount = totalCount;
    this.dataCount = dataCount;
  }
  QRRSBlock.RS_BLOCK_TABLE = [[1, 26, 19], [1, 26, 16], [1, 26, 13], [1, 26, 9], [1, 44, 34], [1, 44, 28], [1, 44, 22], [1, 44, 16], [1, 70, 55], [1, 70, 44], [2, 35, 17], [2, 35, 13], [1, 100, 80], [2, 50, 32], [2, 50, 24], [4, 25, 9], [1, 134, 108], [2, 67, 43], [2, 33, 15, 2, 34, 16], [2, 33, 11, 2, 34, 12], [2, 86, 68], [4, 43, 27], [4, 43, 19], [4, 43, 15], [2, 98, 78], [4, 49, 31], [2, 32, 14, 4, 33, 15], [4, 39, 13, 1, 40, 14], [2, 121, 97], [2, 60, 38, 2, 61, 39], [4, 40, 18, 2, 41, 19], [4, 40, 14, 2, 41, 15], [2, 146, 116], [3, 58, 36, 2, 59, 37], [4, 36, 16, 4, 37, 17], [4, 36, 12, 4, 37, 13], [2, 86, 68, 2, 87, 69], [4, 69, 43, 1, 70, 44], [6, 43, 19, 2, 44, 20], [6, 43, 15, 2, 44, 16], [4, 101, 81], [1, 80, 50, 4, 81, 51], [4, 50, 22, 4, 51, 23], [3, 36, 12, 8, 37, 13], [2, 116, 92, 2, 117, 93], [6, 58, 36, 2, 59, 37], [4, 46, 20, 6, 47, 21], [7, 42, 14, 4, 43, 15], [4, 133, 107], [8, 59, 37, 1, 60, 38], [8, 44, 20, 4, 45, 21], [12, 33, 11, 4, 34, 12], [3, 145, 115, 1, 146, 116], [4, 64, 40, 5, 65, 41], [11, 36, 16, 5, 37, 17], [11, 36, 12, 5, 37, 13], [5, 109, 87, 1, 110, 88], [5, 65, 41, 5, 66, 42], [5, 54, 24, 7, 55, 25], [11, 36, 12], [5, 122, 98, 1, 123, 99], [7, 73, 45, 3, 74, 46], [15, 43, 19, 2, 44, 20], [3, 45, 15, 13, 46, 16], [1, 135, 107, 5, 136, 108], [10, 74, 46, 1, 75, 47], [1, 50, 22, 15, 51, 23], [2, 42, 14, 17, 43, 15], [5, 150, 120, 1, 151, 121], [9, 69, 43, 4, 70, 44], [17, 50, 22, 1, 51, 23], [2, 42, 14, 19, 43, 15], [3, 141, 113, 4, 142, 114], [3, 70, 44, 11, 71, 45], [17, 47, 21, 4, 48, 22], [9, 39, 13, 16, 40, 14], [3, 135, 107, 5, 136, 108], [3, 67, 41, 13, 68, 42], [15, 54, 24, 5, 55, 25], [15, 43, 15, 10, 44, 16], [4, 144, 116, 4, 145, 117], [17, 68, 42], [17, 50, 22, 6, 51, 23], [19, 46, 16, 6, 47, 17], [2, 139, 111, 7, 140, 112], [17, 74, 46], [7, 54, 24, 16, 55, 25], [34, 37, 13], [4, 151, 121, 5, 152, 122], [4, 75, 47, 14, 76, 48], [11, 54, 24, 14, 55, 25], [16, 45, 15, 14, 46, 16], [6, 147, 117, 4, 148, 118], [6, 73, 45, 14, 74, 46], [11, 54, 24, 16, 55, 25], [30, 46, 16, 2, 47, 17], [8, 132, 106, 4, 133, 107], [8, 75, 47, 13, 76, 48], [7, 54, 24, 22, 55, 25], [22, 45, 15, 13, 46, 16], [10, 142, 114, 2, 143, 115], [19, 74, 46, 4, 75, 47], [28, 50, 22, 6, 51, 23], [33, 46, 16, 4, 47, 17], [8, 152, 122, 4, 153, 123], [22, 73, 45, 3, 74, 46], [8, 53, 23, 26, 54, 24], [12, 45, 15, 28, 46, 16], [3, 147, 117, 10, 148, 118], [3, 73, 45, 23, 74, 46], [4, 54, 24, 31, 55, 25], [11, 45, 15, 31, 46, 16], [7, 146, 116, 7, 147, 117], [21, 73, 45, 7, 74, 46], [1, 53, 23, 37, 54, 24], [19, 45, 15, 26, 46, 16], [5, 145, 115, 10, 146, 116], [19, 75, 47, 10, 76, 48], [15, 54, 24, 25, 55, 25], [23, 45, 15, 25, 46, 16], [13, 145, 115, 3, 146, 116], [2, 74, 46, 29, 75, 47], [42, 54, 24, 1, 55, 25], [23, 45, 15, 28, 46, 16], [17, 145, 115], [10, 74, 46, 23, 75, 47], [10, 54, 24, 35, 55, 25], [19, 45, 15, 35, 46, 16], [17, 145, 115, 1, 146, 116], [14, 74, 46, 21, 75, 47], [29, 54, 24, 19, 55, 25], [11, 45, 15, 46, 46, 16], [13, 145, 115, 6, 146, 116], [14, 74, 46, 23, 75, 47], [44, 54, 24, 7, 55, 25], [59, 46, 16, 1, 47, 17], [12, 151, 121, 7, 152, 122], [12, 75, 47, 26, 76, 48], [39, 54, 24, 14, 55, 25], [22, 45, 15, 41, 46, 16], [6, 151, 121, 14, 152, 122], [6, 75, 47, 34, 76, 48], [46, 54, 24, 10, 55, 25], [2, 45, 15, 64, 46, 16], [17, 152, 122, 4, 153, 123], [29, 74, 46, 14, 75, 47], [49, 54, 24, 10, 55, 25], [24, 45, 15, 46, 46, 16], [4, 152, 122, 18, 153, 123], [13, 74, 46, 32, 75, 47], [48, 54, 24, 14, 55, 25], [42, 45, 15, 32, 46, 16], [20, 147, 117, 4, 148, 118], [40, 75, 47, 7, 76, 48], [43, 54, 24, 22, 55, 25], [10, 45, 15, 67, 46, 16], [19, 148, 118, 6, 149, 119], [18, 75, 47, 31, 76, 48], [34, 54, 24, 34, 55, 25], [20, 45, 15, 61, 46, 16]];
  QRRSBlock.getRSBlocks = function (typeNumber, errorCorrectLevel) {
    var rsBlock = QRRSBlock.getRsBlockTable(typeNumber, errorCorrectLevel);
    if (rsBlock == undefined) {
      throw new Error("bad rs block @ typeNumber:" + typeNumber + "/errorCorrectLevel:" + errorCorrectLevel);
    }
    var length = rsBlock.length / 3;
    var list = [];
    for (var i = 0; i < length; i++) {
      var count = rsBlock[i * 3 + 0];
      var totalCount = rsBlock[i * 3 + 1];
      var dataCount = rsBlock[i * 3 + 2];
      for (var j = 0; j < count; j++) {
        list.push(new QRRSBlock(totalCount, dataCount));
      }
    }
    return list;
  };
  QRRSBlock.getRsBlockTable = function (typeNumber, errorCorrectLevel) {
    switch (errorCorrectLevel) {
      case QRErrorCorrectLevel.L:
        return QRRSBlock.RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 0];
      case QRErrorCorrectLevel.M:
        return QRRSBlock.RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 1];
      case QRErrorCorrectLevel.Q:
        return QRRSBlock.RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 2];
      case QRErrorCorrectLevel.H:
        return QRRSBlock.RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 3];
      default:
        return undefined;
    }
  };
  function QRBitBuffer() {
    this.buffer = [];
    this.length = 0;
  }
  QRBitBuffer.prototype = {
    get: function get(index) {
      var bufIndex = Math.floor(index / 8);
      return (this.buffer[bufIndex] >>> 7 - index % 8 & 1) == 1;
    },
    put: function put(num, length) {
      for (var i = 0; i < length; i++) {
        this.putBit((num >>> length - i - 1 & 1) == 1);
      }
    },
    getLengthInBits: function getLengthInBits() {
      return this.length;
    },
    putBit: function putBit(bit) {
      var bufIndex = Math.floor(this.length / 8);
      if (this.buffer.length <= bufIndex) {
        this.buffer.push(0);
      }
      if (bit) {
        this.buffer[bufIndex] |= 0x80 >>> this.length % 8;
      }
      this.length++;
    }
  };
  var QRCodeLimitLength = [[17, 14, 11, 7], [32, 26, 20, 14], [53, 42, 32, 24], [78, 62, 46, 34], [106, 84, 60, 44], [134, 106, 74, 58], [154, 122, 86, 64], [192, 152, 108, 84], [230, 180, 130, 98], [271, 213, 151, 119], [321, 251, 177, 137], [367, 287, 203, 155], [425, 331, 241, 177], [458, 362, 258, 194], [520, 412, 292, 220], [586, 450, 322, 250], [644, 504, 364, 280], [718, 560, 394, 310], [792, 624, 442, 338], [858, 666, 482, 382], [929, 711, 509, 403], [1003, 779, 565, 439], [1091, 857, 611, 461], [1171, 911, 661, 511], [1273, 997, 715, 535], [1367, 1059, 751, 593], [1465, 1125, 805, 625], [1528, 1190, 868, 658], [1628, 1264, 908, 698], [1732, 1370, 982, 742], [1840, 1452, 1030, 790], [1952, 1538, 1112, 842], [2068, 1628, 1168, 898], [2188, 1722, 1228, 958], [2303, 1809, 1283, 983], [2431, 1911, 1351, 1051], [2563, 1989, 1423, 1093], [2699, 2099, 1499, 1139], [2809, 2213, 1579, 1219], [2953, 2331, 1663, 1273]];

  // QRCode object
  QRCode = function QRCode(canvasId, vOption) {
    this._htOption = {
      width: 256,
      height: 256,
      typeNumber: 4,
      colorDark: "#000000",
      colorLight: "#ffffff",
      correctLevel: QRErrorCorrectLevel.H
    };
    if (typeof vOption === 'string') {
      vOption = {
        text: vOption
      };
    }

    // Overwrites options
    if (vOption) {
      for (var i in vOption) {
        this._htOption[i] = vOption[i];
      }
    }
    this._oQRCode = null;
    this.canvasId = canvasId;
    if (this._htOption.text && this.canvasId) {
      this.makeCode(this._htOption.text);
    }
  };
  QRCode.prototype.makeCode = function (sText) {
    this._oQRCode = new QRCodeModel(_getTypeNumber(sText, this._htOption.correctLevel), this._htOption.correctLevel);
    this._oQRCode.addData(sText);
    this._oQRCode.make();
    this.makeImage();
  };
  QRCode.prototype.makeImage = function () {
    var _oContext;
    if (this._htOption.usingIn) {
      _oContext = wx.createCanvasContext(this.canvasId, this._htOption.usingIn);
    } else {
      _oContext = wx.createCanvasContext(this.canvasId);
    }
    var _htOption = this._htOption;
    var oQRCode = this._oQRCode;
    var nCount = oQRCode.getModuleCount();
    var nWidth = _htOption.width / nCount;
    var nHeight = _htOption.height / nCount;
    var nRoundedWidth = Math.round(nWidth);
    var nRoundedHeight = Math.round(nHeight);
    if (_htOption.image && _htOption.image != '') {
      _oContext.drawImage(_htOption.image, 0, 0, _htOption.width, _htOption.height);
    }
    for (var row = 0; row < nCount; row++) {
      for (var col = 0; col < nCount; col++) {
        var bIsDark = oQRCode.isDark(row, col);
        var nLeft = col * nWidth;
        var nTop = row * nHeight;
        _oContext.setStrokeStyle(bIsDark ? _htOption.colorDark : _htOption.colorLight);
        // _oContext.setStrokeStyle('yellow')
        _oContext.setLineWidth(1);
        _oContext.setFillStyle(bIsDark ? _htOption.colorDark : _htOption.colorLight);
        // _oContext.setFillStyle('red')
        // if (bIsDark) {
        _oContext.fillRect(nLeft, nTop, nWidth, nHeight);
        // }

        // 안티 앨리어싱 방지 처리
        // if (bIsDark) {
        _oContext.strokeRect(Math.floor(nLeft) + 0.5, Math.floor(nTop) + 0.5, nRoundedWidth, nRoundedHeight);
        _oContext.strokeRect(Math.ceil(nLeft) - 0.5, Math.ceil(nTop) - 0.5, nRoundedWidth, nRoundedHeight);
        // }
        // _oContext.fillRect(
        //     Math.floor(nLeft) + 0.5,
        //     Math.floor(nTop) + 0.5,
        //     nRoundedWidth,
        //     nRoundedHeight
        // );
        // _oContext.fillRect(
        //     Math.ceil(nLeft) - 0.5,
        //     Math.ceil(nTop) - 0.5,
        //     nRoundedWidth,
        //     nRoundedHeight
        // );
        // _oContext.clearRect(
        //     Math.floor(nLeft) + 0.5,
        //     Math.floor(nTop) + 0.5,
        //     nRoundedWidth,
        //     nRoundedHeight
        // );
        // _oContext.clearRect(
        //     Math.ceil(nLeft) - 0.5,
        //     Math.ceil(nTop) - 0.5,
        //     nRoundedWidth,
        //     nRoundedHeight
        // );
      }
    }

    _oContext.draw();
  };

  // 保存为图片，将临时路径传给回调
  QRCode.prototype.exportImage = function (callback) {
    if (!callback) {
      return;
    }
    wx.canvasToTempFilePath({
      x: 0,
      y: 0,
      width: this._htOption.width,
      height: this._htOption.height,
      destWidth: this._htOption.width,
      destHeight: this._htOption.height,
      canvasId: this.canvasId,
      success: function success(res) {
        console.log(res.tempFilePath);
        callback(res.tempFilePath);
      }
    });
  };
  QRCode.CorrectLevel = QRErrorCorrectLevel;
})();
module.exports = QRCode;
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/uni-mp-weixin/dist/wx.js */ 1)["default"]))

/***/ }),
/* 190 */,
/* 191 */,
/* 192 */,
/* 193 */,
/* 194 */,
/* 195 */,
/* 196 */,
/* 197 */
/*!****************************************************************************!*\
  !*** F:/project/qianduan/zhanhuitong_yudengji_git/static/json/region.json ***!
  \****************************************************************************/
/*! exports provided: 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, default */
/***/ (function(module) {

module.exports = JSON.parse("[{\"id\":110000,\"name\":\"北京市\",\"pid\":100000,\"level\":1,\"children\":[{\"id\":110100,\"name\":\"北京市\",\"pid\":110000,\"level\":2,\"children\":[{\"id\":110101,\"name\":\"东城区\",\"pid\":110100,\"level\":3},{\"id\":110102,\"name\":\"西城区\",\"pid\":110100,\"level\":3},{\"id\":110105,\"name\":\"朝阳区\",\"pid\":110100,\"level\":3},{\"id\":110106,\"name\":\"丰台区\",\"pid\":110100,\"level\":3},{\"id\":110107,\"name\":\"石景山区\",\"pid\":110100,\"level\":3},{\"id\":110108,\"name\":\"海淀区\",\"pid\":110100,\"level\":3},{\"id\":110109,\"name\":\"门头沟区\",\"pid\":110100,\"level\":3},{\"id\":110111,\"name\":\"房山区\",\"pid\":110100,\"level\":3},{\"id\":110112,\"name\":\"通州区\",\"pid\":110100,\"level\":3},{\"id\":110113,\"name\":\"顺义区\",\"pid\":110100,\"level\":3},{\"id\":110114,\"name\":\"昌平区\",\"pid\":110100,\"level\":3},{\"id\":110115,\"name\":\"大兴区\",\"pid\":110100,\"level\":3},{\"id\":110116,\"name\":\"怀柔区\",\"pid\":110100,\"level\":3},{\"id\":110117,\"name\":\"平谷区\",\"pid\":110100,\"level\":3},{\"id\":110228,\"name\":\"密云县\",\"pid\":110100,\"level\":3},{\"id\":110229,\"name\":\"延庆县\",\"pid\":110100,\"level\":3}]}]},{\"id\":120000,\"name\":\"天津市\",\"pid\":100000,\"level\":1,\"children\":[{\"id\":120100,\"name\":\"天津市\",\"pid\":120000,\"level\":2,\"children\":[{\"id\":120101,\"name\":\"和平区\",\"pid\":120100,\"level\":3},{\"id\":120102,\"name\":\"河东区\",\"pid\":120100,\"level\":3},{\"id\":120103,\"name\":\"河西区\",\"pid\":120100,\"level\":3},{\"id\":120104,\"name\":\"南开区\",\"pid\":120100,\"level\":3},{\"id\":120105,\"name\":\"河北区\",\"pid\":120100,\"level\":3},{\"id\":120106,\"name\":\"红桥区\",\"pid\":120100,\"level\":3},{\"id\":120110,\"name\":\"东丽区\",\"pid\":120100,\"level\":3},{\"id\":120111,\"name\":\"西青区\",\"pid\":120100,\"level\":3},{\"id\":120112,\"name\":\"津南区\",\"pid\":120100,\"level\":3},{\"id\":120113,\"name\":\"北辰区\",\"pid\":120100,\"level\":3},{\"id\":120114,\"name\":\"武清区\",\"pid\":120100,\"level\":3},{\"id\":120115,\"name\":\"宝坻区\",\"pid\":120100,\"level\":3},{\"id\":120116,\"name\":\"滨海新区\",\"pid\":120100,\"level\":3},{\"id\":120221,\"name\":\"宁河县\",\"pid\":120100,\"level\":3},{\"id\":120223,\"name\":\"静海县\",\"pid\":120100,\"level\":3},{\"id\":120225,\"name\":\"蓟县\",\"pid\":120100,\"level\":3}]}]},{\"id\":130000,\"name\":\"河北省\",\"pid\":100000,\"level\":1,\"children\":[{\"id\":130100,\"name\":\"石家庄市\",\"pid\":130000,\"level\":2,\"children\":[{\"id\":130102,\"name\":\"长安区\",\"pid\":130100,\"level\":3},{\"id\":130104,\"name\":\"桥西区\",\"pid\":130100,\"level\":3},{\"id\":130105,\"name\":\"新华区\",\"pid\":130100,\"level\":3},{\"id\":130107,\"name\":\"井陉矿区\",\"pid\":130100,\"level\":3},{\"id\":130108,\"name\":\"裕华区\",\"pid\":130100,\"level\":3},{\"id\":130109,\"name\":\"藁城区\",\"pid\":130100,\"level\":3},{\"id\":130110,\"name\":\"鹿泉区\",\"pid\":130100,\"level\":3},{\"id\":130111,\"name\":\"栾城区\",\"pid\":130100,\"level\":3},{\"id\":130121,\"name\":\"井陉县\",\"pid\":130100,\"level\":3},{\"id\":130123,\"name\":\"正定县\",\"pid\":130100,\"level\":3},{\"id\":130125,\"name\":\"行唐县\",\"pid\":130100,\"level\":3},{\"id\":130126,\"name\":\"灵寿县\",\"pid\":130100,\"level\":3},{\"id\":130127,\"name\":\"高邑县\",\"pid\":130100,\"level\":3},{\"id\":130128,\"name\":\"深泽县\",\"pid\":130100,\"level\":3},{\"id\":130129,\"name\":\"赞皇县\",\"pid\":130100,\"level\":3},{\"id\":130130,\"name\":\"无极县\",\"pid\":130100,\"level\":3},{\"id\":130131,\"name\":\"平山县\",\"pid\":130100,\"level\":3},{\"id\":130132,\"name\":\"元氏县\",\"pid\":130100,\"level\":3},{\"id\":130133,\"name\":\"赵县\",\"pid\":130100,\"level\":3},{\"id\":130181,\"name\":\"辛集市\",\"pid\":130100,\"level\":3},{\"id\":130183,\"name\":\"晋州市\",\"pid\":130100,\"level\":3},{\"id\":130184,\"name\":\"新乐市\",\"pid\":130100,\"level\":3}]},{\"id\":130200,\"name\":\"唐山市\",\"pid\":130000,\"level\":2,\"children\":[{\"id\":130202,\"name\":\"路南区\",\"pid\":130200,\"level\":3},{\"id\":130203,\"name\":\"路北区\",\"pid\":130200,\"level\":3},{\"id\":130204,\"name\":\"古冶区\",\"pid\":130200,\"level\":3},{\"id\":130205,\"name\":\"开平区\",\"pid\":130200,\"level\":3},{\"id\":130207,\"name\":\"丰南区\",\"pid\":130200,\"level\":3},{\"id\":130208,\"name\":\"丰润区\",\"pid\":130200,\"level\":3},{\"id\":130209,\"name\":\"曹妃甸区\",\"pid\":130200,\"level\":3},{\"id\":130223,\"name\":\"滦县\",\"pid\":130200,\"level\":3},{\"id\":130224,\"name\":\"滦南县\",\"pid\":130200,\"level\":3},{\"id\":130225,\"name\":\"乐亭县\",\"pid\":130200,\"level\":3},{\"id\":130227,\"name\":\"迁西县\",\"pid\":130200,\"level\":3},{\"id\":130229,\"name\":\"玉田县\",\"pid\":130200,\"level\":3},{\"id\":130281,\"name\":\"遵化市\",\"pid\":130200,\"level\":3},{\"id\":130283,\"name\":\"迁安市\",\"pid\":130200,\"level\":3}]},{\"id\":130300,\"name\":\"秦皇岛市\",\"pid\":130000,\"level\":2,\"children\":[{\"id\":130302,\"name\":\"海港区\",\"pid\":130300,\"level\":3},{\"id\":130303,\"name\":\"山海关区\",\"pid\":130300,\"level\":3},{\"id\":130304,\"name\":\"北戴河区\",\"pid\":130300,\"level\":3},{\"id\":130321,\"name\":\"青龙满族自治县\",\"pid\":130300,\"level\":3},{\"id\":130322,\"name\":\"昌黎县\",\"pid\":130300,\"level\":3},{\"id\":130323,\"name\":\"抚宁县\",\"pid\":130300,\"level\":3},{\"id\":130324,\"name\":\"卢龙县\",\"pid\":130300,\"level\":3}]},{\"id\":130400,\"name\":\"邯郸市\",\"pid\":130000,\"level\":2,\"children\":[{\"id\":130402,\"name\":\"邯山区\",\"pid\":130400,\"level\":3},{\"id\":130403,\"name\":\"丛台区\",\"pid\":130400,\"level\":3},{\"id\":130404,\"name\":\"复兴区\",\"pid\":130400,\"level\":3},{\"id\":130406,\"name\":\"峰峰矿区\",\"pid\":130400,\"level\":3},{\"id\":130421,\"name\":\"邯郸县\",\"pid\":130400,\"level\":3},{\"id\":130423,\"name\":\"临漳县\",\"pid\":130400,\"level\":3},{\"id\":130424,\"name\":\"成安县\",\"pid\":130400,\"level\":3},{\"id\":130425,\"name\":\"大名县\",\"pid\":130400,\"level\":3},{\"id\":130426,\"name\":\"涉县\",\"pid\":130400,\"level\":3},{\"id\":130427,\"name\":\"磁县\",\"pid\":130400,\"level\":3},{\"id\":130428,\"name\":\"肥乡县\",\"pid\":130400,\"level\":3},{\"id\":130429,\"name\":\"永年县\",\"pid\":130400,\"level\":3},{\"id\":130430,\"name\":\"邱县\",\"pid\":130400,\"level\":3},{\"id\":130431,\"name\":\"鸡泽县\",\"pid\":130400,\"level\":3},{\"id\":130432,\"name\":\"广平县\",\"pid\":130400,\"level\":3},{\"id\":130433,\"name\":\"馆陶县\",\"pid\":130400,\"level\":3},{\"id\":130434,\"name\":\"魏县\",\"pid\":130400,\"level\":3},{\"id\":130435,\"name\":\"曲周县\",\"pid\":130400,\"level\":3},{\"id\":130481,\"name\":\"武安市\",\"pid\":130400,\"level\":3}]},{\"id\":130500,\"name\":\"邢台市\",\"pid\":130000,\"level\":2,\"children\":[{\"id\":130502,\"name\":\"桥东区\",\"pid\":130500,\"level\":3},{\"id\":130503,\"name\":\"桥西区\",\"pid\":130500,\"level\":3},{\"id\":130521,\"name\":\"邢台县\",\"pid\":130500,\"level\":3},{\"id\":130522,\"name\":\"临城县\",\"pid\":130500,\"level\":3},{\"id\":130523,\"name\":\"内丘县\",\"pid\":130500,\"level\":3},{\"id\":130524,\"name\":\"柏乡县\",\"pid\":130500,\"level\":3},{\"id\":130525,\"name\":\"隆尧县\",\"pid\":130500,\"level\":3},{\"id\":130526,\"name\":\"任县\",\"pid\":130500,\"level\":3},{\"id\":130527,\"name\":\"南和县\",\"pid\":130500,\"level\":3},{\"id\":130528,\"name\":\"宁晋县\",\"pid\":130500,\"level\":3},{\"id\":130529,\"name\":\"巨鹿县\",\"pid\":130500,\"level\":3},{\"id\":130530,\"name\":\"新河县\",\"pid\":130500,\"level\":3},{\"id\":130531,\"name\":\"广宗县\",\"pid\":130500,\"level\":3},{\"id\":130532,\"name\":\"平乡县\",\"pid\":130500,\"level\":3},{\"id\":130533,\"name\":\"威县\",\"pid\":130500,\"level\":3},{\"id\":130534,\"name\":\"清河县\",\"pid\":130500,\"level\":3},{\"id\":130535,\"name\":\"临西县\",\"pid\":130500,\"level\":3},{\"id\":130581,\"name\":\"南宫市\",\"pid\":130500,\"level\":3},{\"id\":130582,\"name\":\"沙河市\",\"pid\":130500,\"level\":3}]},{\"id\":130600,\"name\":\"保定市\",\"pid\":130000,\"level\":2,\"children\":[{\"id\":130602,\"name\":\"新市区\",\"pid\":130600,\"level\":3},{\"id\":130603,\"name\":\"北市区\",\"pid\":130600,\"level\":3},{\"id\":130604,\"name\":\"南市区\",\"pid\":130600,\"level\":3},{\"id\":130621,\"name\":\"满城县\",\"pid\":130600,\"level\":3},{\"id\":130622,\"name\":\"清苑县\",\"pid\":130600,\"level\":3},{\"id\":130623,\"name\":\"涞水县\",\"pid\":130600,\"level\":3},{\"id\":130624,\"name\":\"阜平县\",\"pid\":130600,\"level\":3},{\"id\":130625,\"name\":\"徐水县\",\"pid\":130600,\"level\":3},{\"id\":130626,\"name\":\"定兴县\",\"pid\":130600,\"level\":3},{\"id\":130627,\"name\":\"唐县\",\"pid\":130600,\"level\":3},{\"id\":130628,\"name\":\"高阳县\",\"pid\":130600,\"level\":3},{\"id\":130629,\"name\":\"容城县\",\"pid\":130600,\"level\":3},{\"id\":130630,\"name\":\"涞源县\",\"pid\":130600,\"level\":3},{\"id\":130631,\"name\":\"望都县\",\"pid\":130600,\"level\":3},{\"id\":130632,\"name\":\"安新县\",\"pid\":130600,\"level\":3},{\"id\":130633,\"name\":\"易县\",\"pid\":130600,\"level\":3},{\"id\":130634,\"name\":\"曲阳县\",\"pid\":130600,\"level\":3},{\"id\":130635,\"name\":\"蠡县\",\"pid\":130600,\"level\":3},{\"id\":130636,\"name\":\"顺平县\",\"pid\":130600,\"level\":3},{\"id\":130637,\"name\":\"博野县\",\"pid\":130600,\"level\":3},{\"id\":130638,\"name\":\"雄县\",\"pid\":130600,\"level\":3},{\"id\":130681,\"name\":\"涿州市\",\"pid\":130600,\"level\":3},{\"id\":130682,\"name\":\"定州市\",\"pid\":130600,\"level\":3},{\"id\":130683,\"name\":\"安国市\",\"pid\":130600,\"level\":3},{\"id\":130684,\"name\":\"高碑店市\",\"pid\":130600,\"level\":3}]},{\"id\":130700,\"name\":\"张家口市\",\"pid\":130000,\"level\":2,\"children\":[{\"id\":130702,\"name\":\"桥东区\",\"pid\":130700,\"level\":3},{\"id\":130703,\"name\":\"桥西区\",\"pid\":130700,\"level\":3},{\"id\":130705,\"name\":\"宣化区\",\"pid\":130700,\"level\":3},{\"id\":130706,\"name\":\"下花园区\",\"pid\":130700,\"level\":3},{\"id\":130721,\"name\":\"宣化县\",\"pid\":130700,\"level\":3},{\"id\":130722,\"name\":\"张北县\",\"pid\":130700,\"level\":3},{\"id\":130723,\"name\":\"康保县\",\"pid\":130700,\"level\":3},{\"id\":130724,\"name\":\"沽源县\",\"pid\":130700,\"level\":3},{\"id\":130725,\"name\":\"尚义县\",\"pid\":130700,\"level\":3},{\"id\":130726,\"name\":\"蔚县\",\"pid\":130700,\"level\":3},{\"id\":130727,\"name\":\"阳原县\",\"pid\":130700,\"level\":3},{\"id\":130728,\"name\":\"怀安县\",\"pid\":130700,\"level\":3},{\"id\":130729,\"name\":\"万全县\",\"pid\":130700,\"level\":3},{\"id\":130730,\"name\":\"怀来县\",\"pid\":130700,\"level\":3},{\"id\":130731,\"name\":\"涿鹿县\",\"pid\":130700,\"level\":3},{\"id\":130732,\"name\":\"赤城县\",\"pid\":130700,\"level\":3},{\"id\":130733,\"name\":\"崇礼县\",\"pid\":130700,\"level\":3}]},{\"id\":130800,\"name\":\"承德市\",\"pid\":130000,\"level\":2,\"children\":[{\"id\":130802,\"name\":\"双桥区\",\"pid\":130800,\"level\":3},{\"id\":130803,\"name\":\"双滦区\",\"pid\":130800,\"level\":3},{\"id\":130804,\"name\":\"鹰手营子矿区\",\"pid\":130800,\"level\":3},{\"id\":130821,\"name\":\"承德县\",\"pid\":130800,\"level\":3},{\"id\":130822,\"name\":\"兴隆县\",\"pid\":130800,\"level\":3},{\"id\":130823,\"name\":\"平泉县\",\"pid\":130800,\"level\":3},{\"id\":130824,\"name\":\"滦平县\",\"pid\":130800,\"level\":3},{\"id\":130825,\"name\":\"隆化县\",\"pid\":130800,\"level\":3},{\"id\":130826,\"name\":\"丰宁满族自治县\",\"pid\":130800,\"level\":3},{\"id\":130827,\"name\":\"宽城满族自治县\",\"pid\":130800,\"level\":3},{\"id\":130828,\"name\":\"围场满族蒙古族自治县\",\"pid\":130800,\"level\":3}]},{\"id\":130900,\"name\":\"沧州市\",\"pid\":130000,\"level\":2,\"children\":[{\"id\":130902,\"name\":\"新华区\",\"pid\":130900,\"level\":3},{\"id\":130903,\"name\":\"运河区\",\"pid\":130900,\"level\":3},{\"id\":130921,\"name\":\"沧县\",\"pid\":130900,\"level\":3},{\"id\":130922,\"name\":\"青县\",\"pid\":130900,\"level\":3},{\"id\":130923,\"name\":\"东光县\",\"pid\":130900,\"level\":3},{\"id\":130924,\"name\":\"海兴县\",\"pid\":130900,\"level\":3},{\"id\":130925,\"name\":\"盐山县\",\"pid\":130900,\"level\":3},{\"id\":130926,\"name\":\"肃宁县\",\"pid\":130900,\"level\":3},{\"id\":130927,\"name\":\"南皮县\",\"pid\":130900,\"level\":3},{\"id\":130928,\"name\":\"吴桥县\",\"pid\":130900,\"level\":3},{\"id\":130929,\"name\":\"献县\",\"pid\":130900,\"level\":3},{\"id\":130930,\"name\":\"孟村回族自治县\",\"pid\":130900,\"level\":3},{\"id\":130981,\"name\":\"泊头市\",\"pid\":130900,\"level\":3},{\"id\":130982,\"name\":\"任丘市\",\"pid\":130900,\"level\":3},{\"id\":130983,\"name\":\"黄骅市\",\"pid\":130900,\"level\":3},{\"id\":130984,\"name\":\"河间市\",\"pid\":130900,\"level\":3}]},{\"id\":131000,\"name\":\"廊坊市\",\"pid\":130000,\"level\":2,\"children\":[{\"id\":131002,\"name\":\"安次区\",\"pid\":131000,\"level\":3},{\"id\":131003,\"name\":\"广阳区\",\"pid\":131000,\"level\":3},{\"id\":131022,\"name\":\"固安县\",\"pid\":131000,\"level\":3},{\"id\":131023,\"name\":\"永清县\",\"pid\":131000,\"level\":3},{\"id\":131024,\"name\":\"香河县\",\"pid\":131000,\"level\":3},{\"id\":131025,\"name\":\"大城县\",\"pid\":131000,\"level\":3},{\"id\":131026,\"name\":\"文安县\",\"pid\":131000,\"level\":3},{\"id\":131028,\"name\":\"大厂回族自治县\",\"pid\":131000,\"level\":3},{\"id\":131081,\"name\":\"霸州市\",\"pid\":131000,\"level\":3},{\"id\":131082,\"name\":\"三河市\",\"pid\":131000,\"level\":3}]},{\"id\":131100,\"name\":\"衡水市\",\"pid\":130000,\"level\":2,\"children\":[{\"id\":131102,\"name\":\"桃城区\",\"pid\":131100,\"level\":3},{\"id\":131121,\"name\":\"枣强县\",\"pid\":131100,\"level\":3},{\"id\":131122,\"name\":\"武邑县\",\"pid\":131100,\"level\":3},{\"id\":131123,\"name\":\"武强县\",\"pid\":131100,\"level\":3},{\"id\":131124,\"name\":\"饶阳县\",\"pid\":131100,\"level\":3},{\"id\":131125,\"name\":\"安平县\",\"pid\":131100,\"level\":3},{\"id\":131126,\"name\":\"故城县\",\"pid\":131100,\"level\":3},{\"id\":131127,\"name\":\"景县\",\"pid\":131100,\"level\":3},{\"id\":131128,\"name\":\"阜城县\",\"pid\":131100,\"level\":3},{\"id\":131181,\"name\":\"冀州市\",\"pid\":131100,\"level\":3},{\"id\":131182,\"name\":\"深州市\",\"pid\":131100,\"level\":3}]}]},{\"id\":140000,\"name\":\"山西省\",\"pid\":100000,\"level\":1,\"children\":[{\"id\":140100,\"name\":\"太原市\",\"pid\":140000,\"level\":2,\"children\":[{\"id\":140105,\"name\":\"小店区\",\"pid\":140100,\"level\":3},{\"id\":140106,\"name\":\"迎泽区\",\"pid\":140100,\"level\":3},{\"id\":140107,\"name\":\"杏花岭区\",\"pid\":140100,\"level\":3},{\"id\":140108,\"name\":\"尖草坪区\",\"pid\":140100,\"level\":3},{\"id\":140109,\"name\":\"万柏林区\",\"pid\":140100,\"level\":3},{\"id\":140110,\"name\":\"晋源区\",\"pid\":140100,\"level\":3},{\"id\":140121,\"name\":\"清徐县\",\"pid\":140100,\"level\":3},{\"id\":140122,\"name\":\"阳曲县\",\"pid\":140100,\"level\":3},{\"id\":140123,\"name\":\"娄烦县\",\"pid\":140100,\"level\":3},{\"id\":140181,\"name\":\"古交市\",\"pid\":140100,\"level\":3}]},{\"id\":140200,\"name\":\"大同市\",\"pid\":140000,\"level\":2,\"children\":[{\"id\":140202,\"name\":\"城区\",\"pid\":140200,\"level\":3},{\"id\":140203,\"name\":\"矿区\",\"pid\":140200,\"level\":3},{\"id\":140211,\"name\":\"南郊区\",\"pid\":140200,\"level\":3},{\"id\":140212,\"name\":\"新荣区\",\"pid\":140200,\"level\":3},{\"id\":140221,\"name\":\"阳高县\",\"pid\":140200,\"level\":3},{\"id\":140222,\"name\":\"天镇县\",\"pid\":140200,\"level\":3},{\"id\":140223,\"name\":\"广灵县\",\"pid\":140200,\"level\":3},{\"id\":140224,\"name\":\"灵丘县\",\"pid\":140200,\"level\":3},{\"id\":140225,\"name\":\"浑源县\",\"pid\":140200,\"level\":3},{\"id\":140226,\"name\":\"左云县\",\"pid\":140200,\"level\":3},{\"id\":140227,\"name\":\"大同县\",\"pid\":140200,\"level\":3}]},{\"id\":140300,\"name\":\"阳泉市\",\"pid\":140000,\"level\":2,\"children\":[{\"id\":140302,\"name\":\"城区\",\"pid\":140300,\"level\":3},{\"id\":140303,\"name\":\"矿区\",\"pid\":140300,\"level\":3},{\"id\":140311,\"name\":\"郊区\",\"pid\":140300,\"level\":3},{\"id\":140321,\"name\":\"平定县\",\"pid\":140300,\"level\":3},{\"id\":140322,\"name\":\"盂县\",\"pid\":140300,\"level\":3}]},{\"id\":140400,\"name\":\"长治市\",\"pid\":140000,\"level\":2,\"children\":[{\"id\":140402,\"name\":\"城区\",\"pid\":140400,\"level\":3},{\"id\":140411,\"name\":\"郊区\",\"pid\":140400,\"level\":3},{\"id\":140421,\"name\":\"长治县\",\"pid\":140400,\"level\":3},{\"id\":140423,\"name\":\"襄垣县\",\"pid\":140400,\"level\":3},{\"id\":140424,\"name\":\"屯留县\",\"pid\":140400,\"level\":3},{\"id\":140425,\"name\":\"平顺县\",\"pid\":140400,\"level\":3},{\"id\":140426,\"name\":\"黎城县\",\"pid\":140400,\"level\":3},{\"id\":140427,\"name\":\"壶关县\",\"pid\":140400,\"level\":3},{\"id\":140428,\"name\":\"长子县\",\"pid\":140400,\"level\":3},{\"id\":140429,\"name\":\"武乡县\",\"pid\":140400,\"level\":3},{\"id\":140430,\"name\":\"沁县\",\"pid\":140400,\"level\":3},{\"id\":140431,\"name\":\"沁源县\",\"pid\":140400,\"level\":3},{\"id\":140481,\"name\":\"潞城市\",\"pid\":140400,\"level\":3}]},{\"id\":140500,\"name\":\"晋城市\",\"pid\":140000,\"level\":2,\"children\":[{\"id\":140502,\"name\":\"城区\",\"pid\":140500,\"level\":3},{\"id\":140521,\"name\":\"沁水县\",\"pid\":140500,\"level\":3},{\"id\":140522,\"name\":\"阳城县\",\"pid\":140500,\"level\":3},{\"id\":140524,\"name\":\"陵川县\",\"pid\":140500,\"level\":3},{\"id\":140525,\"name\":\"泽州县\",\"pid\":140500,\"level\":3},{\"id\":140581,\"name\":\"高平市\",\"pid\":140500,\"level\":3}]},{\"id\":140600,\"name\":\"朔州市\",\"pid\":140000,\"level\":2,\"children\":[{\"id\":140602,\"name\":\"朔城区\",\"pid\":140600,\"level\":3},{\"id\":140603,\"name\":\"平鲁区\",\"pid\":140600,\"level\":3},{\"id\":140621,\"name\":\"山阴县\",\"pid\":140600,\"level\":3},{\"id\":140622,\"name\":\"应县\",\"pid\":140600,\"level\":3},{\"id\":140623,\"name\":\"右玉县\",\"pid\":140600,\"level\":3},{\"id\":140624,\"name\":\"怀仁县\",\"pid\":140600,\"level\":3}]},{\"id\":140700,\"name\":\"晋中市\",\"pid\":140000,\"level\":2,\"children\":[{\"id\":140702,\"name\":\"榆次区\",\"pid\":140700,\"level\":3},{\"id\":140721,\"name\":\"榆社县\",\"pid\":140700,\"level\":3},{\"id\":140722,\"name\":\"左权县\",\"pid\":140700,\"level\":3},{\"id\":140723,\"name\":\"和顺县\",\"pid\":140700,\"level\":3},{\"id\":140724,\"name\":\"昔阳县\",\"pid\":140700,\"level\":3},{\"id\":140725,\"name\":\"寿阳县\",\"pid\":140700,\"level\":3},{\"id\":140726,\"name\":\"太谷县\",\"pid\":140700,\"level\":3},{\"id\":140727,\"name\":\"祁县\",\"pid\":140700,\"level\":3},{\"id\":140728,\"name\":\"平遥县\",\"pid\":140700,\"level\":3},{\"id\":140729,\"name\":\"灵石县\",\"pid\":140700,\"level\":3},{\"id\":140781,\"name\":\"介休市\",\"pid\":140700,\"level\":3}]},{\"id\":140800,\"name\":\"运城市\",\"pid\":140000,\"level\":2,\"children\":[{\"id\":140802,\"name\":\"盐湖区\",\"pid\":140800,\"level\":3},{\"id\":140821,\"name\":\"临猗县\",\"pid\":140800,\"level\":3},{\"id\":140822,\"name\":\"万荣县\",\"pid\":140800,\"level\":3},{\"id\":140823,\"name\":\"闻喜县\",\"pid\":140800,\"level\":3},{\"id\":140824,\"name\":\"稷山县\",\"pid\":140800,\"level\":3},{\"id\":140825,\"name\":\"新绛县\",\"pid\":140800,\"level\":3},{\"id\":140826,\"name\":\"绛县\",\"pid\":140800,\"level\":3},{\"id\":140827,\"name\":\"垣曲县\",\"pid\":140800,\"level\":3},{\"id\":140828,\"name\":\"夏县\",\"pid\":140800,\"level\":3},{\"id\":140829,\"name\":\"平陆县\",\"pid\":140800,\"level\":3},{\"id\":140830,\"name\":\"芮城县\",\"pid\":140800,\"level\":3},{\"id\":140881,\"name\":\"永济市\",\"pid\":140800,\"level\":3},{\"id\":140882,\"name\":\"河津市\",\"pid\":140800,\"level\":3}]},{\"id\":140900,\"name\":\"忻州市\",\"pid\":140000,\"level\":2,\"children\":[{\"id\":140902,\"name\":\"忻府区\",\"pid\":140900,\"level\":3},{\"id\":140921,\"name\":\"定襄县\",\"pid\":140900,\"level\":3},{\"id\":140922,\"name\":\"五台县\",\"pid\":140900,\"level\":3},{\"id\":140923,\"name\":\"代县\",\"pid\":140900,\"level\":3},{\"id\":140924,\"name\":\"繁峙县\",\"pid\":140900,\"level\":3},{\"id\":140925,\"name\":\"宁武县\",\"pid\":140900,\"level\":3},{\"id\":140926,\"name\":\"静乐县\",\"pid\":140900,\"level\":3},{\"id\":140927,\"name\":\"神池县\",\"pid\":140900,\"level\":3},{\"id\":140928,\"name\":\"五寨县\",\"pid\":140900,\"level\":3},{\"id\":140929,\"name\":\"岢岚县\",\"pid\":140900,\"level\":3},{\"id\":140930,\"name\":\"河曲县\",\"pid\":140900,\"level\":3},{\"id\":140931,\"name\":\"保德县\",\"pid\":140900,\"level\":3},{\"id\":140932,\"name\":\"偏关县\",\"pid\":140900,\"level\":3},{\"id\":140981,\"name\":\"原平市\",\"pid\":140900,\"level\":3}]},{\"id\":141000,\"name\":\"临汾市\",\"pid\":140000,\"level\":2,\"children\":[{\"id\":141002,\"name\":\"尧都区\",\"pid\":141000,\"level\":3},{\"id\":141021,\"name\":\"曲沃县\",\"pid\":141000,\"level\":3},{\"id\":141022,\"name\":\"翼城县\",\"pid\":141000,\"level\":3},{\"id\":141023,\"name\":\"襄汾县\",\"pid\":141000,\"level\":3},{\"id\":141024,\"name\":\"洪洞县\",\"pid\":141000,\"level\":3},{\"id\":141025,\"name\":\"古县\",\"pid\":141000,\"level\":3},{\"id\":141026,\"name\":\"安泽县\",\"pid\":141000,\"level\":3},{\"id\":141027,\"name\":\"浮山县\",\"pid\":141000,\"level\":3},{\"id\":141028,\"name\":\"吉县\",\"pid\":141000,\"level\":3},{\"id\":141029,\"name\":\"乡宁县\",\"pid\":141000,\"level\":3},{\"id\":141030,\"name\":\"大宁县\",\"pid\":141000,\"level\":3},{\"id\":141031,\"name\":\"隰县\",\"pid\":141000,\"level\":3},{\"id\":141032,\"name\":\"永和县\",\"pid\":141000,\"level\":3},{\"id\":141033,\"name\":\"蒲县\",\"pid\":141000,\"level\":3},{\"id\":141034,\"name\":\"汾西县\",\"pid\":141000,\"level\":3},{\"id\":141081,\"name\":\"侯马市\",\"pid\":141000,\"level\":3},{\"id\":141082,\"name\":\"霍州市\",\"pid\":141000,\"level\":3}]},{\"id\":141100,\"name\":\"吕梁市\",\"pid\":140000,\"level\":2,\"children\":[{\"id\":141102,\"name\":\"离石区\",\"pid\":141100,\"level\":3},{\"id\":141121,\"name\":\"文水县\",\"pid\":141100,\"level\":3},{\"id\":141122,\"name\":\"交城县\",\"pid\":141100,\"level\":3},{\"id\":141123,\"name\":\"兴县\",\"pid\":141100,\"level\":3},{\"id\":141124,\"name\":\"临县\",\"pid\":141100,\"level\":3},{\"id\":141125,\"name\":\"柳林县\",\"pid\":141100,\"level\":3},{\"id\":141126,\"name\":\"石楼县\",\"pid\":141100,\"level\":3},{\"id\":141127,\"name\":\"岚县\",\"pid\":141100,\"level\":3},{\"id\":141128,\"name\":\"方山县\",\"pid\":141100,\"level\":3},{\"id\":141129,\"name\":\"中阳县\",\"pid\":141100,\"level\":3},{\"id\":141130,\"name\":\"交口县\",\"pid\":141100,\"level\":3},{\"id\":141181,\"name\":\"孝义市\",\"pid\":141100,\"level\":3},{\"id\":141182,\"name\":\"汾阳市\",\"pid\":141100,\"level\":3}]}]},{\"id\":150000,\"name\":\"内蒙古自治区\",\"pid\":100000,\"level\":1,\"children\":[{\"id\":150100,\"name\":\"呼和浩特市\",\"pid\":150000,\"level\":2,\"children\":[{\"id\":150102,\"name\":\"新城区\",\"pid\":150100,\"level\":3},{\"id\":150103,\"name\":\"回民区\",\"pid\":150100,\"level\":3},{\"id\":150104,\"name\":\"玉泉区\",\"pid\":150100,\"level\":3},{\"id\":150105,\"name\":\"赛罕区\",\"pid\":150100,\"level\":3},{\"id\":150121,\"name\":\"土默特左旗\",\"pid\":150100,\"level\":3},{\"id\":150122,\"name\":\"托克托县\",\"pid\":150100,\"level\":3},{\"id\":150123,\"name\":\"和林格尔县\",\"pid\":150100,\"level\":3},{\"id\":150124,\"name\":\"清水河县\",\"pid\":150100,\"level\":3},{\"id\":150125,\"name\":\"武川县\",\"pid\":150100,\"level\":3}]},{\"id\":150200,\"name\":\"包头市\",\"pid\":150000,\"level\":2,\"children\":[{\"id\":150202,\"name\":\"东河区\",\"pid\":150200,\"level\":3},{\"id\":150203,\"name\":\"昆都仑区\",\"pid\":150200,\"level\":3},{\"id\":150204,\"name\":\"青山区\",\"pid\":150200,\"level\":3},{\"id\":150205,\"name\":\"石拐区\",\"pid\":150200,\"level\":3},{\"id\":150206,\"name\":\"白云鄂博矿区\",\"pid\":150200,\"level\":3},{\"id\":150207,\"name\":\"九原区\",\"pid\":150200,\"level\":3},{\"id\":150221,\"name\":\"土默特右旗\",\"pid\":150200,\"level\":3},{\"id\":150222,\"name\":\"固阳县\",\"pid\":150200,\"level\":3},{\"id\":150223,\"name\":\"达尔罕茂明安联合旗\",\"pid\":150200,\"level\":3}]},{\"id\":150300,\"name\":\"乌海市\",\"pid\":150000,\"level\":2,\"children\":[{\"id\":150302,\"name\":\"海勃湾区\",\"pid\":150300,\"level\":3},{\"id\":150303,\"name\":\"海南区\",\"pid\":150300,\"level\":3},{\"id\":150304,\"name\":\"乌达区\",\"pid\":150300,\"level\":3}]},{\"id\":150400,\"name\":\"赤峰市\",\"pid\":150000,\"level\":2,\"children\":[{\"id\":150402,\"name\":\"红山区\",\"pid\":150400,\"level\":3},{\"id\":150403,\"name\":\"元宝山区\",\"pid\":150400,\"level\":3},{\"id\":150404,\"name\":\"松山区\",\"pid\":150400,\"level\":3},{\"id\":150421,\"name\":\"阿鲁科尔沁旗\",\"pid\":150400,\"level\":3},{\"id\":150422,\"name\":\"巴林左旗\",\"pid\":150400,\"level\":3},{\"id\":150423,\"name\":\"巴林右旗\",\"pid\":150400,\"level\":3},{\"id\":150424,\"name\":\"林西县\",\"pid\":150400,\"level\":3},{\"id\":150425,\"name\":\"克什克腾旗\",\"pid\":150400,\"level\":3},{\"id\":150426,\"name\":\"翁牛特旗\",\"pid\":150400,\"level\":3},{\"id\":150428,\"name\":\"喀喇沁旗\",\"pid\":150400,\"level\":3},{\"id\":150429,\"name\":\"宁城县\",\"pid\":150400,\"level\":3},{\"id\":150430,\"name\":\"敖汉旗\",\"pid\":150400,\"level\":3}]},{\"id\":150500,\"name\":\"通辽市\",\"pid\":150000,\"level\":2,\"children\":[{\"id\":150502,\"name\":\"科尔沁区\",\"pid\":150500,\"level\":3},{\"id\":150521,\"name\":\"科尔沁左翼中旗\",\"pid\":150500,\"level\":3},{\"id\":150522,\"name\":\"科尔沁左翼后旗\",\"pid\":150500,\"level\":3},{\"id\":150523,\"name\":\"开鲁县\",\"pid\":150500,\"level\":3},{\"id\":150524,\"name\":\"库伦旗\",\"pid\":150500,\"level\":3},{\"id\":150525,\"name\":\"奈曼旗\",\"pid\":150500,\"level\":3},{\"id\":150526,\"name\":\"扎鲁特旗\",\"pid\":150500,\"level\":3},{\"id\":150581,\"name\":\"霍林郭勒市\",\"pid\":150500,\"level\":3}]},{\"id\":150600,\"name\":\"鄂尔多斯市\",\"pid\":150000,\"level\":2,\"children\":[{\"id\":150602,\"name\":\"东胜区\",\"pid\":150600,\"level\":3},{\"id\":150621,\"name\":\"达拉特旗\",\"pid\":150600,\"level\":3},{\"id\":150622,\"name\":\"准格尔旗\",\"pid\":150600,\"level\":3},{\"id\":150623,\"name\":\"鄂托克前旗\",\"pid\":150600,\"level\":3},{\"id\":150624,\"name\":\"鄂托克旗\",\"pid\":150600,\"level\":3},{\"id\":150625,\"name\":\"杭锦旗\",\"pid\":150600,\"level\":3},{\"id\":150626,\"name\":\"乌审旗\",\"pid\":150600,\"level\":3},{\"id\":150627,\"name\":\"伊金霍洛旗\",\"pid\":150600,\"level\":3}]},{\"id\":150700,\"name\":\"呼伦贝尔市\",\"pid\":150000,\"level\":2,\"children\":[{\"id\":150702,\"name\":\"海拉尔区\",\"pid\":150700,\"level\":3},{\"id\":150703,\"name\":\"扎赉诺尔区\",\"pid\":150700,\"level\":3},{\"id\":150721,\"name\":\"阿荣旗\",\"pid\":150700,\"level\":3},{\"id\":150722,\"name\":\"莫力达瓦达斡尔族自治旗\",\"pid\":150700,\"level\":3},{\"id\":150723,\"name\":\"鄂伦春自治旗\",\"pid\":150700,\"level\":3},{\"id\":150724,\"name\":\"鄂温克族自治旗\",\"pid\":150700,\"level\":3},{\"id\":150725,\"name\":\"陈巴尔虎旗\",\"pid\":150700,\"level\":3},{\"id\":150726,\"name\":\"新巴尔虎左旗\",\"pid\":150700,\"level\":3},{\"id\":150727,\"name\":\"新巴尔虎右旗\",\"pid\":150700,\"level\":3},{\"id\":150781,\"name\":\"满洲里市\",\"pid\":150700,\"level\":3},{\"id\":150782,\"name\":\"牙克石市\",\"pid\":150700,\"level\":3},{\"id\":150783,\"name\":\"扎兰屯市\",\"pid\":150700,\"level\":3},{\"id\":150784,\"name\":\"额尔古纳市\",\"pid\":150700,\"level\":3},{\"id\":150785,\"name\":\"根河市\",\"pid\":150700,\"level\":3}]},{\"id\":150800,\"name\":\"巴彦淖尔市\",\"pid\":150000,\"level\":2,\"children\":[{\"id\":150802,\"name\":\"临河区\",\"pid\":150800,\"level\":3},{\"id\":150821,\"name\":\"五原县\",\"pid\":150800,\"level\":3},{\"id\":150822,\"name\":\"磴口县\",\"pid\":150800,\"level\":3},{\"id\":150823,\"name\":\"乌拉特前旗\",\"pid\":150800,\"level\":3},{\"id\":150824,\"name\":\"乌拉特中旗\",\"pid\":150800,\"level\":3},{\"id\":150825,\"name\":\"乌拉特后旗\",\"pid\":150800,\"level\":3},{\"id\":150826,\"name\":\"杭锦后旗\",\"pid\":150800,\"level\":3}]},{\"id\":150900,\"name\":\"乌兰察布市\",\"pid\":150000,\"level\":2,\"children\":[{\"id\":150902,\"name\":\"集宁区\",\"pid\":150900,\"level\":3},{\"id\":150921,\"name\":\"卓资县\",\"pid\":150900,\"level\":3},{\"id\":150922,\"name\":\"化德县\",\"pid\":150900,\"level\":3},{\"id\":150923,\"name\":\"商都县\",\"pid\":150900,\"level\":3},{\"id\":150924,\"name\":\"兴和县\",\"pid\":150900,\"level\":3},{\"id\":150925,\"name\":\"凉城县\",\"pid\":150900,\"level\":3},{\"id\":150926,\"name\":\"察哈尔右翼前旗\",\"pid\":150900,\"level\":3},{\"id\":150927,\"name\":\"察哈尔右翼中旗\",\"pid\":150900,\"level\":3},{\"id\":150928,\"name\":\"察哈尔右翼后旗\",\"pid\":150900,\"level\":3},{\"id\":150929,\"name\":\"四子王旗\",\"pid\":150900,\"level\":3},{\"id\":150981,\"name\":\"丰镇市\",\"pid\":150900,\"level\":3}]},{\"id\":152200,\"name\":\"兴安盟\",\"pid\":150000,\"level\":2,\"children\":[{\"id\":152201,\"name\":\"乌兰浩特市\",\"pid\":152200,\"level\":3},{\"id\":152202,\"name\":\"阿尔山市\",\"pid\":152200,\"level\":3},{\"id\":152221,\"name\":\"科尔沁右翼前旗\",\"pid\":152200,\"level\":3},{\"id\":152222,\"name\":\"科尔沁右翼中旗\",\"pid\":152200,\"level\":3},{\"id\":152223,\"name\":\"扎赉特旗\",\"pid\":152200,\"level\":3},{\"id\":152224,\"name\":\"突泉县\",\"pid\":152200,\"level\":3}]},{\"id\":152500,\"name\":\"锡林郭勒盟\",\"pid\":150000,\"level\":2,\"children\":[{\"id\":152501,\"name\":\"二连浩特市\",\"pid\":152500,\"level\":3},{\"id\":152502,\"name\":\"锡林浩特市\",\"pid\":152500,\"level\":3},{\"id\":152522,\"name\":\"阿巴嘎旗\",\"pid\":152500,\"level\":3},{\"id\":152523,\"name\":\"苏尼特左旗\",\"pid\":152500,\"level\":3},{\"id\":152524,\"name\":\"苏尼特右旗\",\"pid\":152500,\"level\":3},{\"id\":152525,\"name\":\"东乌珠穆沁旗\",\"pid\":152500,\"level\":3},{\"id\":152526,\"name\":\"西乌珠穆沁旗\",\"pid\":152500,\"level\":3},{\"id\":152527,\"name\":\"太仆寺旗\",\"pid\":152500,\"level\":3},{\"id\":152528,\"name\":\"镶黄旗\",\"pid\":152500,\"level\":3},{\"id\":152529,\"name\":\"正镶白旗\",\"pid\":152500,\"level\":3},{\"id\":152530,\"name\":\"正蓝旗\",\"pid\":152500,\"level\":3},{\"id\":152531,\"name\":\"多伦县\",\"pid\":152500,\"level\":3}]},{\"id\":152900,\"name\":\"阿拉善盟\",\"pid\":150000,\"level\":2,\"children\":[{\"id\":152921,\"name\":\"阿拉善左旗\",\"pid\":152900,\"level\":3},{\"id\":152922,\"name\":\"阿拉善右旗\",\"pid\":152900,\"level\":3},{\"id\":152923,\"name\":\"额济纳旗\",\"pid\":152900,\"level\":3}]}]},{\"id\":210000,\"name\":\"辽宁省\",\"pid\":100000,\"level\":1,\"children\":[{\"id\":210100,\"name\":\"沈阳市\",\"pid\":210000,\"level\":2,\"children\":[{\"id\":210102,\"name\":\"和平区\",\"pid\":210100,\"level\":3},{\"id\":210103,\"name\":\"沈河区\",\"pid\":210100,\"level\":3},{\"id\":210104,\"name\":\"大东区\",\"pid\":210100,\"level\":3},{\"id\":210105,\"name\":\"皇姑区\",\"pid\":210100,\"level\":3},{\"id\":210106,\"name\":\"铁西区\",\"pid\":210100,\"level\":3},{\"id\":210111,\"name\":\"苏家屯区\",\"pid\":210100,\"level\":3},{\"id\":210112,\"name\":\"浑南区\",\"pid\":210100,\"level\":3},{\"id\":210113,\"name\":\"沈北新区\",\"pid\":210100,\"level\":3},{\"id\":210114,\"name\":\"于洪区\",\"pid\":210100,\"level\":3},{\"id\":210122,\"name\":\"辽中县\",\"pid\":210100,\"level\":3},{\"id\":210123,\"name\":\"康平县\",\"pid\":210100,\"level\":3},{\"id\":210124,\"name\":\"法库县\",\"pid\":210100,\"level\":3},{\"id\":210181,\"name\":\"新民市\",\"pid\":210100,\"level\":3}]},{\"id\":210200,\"name\":\"大连市\",\"pid\":210000,\"level\":2,\"children\":[{\"id\":210202,\"name\":\"中山区\",\"pid\":210200,\"level\":3},{\"id\":210203,\"name\":\"西岗区\",\"pid\":210200,\"level\":3},{\"id\":210204,\"name\":\"沙河口区\",\"pid\":210200,\"level\":3},{\"id\":210211,\"name\":\"甘井子区\",\"pid\":210200,\"level\":3},{\"id\":210212,\"name\":\"旅顺口区\",\"pid\":210200,\"level\":3},{\"id\":210213,\"name\":\"金州区\",\"pid\":210200,\"level\":3},{\"id\":210224,\"name\":\"长海县\",\"pid\":210200,\"level\":3},{\"id\":210281,\"name\":\"瓦房店市\",\"pid\":210200,\"level\":3},{\"id\":210282,\"name\":\"普兰店市\",\"pid\":210200,\"level\":3},{\"id\":210283,\"name\":\"庄河市\",\"pid\":210200,\"level\":3}]},{\"id\":210300,\"name\":\"鞍山市\",\"pid\":210000,\"level\":2,\"children\":[{\"id\":210302,\"name\":\"铁东区\",\"pid\":210300,\"level\":3},{\"id\":210303,\"name\":\"铁西区\",\"pid\":210300,\"level\":3},{\"id\":210304,\"name\":\"立山区\",\"pid\":210300,\"level\":3},{\"id\":210311,\"name\":\"千山区\",\"pid\":210300,\"level\":3},{\"id\":210321,\"name\":\"台安县\",\"pid\":210300,\"level\":3},{\"id\":210323,\"name\":\"岫岩满族自治县\",\"pid\":210300,\"level\":3},{\"id\":210381,\"name\":\"海城市\",\"pid\":210300,\"level\":3}]},{\"id\":210400,\"name\":\"抚顺市\",\"pid\":210000,\"level\":2,\"children\":[{\"id\":210402,\"name\":\"新抚区\",\"pid\":210400,\"level\":3},{\"id\":210403,\"name\":\"东洲区\",\"pid\":210400,\"level\":3},{\"id\":210404,\"name\":\"望花区\",\"pid\":210400,\"level\":3},{\"id\":210411,\"name\":\"顺城区\",\"pid\":210400,\"level\":3},{\"id\":210421,\"name\":\"抚顺县\",\"pid\":210400,\"level\":3},{\"id\":210422,\"name\":\"新宾满族自治县\",\"pid\":210400,\"level\":3},{\"id\":210423,\"name\":\"清原满族自治县\",\"pid\":210400,\"level\":3}]},{\"id\":210500,\"name\":\"本溪市\",\"pid\":210000,\"level\":2,\"children\":[{\"id\":210502,\"name\":\"平山区\",\"pid\":210500,\"level\":3},{\"id\":210503,\"name\":\"溪湖区\",\"pid\":210500,\"level\":3},{\"id\":210504,\"name\":\"明山区\",\"pid\":210500,\"level\":3},{\"id\":210505,\"name\":\"南芬区\",\"pid\":210500,\"level\":3},{\"id\":210521,\"name\":\"本溪满族自治县\",\"pid\":210500,\"level\":3},{\"id\":210522,\"name\":\"桓仁满族自治县\",\"pid\":210500,\"level\":3}]},{\"id\":210600,\"name\":\"丹东市\",\"pid\":210000,\"level\":2,\"children\":[{\"id\":210602,\"name\":\"元宝区\",\"pid\":210600,\"level\":3},{\"id\":210603,\"name\":\"振兴区\",\"pid\":210600,\"level\":3},{\"id\":210604,\"name\":\"振安区\",\"pid\":210600,\"level\":3},{\"id\":210624,\"name\":\"宽甸满族自治县\",\"pid\":210600,\"level\":3},{\"id\":210681,\"name\":\"东港市\",\"pid\":210600,\"level\":3},{\"id\":210682,\"name\":\"凤城市\",\"pid\":210600,\"level\":3}]},{\"id\":210700,\"name\":\"锦州市\",\"pid\":210000,\"level\":2,\"children\":[{\"id\":210702,\"name\":\"古塔区\",\"pid\":210700,\"level\":3},{\"id\":210703,\"name\":\"凌河区\",\"pid\":210700,\"level\":3},{\"id\":210711,\"name\":\"太和区\",\"pid\":210700,\"level\":3},{\"id\":210726,\"name\":\"黑山县\",\"pid\":210700,\"level\":3},{\"id\":210727,\"name\":\"义县\",\"pid\":210700,\"level\":3},{\"id\":210781,\"name\":\"凌海市\",\"pid\":210700,\"level\":3},{\"id\":210782,\"name\":\"北镇市\",\"pid\":210700,\"level\":3}]},{\"id\":210800,\"name\":\"营口市\",\"pid\":210000,\"level\":2,\"children\":[{\"id\":210802,\"name\":\"站前区\",\"pid\":210800,\"level\":3},{\"id\":210803,\"name\":\"西市区\",\"pid\":210800,\"level\":3},{\"id\":210804,\"name\":\"鲅鱼圈区\",\"pid\":210800,\"level\":3},{\"id\":210811,\"name\":\"老边区\",\"pid\":210800,\"level\":3},{\"id\":210881,\"name\":\"盖州市\",\"pid\":210800,\"level\":3},{\"id\":210882,\"name\":\"大石桥市\",\"pid\":210800,\"level\":3}]},{\"id\":210900,\"name\":\"阜新市\",\"pid\":210000,\"level\":2,\"children\":[{\"id\":210902,\"name\":\"海州区\",\"pid\":210900,\"level\":3},{\"id\":210903,\"name\":\"新邱区\",\"pid\":210900,\"level\":3},{\"id\":210904,\"name\":\"太平区\",\"pid\":210900,\"level\":3},{\"id\":210905,\"name\":\"清河门区\",\"pid\":210900,\"level\":3},{\"id\":210911,\"name\":\"细河区\",\"pid\":210900,\"level\":3},{\"id\":210921,\"name\":\"阜新蒙古族自治县\",\"pid\":210900,\"level\":3},{\"id\":210922,\"name\":\"彰武县\",\"pid\":210900,\"level\":3}]},{\"id\":211000,\"name\":\"辽阳市\",\"pid\":210000,\"level\":2,\"children\":[{\"id\":211002,\"name\":\"白塔区\",\"pid\":211000,\"level\":3},{\"id\":211003,\"name\":\"文圣区\",\"pid\":211000,\"level\":3},{\"id\":211004,\"name\":\"宏伟区\",\"pid\":211000,\"level\":3},{\"id\":211005,\"name\":\"弓长岭区\",\"pid\":211000,\"level\":3},{\"id\":211011,\"name\":\"太子河区\",\"pid\":211000,\"level\":3},{\"id\":211021,\"name\":\"辽阳县\",\"pid\":211000,\"level\":3},{\"id\":211081,\"name\":\"灯塔市\",\"pid\":211000,\"level\":3}]},{\"id\":211100,\"name\":\"盘锦市\",\"pid\":210000,\"level\":2,\"children\":[{\"id\":211102,\"name\":\"双台子区\",\"pid\":211100,\"level\":3},{\"id\":211103,\"name\":\"兴隆台区\",\"pid\":211100,\"level\":3},{\"id\":211121,\"name\":\"大洼县\",\"pid\":211100,\"level\":3},{\"id\":211122,\"name\":\"盘山县\",\"pid\":211100,\"level\":3}]},{\"id\":211200,\"name\":\"铁岭市\",\"pid\":210000,\"level\":2,\"children\":[{\"id\":211202,\"name\":\"银州区\",\"pid\":211200,\"level\":3},{\"id\":211204,\"name\":\"清河区\",\"pid\":211200,\"level\":3},{\"id\":211221,\"name\":\"铁岭县\",\"pid\":211200,\"level\":3},{\"id\":211223,\"name\":\"西丰县\",\"pid\":211200,\"level\":3},{\"id\":211224,\"name\":\"昌图县\",\"pid\":211200,\"level\":3},{\"id\":211281,\"name\":\"调兵山市\",\"pid\":211200,\"level\":3},{\"id\":211282,\"name\":\"开原市\",\"pid\":211200,\"level\":3}]},{\"id\":211300,\"name\":\"朝阳市\",\"pid\":210000,\"level\":2,\"children\":[{\"id\":211302,\"name\":\"双塔区\",\"pid\":211300,\"level\":3},{\"id\":211303,\"name\":\"龙城区\",\"pid\":211300,\"level\":3},{\"id\":211321,\"name\":\"朝阳县\",\"pid\":211300,\"level\":3},{\"id\":211322,\"name\":\"建平县\",\"pid\":211300,\"level\":3},{\"id\":211324,\"name\":\"喀喇沁左翼蒙古族自治县\",\"pid\":211300,\"level\":3},{\"id\":211381,\"name\":\"北票市\",\"pid\":211300,\"level\":3},{\"id\":211382,\"name\":\"凌源市\",\"pid\":211300,\"level\":3}]},{\"id\":211400,\"name\":\"葫芦岛市\",\"pid\":210000,\"level\":2,\"children\":[{\"id\":211402,\"name\":\"连山区\",\"pid\":211400,\"level\":3},{\"id\":211403,\"name\":\"龙港区\",\"pid\":211400,\"level\":3},{\"id\":211404,\"name\":\"南票区\",\"pid\":211400,\"level\":3},{\"id\":211421,\"name\":\"绥中县\",\"pid\":211400,\"level\":3},{\"id\":211422,\"name\":\"建昌县\",\"pid\":211400,\"level\":3},{\"id\":211481,\"name\":\"兴城市\",\"pid\":211400,\"level\":3}]},{\"id\":211500,\"name\":\"金普新区\",\"pid\":210000,\"level\":2,\"children\":[{\"id\":211501,\"name\":\"金州新区\",\"pid\":211500,\"level\":3},{\"id\":211502,\"name\":\"普湾新区\",\"pid\":211500,\"level\":3},{\"id\":211503,\"name\":\"保税区\",\"pid\":211500,\"level\":3}]}]},{\"id\":220000,\"name\":\"吉林省\",\"pid\":100000,\"level\":1,\"children\":[{\"id\":220100,\"name\":\"长春市\",\"pid\":220000,\"level\":2,\"children\":[{\"id\":220102,\"name\":\"南关区\",\"pid\":220100,\"level\":3},{\"id\":220103,\"name\":\"宽城区\",\"pid\":220100,\"level\":3},{\"id\":220104,\"name\":\"朝阳区\",\"pid\":220100,\"level\":3},{\"id\":220105,\"name\":\"二道区\",\"pid\":220100,\"level\":3},{\"id\":220106,\"name\":\"绿园区\",\"pid\":220100,\"level\":3},{\"id\":220112,\"name\":\"双阳区\",\"pid\":220100,\"level\":3},{\"id\":220113,\"name\":\"九台区\",\"pid\":220100,\"level\":3},{\"id\":220122,\"name\":\"农安县\",\"pid\":220100,\"level\":3},{\"id\":220182,\"name\":\"榆树市\",\"pid\":220100,\"level\":3},{\"id\":220183,\"name\":\"德惠市\",\"pid\":220100,\"level\":3}]},{\"id\":220200,\"name\":\"吉林市\",\"pid\":220000,\"level\":2,\"children\":[{\"id\":220202,\"name\":\"昌邑区\",\"pid\":220200,\"level\":3},{\"id\":220203,\"name\":\"龙潭区\",\"pid\":220200,\"level\":3},{\"id\":220204,\"name\":\"船营区\",\"pid\":220200,\"level\":3},{\"id\":220211,\"name\":\"丰满区\",\"pid\":220200,\"level\":3},{\"id\":220221,\"name\":\"永吉县\",\"pid\":220200,\"level\":3},{\"id\":220281,\"name\":\"蛟河市\",\"pid\":220200,\"level\":3},{\"id\":220282,\"name\":\"桦甸市\",\"pid\":220200,\"level\":3},{\"id\":220283,\"name\":\"舒兰市\",\"pid\":220200,\"level\":3},{\"id\":220284,\"name\":\"磐石市\",\"pid\":220200,\"level\":3}]},{\"id\":220300,\"name\":\"四平市\",\"pid\":220000,\"level\":2,\"children\":[{\"id\":220302,\"name\":\"铁西区\",\"pid\":220300,\"level\":3},{\"id\":220303,\"name\":\"铁东区\",\"pid\":220300,\"level\":3},{\"id\":220322,\"name\":\"梨树县\",\"pid\":220300,\"level\":3},{\"id\":220323,\"name\":\"伊通满族自治县\",\"pid\":220300,\"level\":3},{\"id\":220381,\"name\":\"公主岭市\",\"pid\":220300,\"level\":3},{\"id\":220382,\"name\":\"双辽市\",\"pid\":220300,\"level\":3}]},{\"id\":220400,\"name\":\"辽源市\",\"pid\":220000,\"level\":2,\"children\":[{\"id\":220402,\"name\":\"龙山区\",\"pid\":220400,\"level\":3},{\"id\":220403,\"name\":\"西安区\",\"pid\":220400,\"level\":3},{\"id\":220421,\"name\":\"东丰县\",\"pid\":220400,\"level\":3},{\"id\":220422,\"name\":\"东辽县\",\"pid\":220400,\"level\":3}]},{\"id\":220500,\"name\":\"通化市\",\"pid\":220000,\"level\":2,\"children\":[{\"id\":220502,\"name\":\"东昌区\",\"pid\":220500,\"level\":3},{\"id\":220503,\"name\":\"二道江区\",\"pid\":220500,\"level\":3},{\"id\":220521,\"name\":\"通化县\",\"pid\":220500,\"level\":3},{\"id\":220523,\"name\":\"辉南县\",\"pid\":220500,\"level\":3},{\"id\":220524,\"name\":\"柳河县\",\"pid\":220500,\"level\":3},{\"id\":220581,\"name\":\"梅河口市\",\"pid\":220500,\"level\":3},{\"id\":220582,\"name\":\"集安市\",\"pid\":220500,\"level\":3}]},{\"id\":220600,\"name\":\"白山市\",\"pid\":220000,\"level\":2,\"children\":[{\"id\":220602,\"name\":\"浑江区\",\"pid\":220600,\"level\":3},{\"id\":220605,\"name\":\"江源区\",\"pid\":220600,\"level\":3},{\"id\":220621,\"name\":\"抚松县\",\"pid\":220600,\"level\":3},{\"id\":220622,\"name\":\"靖宇县\",\"pid\":220600,\"level\":3},{\"id\":220623,\"name\":\"长白朝鲜族自治县\",\"pid\":220600,\"level\":3},{\"id\":220681,\"name\":\"临江市\",\"pid\":220600,\"level\":3}]},{\"id\":220700,\"name\":\"松原市\",\"pid\":220000,\"level\":2,\"children\":[{\"id\":220702,\"name\":\"宁江区\",\"pid\":220700,\"level\":3},{\"id\":220721,\"name\":\"前郭尔罗斯蒙古族自治县\",\"pid\":220700,\"level\":3},{\"id\":220722,\"name\":\"长岭县\",\"pid\":220700,\"level\":3},{\"id\":220723,\"name\":\"乾安县\",\"pid\":220700,\"level\":3},{\"id\":220781,\"name\":\"扶余市\",\"pid\":220700,\"level\":3}]},{\"id\":220800,\"name\":\"白城市\",\"pid\":220000,\"level\":2,\"children\":[{\"id\":220802,\"name\":\"洮北区\",\"pid\":220800,\"level\":3},{\"id\":220821,\"name\":\"镇赉县\",\"pid\":220800,\"level\":3},{\"id\":220822,\"name\":\"通榆县\",\"pid\":220800,\"level\":3},{\"id\":220881,\"name\":\"洮南市\",\"pid\":220800,\"level\":3},{\"id\":220882,\"name\":\"大安市\",\"pid\":220800,\"level\":3}]},{\"id\":222400,\"name\":\"延边朝鲜族自治州\",\"pid\":220000,\"level\":2,\"children\":[{\"id\":222401,\"name\":\"延吉市\",\"pid\":222400,\"level\":3},{\"id\":222402,\"name\":\"图们市\",\"pid\":222400,\"level\":3},{\"id\":222403,\"name\":\"敦化市\",\"pid\":222400,\"level\":3},{\"id\":222404,\"name\":\"珲春市\",\"pid\":222400,\"level\":3},{\"id\":222405,\"name\":\"龙井市\",\"pid\":222400,\"level\":3},{\"id\":222406,\"name\":\"和龙市\",\"pid\":222400,\"level\":3},{\"id\":222424,\"name\":\"汪清县\",\"pid\":222400,\"level\":3},{\"id\":222426,\"name\":\"安图县\",\"pid\":222400,\"level\":3}]}]},{\"id\":230000,\"name\":\"黑龙江省\",\"pid\":100000,\"level\":1,\"children\":[{\"id\":230100,\"name\":\"哈尔滨市\",\"pid\":230000,\"level\":2,\"children\":[{\"id\":230102,\"name\":\"道里区\",\"pid\":230100,\"level\":3},{\"id\":230103,\"name\":\"南岗区\",\"pid\":230100,\"level\":3},{\"id\":230104,\"name\":\"道外区\",\"pid\":230100,\"level\":3},{\"id\":230108,\"name\":\"平房区\",\"pid\":230100,\"level\":3},{\"id\":230109,\"name\":\"松北区\",\"pid\":230100,\"level\":3},{\"id\":230110,\"name\":\"香坊区\",\"pid\":230100,\"level\":3},{\"id\":230111,\"name\":\"呼兰区\",\"pid\":230100,\"level\":3},{\"id\":230112,\"name\":\"阿城区\",\"pid\":230100,\"level\":3},{\"id\":230113,\"name\":\"双城区\",\"pid\":230100,\"level\":3},{\"id\":230123,\"name\":\"依兰县\",\"pid\":230100,\"level\":3},{\"id\":230124,\"name\":\"方正县\",\"pid\":230100,\"level\":3},{\"id\":230125,\"name\":\"宾县\",\"pid\":230100,\"level\":3},{\"id\":230126,\"name\":\"巴彦县\",\"pid\":230100,\"level\":3},{\"id\":230127,\"name\":\"木兰县\",\"pid\":230100,\"level\":3},{\"id\":230128,\"name\":\"通河县\",\"pid\":230100,\"level\":3},{\"id\":230129,\"name\":\"延寿县\",\"pid\":230100,\"level\":3},{\"id\":230183,\"name\":\"尚志市\",\"pid\":230100,\"level\":3},{\"id\":230184,\"name\":\"五常市\",\"pid\":230100,\"level\":3}]},{\"id\":230200,\"name\":\"齐齐哈尔市\",\"pid\":230000,\"level\":2,\"children\":[{\"id\":230202,\"name\":\"龙沙区\",\"pid\":230200,\"level\":3},{\"id\":230203,\"name\":\"建华区\",\"pid\":230200,\"level\":3},{\"id\":230204,\"name\":\"铁锋区\",\"pid\":230200,\"level\":3},{\"id\":230205,\"name\":\"昂昂溪区\",\"pid\":230200,\"level\":3},{\"id\":230206,\"name\":\"富拉尔基区\",\"pid\":230200,\"level\":3},{\"id\":230207,\"name\":\"碾子山区\",\"pid\":230200,\"level\":3},{\"id\":230208,\"name\":\"梅里斯达斡尔族区\",\"pid\":230200,\"level\":3},{\"id\":230221,\"name\":\"龙江县\",\"pid\":230200,\"level\":3},{\"id\":230223,\"name\":\"依安县\",\"pid\":230200,\"level\":3},{\"id\":230224,\"name\":\"泰来县\",\"pid\":230200,\"level\":3},{\"id\":230225,\"name\":\"甘南县\",\"pid\":230200,\"level\":3},{\"id\":230227,\"name\":\"富裕县\",\"pid\":230200,\"level\":3},{\"id\":230229,\"name\":\"克山县\",\"pid\":230200,\"level\":3},{\"id\":230230,\"name\":\"克东县\",\"pid\":230200,\"level\":3},{\"id\":230231,\"name\":\"拜泉县\",\"pid\":230200,\"level\":3},{\"id\":230281,\"name\":\"讷河市\",\"pid\":230200,\"level\":3}]},{\"id\":230300,\"name\":\"鸡西市\",\"pid\":230000,\"level\":2,\"children\":[{\"id\":230302,\"name\":\"鸡冠区\",\"pid\":230300,\"level\":3},{\"id\":230303,\"name\":\"恒山区\",\"pid\":230300,\"level\":3},{\"id\":230304,\"name\":\"滴道区\",\"pid\":230300,\"level\":3},{\"id\":230305,\"name\":\"梨树区\",\"pid\":230300,\"level\":3},{\"id\":230306,\"name\":\"城子河区\",\"pid\":230300,\"level\":3},{\"id\":230307,\"name\":\"麻山区\",\"pid\":230300,\"level\":3},{\"id\":230321,\"name\":\"鸡东县\",\"pid\":230300,\"level\":3},{\"id\":230381,\"name\":\"虎林市\",\"pid\":230300,\"level\":3},{\"id\":230382,\"name\":\"密山市\",\"pid\":230300,\"level\":3}]},{\"id\":230400,\"name\":\"鹤岗市\",\"pid\":230000,\"level\":2,\"children\":[{\"id\":230402,\"name\":\"向阳区\",\"pid\":230400,\"level\":3},{\"id\":230403,\"name\":\"工农区\",\"pid\":230400,\"level\":3},{\"id\":230404,\"name\":\"南山区\",\"pid\":230400,\"level\":3},{\"id\":230405,\"name\":\"兴安区\",\"pid\":230400,\"level\":3},{\"id\":230406,\"name\":\"东山区\",\"pid\":230400,\"level\":3},{\"id\":230407,\"name\":\"兴山区\",\"pid\":230400,\"level\":3},{\"id\":230421,\"name\":\"萝北县\",\"pid\":230400,\"level\":3},{\"id\":230422,\"name\":\"绥滨县\",\"pid\":230400,\"level\":3}]},{\"id\":230500,\"name\":\"双鸭山市\",\"pid\":230000,\"level\":2,\"children\":[{\"id\":230502,\"name\":\"尖山区\",\"pid\":230500,\"level\":3},{\"id\":230503,\"name\":\"岭东区\",\"pid\":230500,\"level\":3},{\"id\":230505,\"name\":\"四方台区\",\"pid\":230500,\"level\":3},{\"id\":230506,\"name\":\"宝山区\",\"pid\":230500,\"level\":3},{\"id\":230521,\"name\":\"集贤县\",\"pid\":230500,\"level\":3},{\"id\":230522,\"name\":\"友谊县\",\"pid\":230500,\"level\":3},{\"id\":230523,\"name\":\"宝清县\",\"pid\":230500,\"level\":3},{\"id\":230524,\"name\":\"饶河县\",\"pid\":230500,\"level\":3}]},{\"id\":230600,\"name\":\"大庆市\",\"pid\":230000,\"level\":2,\"children\":[{\"id\":230602,\"name\":\"萨尔图区\",\"pid\":230600,\"level\":3},{\"id\":230603,\"name\":\"龙凤区\",\"pid\":230600,\"level\":3},{\"id\":230604,\"name\":\"让胡路区\",\"pid\":230600,\"level\":3},{\"id\":230605,\"name\":\"红岗区\",\"pid\":230600,\"level\":3},{\"id\":230606,\"name\":\"大同区\",\"pid\":230600,\"level\":3},{\"id\":230621,\"name\":\"肇州县\",\"pid\":230600,\"level\":3},{\"id\":230622,\"name\":\"肇源县\",\"pid\":230600,\"level\":3},{\"id\":230623,\"name\":\"林甸县\",\"pid\":230600,\"level\":3},{\"id\":230624,\"name\":\"杜尔伯特蒙古族自治县\",\"pid\":230600,\"level\":3}]},{\"id\":230700,\"name\":\"伊春市\",\"pid\":230000,\"level\":2,\"children\":[{\"id\":230702,\"name\":\"伊春区\",\"pid\":230700,\"level\":3},{\"id\":230703,\"name\":\"南岔区\",\"pid\":230700,\"level\":3},{\"id\":230704,\"name\":\"友好区\",\"pid\":230700,\"level\":3},{\"id\":230705,\"name\":\"西林区\",\"pid\":230700,\"level\":3},{\"id\":230706,\"name\":\"翠峦区\",\"pid\":230700,\"level\":3},{\"id\":230707,\"name\":\"新青区\",\"pid\":230700,\"level\":3},{\"id\":230708,\"name\":\"美溪区\",\"pid\":230700,\"level\":3},{\"id\":230709,\"name\":\"金山屯区\",\"pid\":230700,\"level\":3},{\"id\":230710,\"name\":\"五营区\",\"pid\":230700,\"level\":3},{\"id\":230711,\"name\":\"乌马河区\",\"pid\":230700,\"level\":3},{\"id\":230712,\"name\":\"汤旺河区\",\"pid\":230700,\"level\":3},{\"id\":230713,\"name\":\"带岭区\",\"pid\":230700,\"level\":3},{\"id\":230714,\"name\":\"乌伊岭区\",\"pid\":230700,\"level\":3},{\"id\":230715,\"name\":\"红星区\",\"pid\":230700,\"level\":3},{\"id\":230716,\"name\":\"上甘岭区\",\"pid\":230700,\"level\":3},{\"id\":230722,\"name\":\"嘉荫县\",\"pid\":230700,\"level\":3},{\"id\":230781,\"name\":\"铁力市\",\"pid\":230700,\"level\":3}]},{\"id\":230800,\"name\":\"佳木斯市\",\"pid\":230000,\"level\":2,\"children\":[{\"id\":230803,\"name\":\"向阳区\",\"pid\":230800,\"level\":3},{\"id\":230804,\"name\":\"前进区\",\"pid\":230800,\"level\":3},{\"id\":230805,\"name\":\"东风区\",\"pid\":230800,\"level\":3},{\"id\":230811,\"name\":\"郊区\",\"pid\":230800,\"level\":3},{\"id\":230822,\"name\":\"桦南县\",\"pid\":230800,\"level\":3},{\"id\":230826,\"name\":\"桦川县\",\"pid\":230800,\"level\":3},{\"id\":230828,\"name\":\"汤原县\",\"pid\":230800,\"level\":3},{\"id\":230833,\"name\":\"抚远县\",\"pid\":230800,\"level\":3},{\"id\":230881,\"name\":\"同江市\",\"pid\":230800,\"level\":3},{\"id\":230882,\"name\":\"富锦市\",\"pid\":230800,\"level\":3}]},{\"id\":230900,\"name\":\"七台河市\",\"pid\":230000,\"level\":2,\"children\":[{\"id\":230902,\"name\":\"新兴区\",\"pid\":230900,\"level\":3},{\"id\":230903,\"name\":\"桃山区\",\"pid\":230900,\"level\":3},{\"id\":230904,\"name\":\"茄子河区\",\"pid\":230900,\"level\":3},{\"id\":230921,\"name\":\"勃利县\",\"pid\":230900,\"level\":3}]},{\"id\":231000,\"name\":\"牡丹江市\",\"pid\":230000,\"level\":2,\"children\":[{\"id\":231002,\"name\":\"东安区\",\"pid\":231000,\"level\":3},{\"id\":231003,\"name\":\"阳明区\",\"pid\":231000,\"level\":3},{\"id\":231004,\"name\":\"爱民区\",\"pid\":231000,\"level\":3},{\"id\":231005,\"name\":\"西安区\",\"pid\":231000,\"level\":3},{\"id\":231024,\"name\":\"东宁县\",\"pid\":231000,\"level\":3},{\"id\":231025,\"name\":\"林口县\",\"pid\":231000,\"level\":3},{\"id\":231081,\"name\":\"绥芬河市\",\"pid\":231000,\"level\":3},{\"id\":231083,\"name\":\"海林市\",\"pid\":231000,\"level\":3},{\"id\":231084,\"name\":\"宁安市\",\"pid\":231000,\"level\":3},{\"id\":231085,\"name\":\"穆棱市\",\"pid\":231000,\"level\":3}]},{\"id\":231100,\"name\":\"黑河市\",\"pid\":230000,\"level\":2,\"children\":[{\"id\":231102,\"name\":\"爱辉区\",\"pid\":231100,\"level\":3},{\"id\":231121,\"name\":\"嫩江县\",\"pid\":231100,\"level\":3},{\"id\":231123,\"name\":\"逊克县\",\"pid\":231100,\"level\":3},{\"id\":231124,\"name\":\"孙吴县\",\"pid\":231100,\"level\":3},{\"id\":231181,\"name\":\"北安市\",\"pid\":231100,\"level\":3},{\"id\":231182,\"name\":\"五大连池市\",\"pid\":231100,\"level\":3}]},{\"id\":231200,\"name\":\"绥化市\",\"pid\":230000,\"level\":2,\"children\":[{\"id\":231202,\"name\":\"北林区\",\"pid\":231200,\"level\":3},{\"id\":231221,\"name\":\"望奎县\",\"pid\":231200,\"level\":3},{\"id\":231222,\"name\":\"兰西县\",\"pid\":231200,\"level\":3},{\"id\":231223,\"name\":\"青冈县\",\"pid\":231200,\"level\":3},{\"id\":231224,\"name\":\"庆安县\",\"pid\":231200,\"level\":3},{\"id\":231225,\"name\":\"明水县\",\"pid\":231200,\"level\":3},{\"id\":231226,\"name\":\"绥棱县\",\"pid\":231200,\"level\":3},{\"id\":231281,\"name\":\"安达市\",\"pid\":231200,\"level\":3},{\"id\":231282,\"name\":\"肇东市\",\"pid\":231200,\"level\":3},{\"id\":231283,\"name\":\"海伦市\",\"pid\":231200,\"level\":3}]},{\"id\":232700,\"name\":\"大兴安岭地区\",\"pid\":230000,\"level\":2,\"children\":[{\"id\":232701,\"name\":\"加格达奇区\",\"pid\":232700,\"level\":3},{\"id\":232702,\"name\":\"新林区\",\"pid\":232700,\"level\":3},{\"id\":232703,\"name\":\"松岭区\",\"pid\":232700,\"level\":3},{\"id\":232704,\"name\":\"呼中区\",\"pid\":232700,\"level\":3},{\"id\":232721,\"name\":\"呼玛县\",\"pid\":232700,\"level\":3},{\"id\":232722,\"name\":\"塔河县\",\"pid\":232700,\"level\":3},{\"id\":232723,\"name\":\"漠河县\",\"pid\":232700,\"level\":3}]}]},{\"id\":310000,\"name\":\"上海市\",\"pid\":100000,\"level\":1,\"children\":[{\"id\":310100,\"name\":\"上海市\",\"pid\":310000,\"level\":2,\"children\":[{\"id\":310101,\"name\":\"黄浦区\",\"pid\":310100,\"level\":3},{\"id\":310104,\"name\":\"徐汇区\",\"pid\":310100,\"level\":3},{\"id\":310105,\"name\":\"长宁区\",\"pid\":310100,\"level\":3},{\"id\":310106,\"name\":\"静安区\",\"pid\":310100,\"level\":3},{\"id\":310107,\"name\":\"普陀区\",\"pid\":310100,\"level\":3},{\"id\":310108,\"name\":\"闸北区\",\"pid\":310100,\"level\":3},{\"id\":310109,\"name\":\"虹口区\",\"pid\":310100,\"level\":3},{\"id\":310110,\"name\":\"杨浦区\",\"pid\":310100,\"level\":3},{\"id\":310112,\"name\":\"闵行区\",\"pid\":310100,\"level\":3},{\"id\":310113,\"name\":\"宝山区\",\"pid\":310100,\"level\":3},{\"id\":310114,\"name\":\"嘉定区\",\"pid\":310100,\"level\":3},{\"id\":310115,\"name\":\"浦东新区\",\"pid\":310100,\"level\":3},{\"id\":310116,\"name\":\"金山区\",\"pid\":310100,\"level\":3},{\"id\":310117,\"name\":\"松江区\",\"pid\":310100,\"level\":3},{\"id\":310118,\"name\":\"青浦区\",\"pid\":310100,\"level\":3},{\"id\":310120,\"name\":\"奉贤区\",\"pid\":310100,\"level\":3},{\"id\":310230,\"name\":\"崇明县\",\"pid\":310100,\"level\":3}]}]},{\"id\":320000,\"name\":\"江苏省\",\"pid\":100000,\"level\":1,\"children\":[{\"id\":320100,\"name\":\"南京市\",\"pid\":320000,\"level\":2,\"children\":[{\"id\":320102,\"name\":\"玄武区\",\"pid\":320100,\"level\":3},{\"id\":320104,\"name\":\"秦淮区\",\"pid\":320100,\"level\":3},{\"id\":320105,\"name\":\"建邺区\",\"pid\":320100,\"level\":3},{\"id\":320106,\"name\":\"鼓楼区\",\"pid\":320100,\"level\":3},{\"id\":320111,\"name\":\"浦口区\",\"pid\":320100,\"level\":3},{\"id\":320113,\"name\":\"栖霞区\",\"pid\":320100,\"level\":3},{\"id\":320114,\"name\":\"雨花台区\",\"pid\":320100,\"level\":3},{\"id\":320115,\"name\":\"江宁区\",\"pid\":320100,\"level\":3},{\"id\":320116,\"name\":\"六合区\",\"pid\":320100,\"level\":3},{\"id\":320117,\"name\":\"溧水区\",\"pid\":320100,\"level\":3},{\"id\":320118,\"name\":\"高淳区\",\"pid\":320100,\"level\":3}]},{\"id\":320200,\"name\":\"无锡市\",\"pid\":320000,\"level\":2,\"children\":[{\"id\":320202,\"name\":\"崇安区\",\"pid\":320200,\"level\":3},{\"id\":320203,\"name\":\"南长区\",\"pid\":320200,\"level\":3},{\"id\":320204,\"name\":\"北塘区\",\"pid\":320200,\"level\":3},{\"id\":320205,\"name\":\"锡山区\",\"pid\":320200,\"level\":3},{\"id\":320206,\"name\":\"惠山区\",\"pid\":320200,\"level\":3},{\"id\":320211,\"name\":\"滨湖区\",\"pid\":320200,\"level\":3},{\"id\":320281,\"name\":\"江阴市\",\"pid\":320200,\"level\":3},{\"id\":320282,\"name\":\"宜兴市\",\"pid\":320200,\"level\":3}]},{\"id\":320300,\"name\":\"徐州市\",\"pid\":320000,\"level\":2,\"children\":[{\"id\":320302,\"name\":\"鼓楼区\",\"pid\":320300,\"level\":3},{\"id\":320303,\"name\":\"云龙区\",\"pid\":320300,\"level\":3},{\"id\":320305,\"name\":\"贾汪区\",\"pid\":320300,\"level\":3},{\"id\":320311,\"name\":\"泉山区\",\"pid\":320300,\"level\":3},{\"id\":320312,\"name\":\"铜山区\",\"pid\":320300,\"level\":3},{\"id\":320321,\"name\":\"丰县\",\"pid\":320300,\"level\":3},{\"id\":320322,\"name\":\"沛县\",\"pid\":320300,\"level\":3},{\"id\":320324,\"name\":\"睢宁县\",\"pid\":320300,\"level\":3},{\"id\":320381,\"name\":\"新沂市\",\"pid\":320300,\"level\":3},{\"id\":320382,\"name\":\"邳州市\",\"pid\":320300,\"level\":3}]},{\"id\":320400,\"name\":\"常州市\",\"pid\":320000,\"level\":2,\"children\":[{\"id\":320402,\"name\":\"天宁区\",\"pid\":320400,\"level\":3},{\"id\":320404,\"name\":\"钟楼区\",\"pid\":320400,\"level\":3},{\"id\":320405,\"name\":\"戚墅堰区\",\"pid\":320400,\"level\":3},{\"id\":320411,\"name\":\"新北区\",\"pid\":320400,\"level\":3},{\"id\":320412,\"name\":\"武进区\",\"pid\":320400,\"level\":3},{\"id\":320481,\"name\":\"溧阳市\",\"pid\":320400,\"level\":3},{\"id\":320482,\"name\":\"金坛市\",\"pid\":320400,\"level\":3}]},{\"id\":320500,\"name\":\"苏州市\",\"pid\":320000,\"level\":2,\"children\":[{\"id\":320505,\"name\":\"虎丘区\",\"pid\":320500,\"level\":3},{\"id\":320506,\"name\":\"吴中区\",\"pid\":320500,\"level\":3},{\"id\":320507,\"name\":\"相城区\",\"pid\":320500,\"level\":3},{\"id\":320508,\"name\":\"姑苏区\",\"pid\":320500,\"level\":3},{\"id\":320509,\"name\":\"吴江区\",\"pid\":320500,\"level\":3},{\"id\":320581,\"name\":\"常熟市\",\"pid\":320500,\"level\":3},{\"id\":320582,\"name\":\"张家港市\",\"pid\":320500,\"level\":3},{\"id\":320583,\"name\":\"昆山市\",\"pid\":320500,\"level\":3},{\"id\":320585,\"name\":\"太仓市\",\"pid\":320500,\"level\":3}]},{\"id\":320600,\"name\":\"南通市\",\"pid\":320000,\"level\":2,\"children\":[{\"id\":320602,\"name\":\"崇川区\",\"pid\":320600,\"level\":3},{\"id\":320611,\"name\":\"港闸区\",\"pid\":320600,\"level\":3},{\"id\":320612,\"name\":\"通州区\",\"pid\":320600,\"level\":3},{\"id\":320621,\"name\":\"海安县\",\"pid\":320600,\"level\":3},{\"id\":320623,\"name\":\"如东县\",\"pid\":320600,\"level\":3},{\"id\":320681,\"name\":\"启东市\",\"pid\":320600,\"level\":3},{\"id\":320682,\"name\":\"如皋市\",\"pid\":320600,\"level\":3},{\"id\":320684,\"name\":\"海门市\",\"pid\":320600,\"level\":3}]},{\"id\":320700,\"name\":\"连云港市\",\"pid\":320000,\"level\":2,\"children\":[{\"id\":320703,\"name\":\"连云区\",\"pid\":320700,\"level\":3},{\"id\":320706,\"name\":\"海州区\",\"pid\":320700,\"level\":3},{\"id\":320707,\"name\":\"赣榆区\",\"pid\":320700,\"level\":3},{\"id\":320722,\"name\":\"东海县\",\"pid\":320700,\"level\":3},{\"id\":320723,\"name\":\"灌云县\",\"pid\":320700,\"level\":3},{\"id\":320724,\"name\":\"灌南县\",\"pid\":320700,\"level\":3}]},{\"id\":320800,\"name\":\"淮安市\",\"pid\":320000,\"level\":2,\"children\":[{\"id\":320802,\"name\":\"清河区\",\"pid\":320800,\"level\":3},{\"id\":320803,\"name\":\"淮安区\",\"pid\":320800,\"level\":3},{\"id\":320804,\"name\":\"淮阴区\",\"pid\":320800,\"level\":3},{\"id\":320811,\"name\":\"清浦区\",\"pid\":320800,\"level\":3},{\"id\":320826,\"name\":\"涟水县\",\"pid\":320800,\"level\":3},{\"id\":320829,\"name\":\"洪泽县\",\"pid\":320800,\"level\":3},{\"id\":320830,\"name\":\"盱眙县\",\"pid\":320800,\"level\":3},{\"id\":320831,\"name\":\"金湖县\",\"pid\":320800,\"level\":3}]},{\"id\":320900,\"name\":\"盐城市\",\"pid\":320000,\"level\":2,\"children\":[{\"id\":320902,\"name\":\"亭湖区\",\"pid\":320900,\"level\":3},{\"id\":320903,\"name\":\"盐都区\",\"pid\":320900,\"level\":3},{\"id\":320921,\"name\":\"响水县\",\"pid\":320900,\"level\":3},{\"id\":320922,\"name\":\"滨海县\",\"pid\":320900,\"level\":3},{\"id\":320923,\"name\":\"阜宁县\",\"pid\":320900,\"level\":3},{\"id\":320924,\"name\":\"射阳县\",\"pid\":320900,\"level\":3},{\"id\":320925,\"name\":\"建湖县\",\"pid\":320900,\"level\":3},{\"id\":320981,\"name\":\"东台市\",\"pid\":320900,\"level\":3},{\"id\":320982,\"name\":\"大丰市\",\"pid\":320900,\"level\":3}]},{\"id\":321000,\"name\":\"扬州市\",\"pid\":320000,\"level\":2,\"children\":[{\"id\":321002,\"name\":\"广陵区\",\"pid\":321000,\"level\":3},{\"id\":321003,\"name\":\"邗江区\",\"pid\":321000,\"level\":3},{\"id\":321012,\"name\":\"江都区\",\"pid\":321000,\"level\":3},{\"id\":321023,\"name\":\"宝应县\",\"pid\":321000,\"level\":3},{\"id\":321081,\"name\":\"仪征市\",\"pid\":321000,\"level\":3},{\"id\":321084,\"name\":\"高邮市\",\"pid\":321000,\"level\":3}]},{\"id\":321100,\"name\":\"镇江市\",\"pid\":320000,\"level\":2,\"children\":[{\"id\":321102,\"name\":\"京口区\",\"pid\":321100,\"level\":3},{\"id\":321111,\"name\":\"润州区\",\"pid\":321100,\"level\":3},{\"id\":321112,\"name\":\"丹徒区\",\"pid\":321100,\"level\":3},{\"id\":321181,\"name\":\"丹阳市\",\"pid\":321100,\"level\":3},{\"id\":321182,\"name\":\"扬中市\",\"pid\":321100,\"level\":3},{\"id\":321183,\"name\":\"句容市\",\"pid\":321100,\"level\":3}]},{\"id\":321200,\"name\":\"泰州市\",\"pid\":320000,\"level\":2,\"children\":[{\"id\":321202,\"name\":\"海陵区\",\"pid\":321200,\"level\":3},{\"id\":321203,\"name\":\"高港区\",\"pid\":321200,\"level\":3},{\"id\":321204,\"name\":\"姜堰区\",\"pid\":321200,\"level\":3},{\"id\":321281,\"name\":\"兴化市\",\"pid\":321200,\"level\":3},{\"id\":321282,\"name\":\"靖江市\",\"pid\":321200,\"level\":3},{\"id\":321283,\"name\":\"泰兴市\",\"pid\":321200,\"level\":3}]},{\"id\":321300,\"name\":\"宿迁市\",\"pid\":320000,\"level\":2,\"children\":[{\"id\":321302,\"name\":\"宿城区\",\"pid\":321300,\"level\":3},{\"id\":321311,\"name\":\"宿豫区\",\"pid\":321300,\"level\":3},{\"id\":321322,\"name\":\"沭阳县\",\"pid\":321300,\"level\":3},{\"id\":321323,\"name\":\"泗阳县\",\"pid\":321300,\"level\":3},{\"id\":321324,\"name\":\"泗洪县\",\"pid\":321300,\"level\":3}]}]},{\"id\":330000,\"name\":\"浙江省\",\"pid\":100000,\"level\":1,\"children\":[{\"id\":330100,\"name\":\"杭州市\",\"pid\":330000,\"level\":2,\"children\":[{\"id\":330102,\"name\":\"上城区\",\"pid\":330100,\"level\":3},{\"id\":330103,\"name\":\"下城区\",\"pid\":330100,\"level\":3},{\"id\":330104,\"name\":\"江干区\",\"pid\":330100,\"level\":3},{\"id\":330105,\"name\":\"拱墅区\",\"pid\":330100,\"level\":3},{\"id\":330106,\"name\":\"西湖区\",\"pid\":330100,\"level\":3},{\"id\":330108,\"name\":\"滨江区\",\"pid\":330100,\"level\":3},{\"id\":330109,\"name\":\"萧山区\",\"pid\":330100,\"level\":3},{\"id\":330110,\"name\":\"余杭区\",\"pid\":330100,\"level\":3},{\"id\":330122,\"name\":\"桐庐县\",\"pid\":330100,\"level\":3},{\"id\":330127,\"name\":\"淳安县\",\"pid\":330100,\"level\":3},{\"id\":330182,\"name\":\"建德市\",\"pid\":330100,\"level\":3},{\"id\":330183,\"name\":\"富阳区\",\"pid\":330100,\"level\":3},{\"id\":330185,\"name\":\"临安市\",\"pid\":330100,\"level\":3}]},{\"id\":330200,\"name\":\"宁波市\",\"pid\":330000,\"level\":2,\"children\":[{\"id\":330203,\"name\":\"海曙区\",\"pid\":330200,\"level\":3},{\"id\":330204,\"name\":\"江东区\",\"pid\":330200,\"level\":3},{\"id\":330205,\"name\":\"江北区\",\"pid\":330200,\"level\":3},{\"id\":330206,\"name\":\"北仑区\",\"pid\":330200,\"level\":3},{\"id\":330211,\"name\":\"镇海区\",\"pid\":330200,\"level\":3},{\"id\":330212,\"name\":\"鄞州区\",\"pid\":330200,\"level\":3},{\"id\":330225,\"name\":\"象山县\",\"pid\":330200,\"level\":3},{\"id\":330226,\"name\":\"宁海县\",\"pid\":330200,\"level\":3},{\"id\":330281,\"name\":\"余姚市\",\"pid\":330200,\"level\":3},{\"id\":330282,\"name\":\"慈溪市\",\"pid\":330200,\"level\":3},{\"id\":330283,\"name\":\"奉化市\",\"pid\":330200,\"level\":3}]},{\"id\":330300,\"name\":\"温州市\",\"pid\":330000,\"level\":2,\"children\":[{\"id\":330302,\"name\":\"鹿城区\",\"pid\":330300,\"level\":3},{\"id\":330303,\"name\":\"龙湾区\",\"pid\":330300,\"level\":3},{\"id\":330304,\"name\":\"瓯海区\",\"pid\":330300,\"level\":3},{\"id\":330322,\"name\":\"洞头县\",\"pid\":330300,\"level\":3},{\"id\":330324,\"name\":\"永嘉县\",\"pid\":330300,\"level\":3},{\"id\":330326,\"name\":\"平阳县\",\"pid\":330300,\"level\":3},{\"id\":330327,\"name\":\"苍南县\",\"pid\":330300,\"level\":3},{\"id\":330328,\"name\":\"文成县\",\"pid\":330300,\"level\":3},{\"id\":330329,\"name\":\"泰顺县\",\"pid\":330300,\"level\":3},{\"id\":330381,\"name\":\"瑞安市\",\"pid\":330300,\"level\":3},{\"id\":330382,\"name\":\"乐清市\",\"pid\":330300,\"level\":3}]},{\"id\":330400,\"name\":\"嘉兴市\",\"pid\":330000,\"level\":2,\"children\":[{\"id\":330402,\"name\":\"南湖区\",\"pid\":330400,\"level\":3},{\"id\":330411,\"name\":\"秀洲区\",\"pid\":330400,\"level\":3},{\"id\":330421,\"name\":\"嘉善县\",\"pid\":330400,\"level\":3},{\"id\":330424,\"name\":\"海盐县\",\"pid\":330400,\"level\":3},{\"id\":330481,\"name\":\"海宁市\",\"pid\":330400,\"level\":3},{\"id\":330482,\"name\":\"平湖市\",\"pid\":330400,\"level\":3},{\"id\":330483,\"name\":\"桐乡市\",\"pid\":330400,\"level\":3}]},{\"id\":330500,\"name\":\"湖州市\",\"pid\":330000,\"level\":2,\"children\":[{\"id\":330502,\"name\":\"吴兴区\",\"pid\":330500,\"level\":3},{\"id\":330503,\"name\":\"南浔区\",\"pid\":330500,\"level\":3},{\"id\":330521,\"name\":\"德清县\",\"pid\":330500,\"level\":3},{\"id\":330522,\"name\":\"长兴县\",\"pid\":330500,\"level\":3},{\"id\":330523,\"name\":\"安吉县\",\"pid\":330500,\"level\":3}]},{\"id\":330600,\"name\":\"绍兴市\",\"pid\":330000,\"level\":2,\"children\":[{\"id\":330602,\"name\":\"越城区\",\"pid\":330600,\"level\":3},{\"id\":330603,\"name\":\"柯桥区\",\"pid\":330600,\"level\":3},{\"id\":330604,\"name\":\"上虞区\",\"pid\":330600,\"level\":3},{\"id\":330624,\"name\":\"新昌县\",\"pid\":330600,\"level\":3},{\"id\":330681,\"name\":\"诸暨市\",\"pid\":330600,\"level\":3},{\"id\":330683,\"name\":\"嵊州市\",\"pid\":330600,\"level\":3}]},{\"id\":330700,\"name\":\"金华市\",\"pid\":330000,\"level\":2,\"children\":[{\"id\":330702,\"name\":\"婺城区\",\"pid\":330700,\"level\":3},{\"id\":330703,\"name\":\"金东区\",\"pid\":330700,\"level\":3},{\"id\":330723,\"name\":\"武义县\",\"pid\":330700,\"level\":3},{\"id\":330726,\"name\":\"浦江县\",\"pid\":330700,\"level\":3},{\"id\":330727,\"name\":\"磐安县\",\"pid\":330700,\"level\":3},{\"id\":330781,\"name\":\"兰溪市\",\"pid\":330700,\"level\":3},{\"id\":330782,\"name\":\"义乌市\",\"pid\":330700,\"level\":3},{\"id\":330783,\"name\":\"东阳市\",\"pid\":330700,\"level\":3},{\"id\":330784,\"name\":\"永康市\",\"pid\":330700,\"level\":3}]},{\"id\":330800,\"name\":\"衢州市\",\"pid\":330000,\"level\":2,\"children\":[{\"id\":330802,\"name\":\"柯城区\",\"pid\":330800,\"level\":3},{\"id\":330803,\"name\":\"衢江区\",\"pid\":330800,\"level\":3},{\"id\":330822,\"name\":\"常山县\",\"pid\":330800,\"level\":3},{\"id\":330824,\"name\":\"开化县\",\"pid\":330800,\"level\":3},{\"id\":330825,\"name\":\"龙游县\",\"pid\":330800,\"level\":3},{\"id\":330881,\"name\":\"江山市\",\"pid\":330800,\"level\":3}]},{\"id\":330900,\"name\":\"舟山市\",\"pid\":330000,\"level\":2,\"children\":[{\"id\":330902,\"name\":\"定海区\",\"pid\":330900,\"level\":3},{\"id\":330903,\"name\":\"普陀区\",\"pid\":330900,\"level\":3},{\"id\":330921,\"name\":\"岱山县\",\"pid\":330900,\"level\":3},{\"id\":330922,\"name\":\"嵊泗县\",\"pid\":330900,\"level\":3}]},{\"id\":331000,\"name\":\"台州市\",\"pid\":330000,\"level\":2,\"children\":[{\"id\":331002,\"name\":\"椒江区\",\"pid\":331000,\"level\":3},{\"id\":331003,\"name\":\"黄岩区\",\"pid\":331000,\"level\":3},{\"id\":331004,\"name\":\"路桥区\",\"pid\":331000,\"level\":3},{\"id\":331021,\"name\":\"玉环县\",\"pid\":331000,\"level\":3},{\"id\":331022,\"name\":\"三门县\",\"pid\":331000,\"level\":3},{\"id\":331023,\"name\":\"天台县\",\"pid\":331000,\"level\":3},{\"id\":331024,\"name\":\"仙居县\",\"pid\":331000,\"level\":3},{\"id\":331081,\"name\":\"温岭市\",\"pid\":331000,\"level\":3},{\"id\":331082,\"name\":\"临海市\",\"pid\":331000,\"level\":3}]},{\"id\":331100,\"name\":\"丽水市\",\"pid\":330000,\"level\":2,\"children\":[{\"id\":331102,\"name\":\"莲都区\",\"pid\":331100,\"level\":3},{\"id\":331121,\"name\":\"青田县\",\"pid\":331100,\"level\":3},{\"id\":331122,\"name\":\"缙云县\",\"pid\":331100,\"level\":3},{\"id\":331123,\"name\":\"遂昌县\",\"pid\":331100,\"level\":3},{\"id\":331124,\"name\":\"松阳县\",\"pid\":331100,\"level\":3},{\"id\":331125,\"name\":\"云和县\",\"pid\":331100,\"level\":3},{\"id\":331126,\"name\":\"庆元县\",\"pid\":331100,\"level\":3},{\"id\":331127,\"name\":\"景宁畲族自治县\",\"pid\":331100,\"level\":3},{\"id\":331181,\"name\":\"龙泉市\",\"pid\":331100,\"level\":3}]},{\"id\":331200,\"name\":\"舟山群岛新区\",\"pid\":330000,\"level\":2,\"children\":[{\"id\":331201,\"name\":\"金塘岛\",\"pid\":331200,\"level\":3},{\"id\":331202,\"name\":\"六横岛\",\"pid\":331200,\"level\":3},{\"id\":331203,\"name\":\"衢山岛\",\"pid\":331200,\"level\":3},{\"id\":331204,\"name\":\"舟山本岛西北部\",\"pid\":331200,\"level\":3},{\"id\":331205,\"name\":\"岱山岛西南部\",\"pid\":331200,\"level\":3},{\"id\":331206,\"name\":\"泗礁岛\",\"pid\":331200,\"level\":3},{\"id\":331207,\"name\":\"朱家尖岛\",\"pid\":331200,\"level\":3},{\"id\":331208,\"name\":\"洋山岛\",\"pid\":331200,\"level\":3},{\"id\":331209,\"name\":\"长涂岛\",\"pid\":331200,\"level\":3},{\"id\":331210,\"name\":\"虾峙岛\",\"pid\":331200,\"level\":3}]}]},{\"id\":340000,\"name\":\"安徽省\",\"pid\":100000,\"level\":1,\"children\":[{\"id\":340100,\"name\":\"合肥市\",\"pid\":340000,\"level\":2,\"children\":[{\"id\":340102,\"name\":\"瑶海区\",\"pid\":340100,\"level\":3},{\"id\":340103,\"name\":\"庐阳区\",\"pid\":340100,\"level\":3},{\"id\":340104,\"name\":\"蜀山区\",\"pid\":340100,\"level\":3},{\"id\":340111,\"name\":\"包河区\",\"pid\":340100,\"level\":3},{\"id\":340121,\"name\":\"长丰县\",\"pid\":340100,\"level\":3},{\"id\":340122,\"name\":\"肥东县\",\"pid\":340100,\"level\":3},{\"id\":340123,\"name\":\"肥西县\",\"pid\":340100,\"level\":3},{\"id\":340124,\"name\":\"庐江县\",\"pid\":340100,\"level\":3},{\"id\":340181,\"name\":\"巢湖市\",\"pid\":340100,\"level\":3}]},{\"id\":340200,\"name\":\"芜湖市\",\"pid\":340000,\"level\":2,\"children\":[{\"id\":340202,\"name\":\"镜湖区\",\"pid\":340200,\"level\":3},{\"id\":340203,\"name\":\"弋江区\",\"pid\":340200,\"level\":3},{\"id\":340207,\"name\":\"鸠江区\",\"pid\":340200,\"level\":3},{\"id\":340208,\"name\":\"三山区\",\"pid\":340200,\"level\":3},{\"id\":340221,\"name\":\"芜湖县\",\"pid\":340200,\"level\":3},{\"id\":340222,\"name\":\"繁昌县\",\"pid\":340200,\"level\":3},{\"id\":340223,\"name\":\"南陵县\",\"pid\":340200,\"level\":3},{\"id\":340225,\"name\":\"无为县\",\"pid\":340200,\"level\":3}]},{\"id\":340300,\"name\":\"蚌埠市\",\"pid\":340000,\"level\":2,\"children\":[{\"id\":340302,\"name\":\"龙子湖区\",\"pid\":340300,\"level\":3},{\"id\":340303,\"name\":\"蚌山区\",\"pid\":340300,\"level\":3},{\"id\":340304,\"name\":\"禹会区\",\"pid\":340300,\"level\":3},{\"id\":340311,\"name\":\"淮上区\",\"pid\":340300,\"level\":3},{\"id\":340321,\"name\":\"怀远县\",\"pid\":340300,\"level\":3},{\"id\":340322,\"name\":\"五河县\",\"pid\":340300,\"level\":3},{\"id\":340323,\"name\":\"固镇县\",\"pid\":340300,\"level\":3}]},{\"id\":340400,\"name\":\"淮南市\",\"pid\":340000,\"level\":2,\"children\":[{\"id\":340402,\"name\":\"大通区\",\"pid\":340400,\"level\":3},{\"id\":340403,\"name\":\"田家庵区\",\"pid\":340400,\"level\":3},{\"id\":340404,\"name\":\"谢家集区\",\"pid\":340400,\"level\":3},{\"id\":340405,\"name\":\"八公山区\",\"pid\":340400,\"level\":3},{\"id\":340406,\"name\":\"潘集区\",\"pid\":340400,\"level\":3},{\"id\":340421,\"name\":\"凤台县\",\"pid\":340400,\"level\":3}]},{\"id\":340500,\"name\":\"马鞍山市\",\"pid\":340000,\"level\":2,\"children\":[{\"id\":340503,\"name\":\"花山区\",\"pid\":340500,\"level\":3},{\"id\":340504,\"name\":\"雨山区\",\"pid\":340500,\"level\":3},{\"id\":340506,\"name\":\"博望区\",\"pid\":340500,\"level\":3},{\"id\":340521,\"name\":\"当涂县\",\"pid\":340500,\"level\":3},{\"id\":340522,\"name\":\"含山县\",\"pid\":340500,\"level\":3},{\"id\":340523,\"name\":\"和县\",\"pid\":340500,\"level\":3}]},{\"id\":340600,\"name\":\"淮北市\",\"pid\":340000,\"level\":2,\"children\":[{\"id\":340602,\"name\":\"杜集区\",\"pid\":340600,\"level\":3},{\"id\":340603,\"name\":\"相山区\",\"pid\":340600,\"level\":3},{\"id\":340604,\"name\":\"烈山区\",\"pid\":340600,\"level\":3},{\"id\":340621,\"name\":\"濉溪县\",\"pid\":340600,\"level\":3}]},{\"id\":340700,\"name\":\"铜陵市\",\"pid\":340000,\"level\":2,\"children\":[{\"id\":340702,\"name\":\"铜官山区\",\"pid\":340700,\"level\":3},{\"id\":340703,\"name\":\"狮子山区\",\"pid\":340700,\"level\":3},{\"id\":340711,\"name\":\"郊区\",\"pid\":340700,\"level\":3},{\"id\":340721,\"name\":\"铜陵县\",\"pid\":340700,\"level\":3}]},{\"id\":340800,\"name\":\"安庆市\",\"pid\":340000,\"level\":2,\"children\":[{\"id\":340802,\"name\":\"迎江区\",\"pid\":340800,\"level\":3},{\"id\":340803,\"name\":\"大观区\",\"pid\":340800,\"level\":3},{\"id\":340811,\"name\":\"宜秀区\",\"pid\":340800,\"level\":3},{\"id\":340822,\"name\":\"怀宁县\",\"pid\":340800,\"level\":3},{\"id\":340823,\"name\":\"枞阳县\",\"pid\":340800,\"level\":3},{\"id\":340824,\"name\":\"潜山县\",\"pid\":340800,\"level\":3},{\"id\":340825,\"name\":\"太湖县\",\"pid\":340800,\"level\":3},{\"id\":340826,\"name\":\"宿松县\",\"pid\":340800,\"level\":3},{\"id\":340827,\"name\":\"望江县\",\"pid\":340800,\"level\":3},{\"id\":340828,\"name\":\"岳西县\",\"pid\":340800,\"level\":3},{\"id\":340881,\"name\":\"桐城市\",\"pid\":340800,\"level\":3}]},{\"id\":341000,\"name\":\"黄山市\",\"pid\":340000,\"level\":2,\"children\":[{\"id\":341002,\"name\":\"屯溪区\",\"pid\":341000,\"level\":3},{\"id\":341003,\"name\":\"黄山区\",\"pid\":341000,\"level\":3},{\"id\":341004,\"name\":\"徽州区\",\"pid\":341000,\"level\":3},{\"id\":341021,\"name\":\"歙县\",\"pid\":341000,\"level\":3},{\"id\":341022,\"name\":\"休宁县\",\"pid\":341000,\"level\":3},{\"id\":341023,\"name\":\"黟县\",\"pid\":341000,\"level\":3},{\"id\":341024,\"name\":\"祁门县\",\"pid\":341000,\"level\":3}]},{\"id\":341100,\"name\":\"滁州市\",\"pid\":340000,\"level\":2,\"children\":[{\"id\":341102,\"name\":\"琅琊区\",\"pid\":341100,\"level\":3},{\"id\":341103,\"name\":\"南谯区\",\"pid\":341100,\"level\":3},{\"id\":341122,\"name\":\"来安县\",\"pid\":341100,\"level\":3},{\"id\":341124,\"name\":\"全椒县\",\"pid\":341100,\"level\":3},{\"id\":341125,\"name\":\"定远县\",\"pid\":341100,\"level\":3},{\"id\":341126,\"name\":\"凤阳县\",\"pid\":341100,\"level\":3},{\"id\":341181,\"name\":\"天长市\",\"pid\":341100,\"level\":3},{\"id\":341182,\"name\":\"明光市\",\"pid\":341100,\"level\":3}]},{\"id\":341200,\"name\":\"阜阳市\",\"pid\":340000,\"level\":2,\"children\":[{\"id\":341202,\"name\":\"颍州区\",\"pid\":341200,\"level\":3},{\"id\":341203,\"name\":\"颍东区\",\"pid\":341200,\"level\":3},{\"id\":341204,\"name\":\"颍泉区\",\"pid\":341200,\"level\":3},{\"id\":341221,\"name\":\"临泉县\",\"pid\":341200,\"level\":3},{\"id\":341222,\"name\":\"太和县\",\"pid\":341200,\"level\":3},{\"id\":341225,\"name\":\"阜南县\",\"pid\":341200,\"level\":3},{\"id\":341226,\"name\":\"颍上县\",\"pid\":341200,\"level\":3},{\"id\":341282,\"name\":\"界首市\",\"pid\":341200,\"level\":3}]},{\"id\":341300,\"name\":\"宿州市\",\"pid\":340000,\"level\":2,\"children\":[{\"id\":341302,\"name\":\"埇桥区\",\"pid\":341300,\"level\":3},{\"id\":341321,\"name\":\"砀山县\",\"pid\":341300,\"level\":3},{\"id\":341322,\"name\":\"萧县\",\"pid\":341300,\"level\":3},{\"id\":341323,\"name\":\"灵璧县\",\"pid\":341300,\"level\":3},{\"id\":341324,\"name\":\"泗县\",\"pid\":341300,\"level\":3}]},{\"id\":341500,\"name\":\"六安市\",\"pid\":340000,\"level\":2,\"children\":[{\"id\":3415021,\"name\":\"叶集区\",\"pid\":341500,\"level\":3},{\"id\":341502,\"name\":\"金安区\",\"pid\":341500,\"level\":3},{\"id\":341503,\"name\":\"裕安区\",\"pid\":341500,\"level\":3},{\"id\":341521,\"name\":\"寿县\",\"pid\":341500,\"level\":3},{\"id\":341522,\"name\":\"霍邱县\",\"pid\":341500,\"level\":3},{\"id\":341523,\"name\":\"舒城县\",\"pid\":341500,\"level\":3},{\"id\":341524,\"name\":\"金寨县\",\"pid\":341500,\"level\":3},{\"id\":341525,\"name\":\"霍山县\",\"pid\":341500,\"level\":3}]},{\"id\":341600,\"name\":\"亳州市\",\"pid\":340000,\"level\":2,\"children\":[{\"id\":341602,\"name\":\"谯城区\",\"pid\":341600,\"level\":3},{\"id\":341621,\"name\":\"涡阳县\",\"pid\":341600,\"level\":3},{\"id\":341622,\"name\":\"蒙城县\",\"pid\":341600,\"level\":3},{\"id\":341623,\"name\":\"利辛县\",\"pid\":341600,\"level\":3}]},{\"id\":341700,\"name\":\"池州市\",\"pid\":340000,\"level\":2,\"children\":[{\"id\":341702,\"name\":\"贵池区\",\"pid\":341700,\"level\":3},{\"id\":341721,\"name\":\"东至县\",\"pid\":341700,\"level\":3},{\"id\":341722,\"name\":\"石台县\",\"pid\":341700,\"level\":3},{\"id\":341723,\"name\":\"青阳县\",\"pid\":341700,\"level\":3}]},{\"id\":341800,\"name\":\"宣城市\",\"pid\":340000,\"level\":2,\"children\":[{\"id\":341802,\"name\":\"宣州区\",\"pid\":341800,\"level\":3},{\"id\":341821,\"name\":\"郎溪县\",\"pid\":341800,\"level\":3},{\"id\":341822,\"name\":\"广德县\",\"pid\":341800,\"level\":3},{\"id\":341823,\"name\":\"泾县\",\"pid\":341800,\"level\":3},{\"id\":341824,\"name\":\"绩溪县\",\"pid\":341800,\"level\":3},{\"id\":341825,\"name\":\"旌德县\",\"pid\":341800,\"level\":3},{\"id\":341881,\"name\":\"宁国市\",\"pid\":341800,\"level\":3}]}]},{\"id\":350000,\"name\":\"福建省\",\"pid\":100000,\"level\":1,\"children\":[{\"id\":350100,\"name\":\"福州市\",\"pid\":350000,\"level\":2,\"children\":[{\"id\":350102,\"name\":\"鼓楼区\",\"pid\":350100,\"level\":3},{\"id\":350103,\"name\":\"台江区\",\"pid\":350100,\"level\":3},{\"id\":350104,\"name\":\"仓山区\",\"pid\":350100,\"level\":3},{\"id\":350105,\"name\":\"马尾区\",\"pid\":350100,\"level\":3},{\"id\":350111,\"name\":\"晋安区\",\"pid\":350100,\"level\":3},{\"id\":350121,\"name\":\"闽侯县\",\"pid\":350100,\"level\":3},{\"id\":350122,\"name\":\"连江县\",\"pid\":350100,\"level\":3},{\"id\":350123,\"name\":\"罗源县\",\"pid\":350100,\"level\":3},{\"id\":350124,\"name\":\"闽清县\",\"pid\":350100,\"level\":3},{\"id\":350125,\"name\":\"永泰县\",\"pid\":350100,\"level\":3},{\"id\":350128,\"name\":\"平潭县\",\"pid\":350100,\"level\":3},{\"id\":350181,\"name\":\"福清市\",\"pid\":350100,\"level\":3},{\"id\":350182,\"name\":\"长乐市\",\"pid\":350100,\"level\":3}]},{\"id\":350200,\"name\":\"厦门市\",\"pid\":350000,\"level\":2,\"children\":[{\"id\":350203,\"name\":\"思明区\",\"pid\":350200,\"level\":3},{\"id\":350205,\"name\":\"海沧区\",\"pid\":350200,\"level\":3},{\"id\":350206,\"name\":\"湖里区\",\"pid\":350200,\"level\":3},{\"id\":350211,\"name\":\"集美区\",\"pid\":350200,\"level\":3},{\"id\":350212,\"name\":\"同安区\",\"pid\":350200,\"level\":3},{\"id\":350213,\"name\":\"翔安区\",\"pid\":350200,\"level\":3}]},{\"id\":350300,\"name\":\"莆田市\",\"pid\":350000,\"level\":2,\"children\":[{\"id\":350302,\"name\":\"城厢区\",\"pid\":350300,\"level\":3},{\"id\":350303,\"name\":\"涵江区\",\"pid\":350300,\"level\":3},{\"id\":350304,\"name\":\"荔城区\",\"pid\":350300,\"level\":3},{\"id\":350305,\"name\":\"秀屿区\",\"pid\":350300,\"level\":3},{\"id\":350322,\"name\":\"仙游县\",\"pid\":350300,\"level\":3}]},{\"id\":350400,\"name\":\"三明市\",\"pid\":350000,\"level\":2,\"children\":[{\"id\":350402,\"name\":\"梅列区\",\"pid\":350400,\"level\":3},{\"id\":350403,\"name\":\"三元区\",\"pid\":350400,\"level\":3},{\"id\":350421,\"name\":\"明溪县\",\"pid\":350400,\"level\":3},{\"id\":350423,\"name\":\"清流县\",\"pid\":350400,\"level\":3},{\"id\":350424,\"name\":\"宁化县\",\"pid\":350400,\"level\":3},{\"id\":350425,\"name\":\"大田县\",\"pid\":350400,\"level\":3},{\"id\":350426,\"name\":\"尤溪县\",\"pid\":350400,\"level\":3},{\"id\":350427,\"name\":\"沙县\",\"pid\":350400,\"level\":3},{\"id\":350428,\"name\":\"将乐县\",\"pid\":350400,\"level\":3},{\"id\":350429,\"name\":\"泰宁县\",\"pid\":350400,\"level\":3},{\"id\":350430,\"name\":\"建宁县\",\"pid\":350400,\"level\":3},{\"id\":350481,\"name\":\"永安市\",\"pid\":350400,\"level\":3}]},{\"id\":350500,\"name\":\"泉州市\",\"pid\":350000,\"level\":2,\"children\":[{\"id\":350502,\"name\":\"鲤城区\",\"pid\":350500,\"level\":3},{\"id\":350503,\"name\":\"丰泽区\",\"pid\":350500,\"level\":3},{\"id\":350504,\"name\":\"洛江区\",\"pid\":350500,\"level\":3},{\"id\":350505,\"name\":\"泉港区\",\"pid\":350500,\"level\":3},{\"id\":350521,\"name\":\"惠安县\",\"pid\":350500,\"level\":3},{\"id\":350524,\"name\":\"安溪县\",\"pid\":350500,\"level\":3},{\"id\":350525,\"name\":\"永春县\",\"pid\":350500,\"level\":3},{\"id\":350526,\"name\":\"德化县\",\"pid\":350500,\"level\":3},{\"id\":350527,\"name\":\"金门县\",\"pid\":350500,\"level\":3},{\"id\":350581,\"name\":\"石狮市\",\"pid\":350500,\"level\":3},{\"id\":350582,\"name\":\"晋江市\",\"pid\":350500,\"level\":3},{\"id\":350583,\"name\":\"南安市\",\"pid\":350500,\"level\":3}]},{\"id\":350600,\"name\":\"漳州市\",\"pid\":350000,\"level\":2,\"children\":[{\"id\":350602,\"name\":\"芗城区\",\"pid\":350600,\"level\":3},{\"id\":350603,\"name\":\"龙文区\",\"pid\":350600,\"level\":3},{\"id\":350622,\"name\":\"云霄县\",\"pid\":350600,\"level\":3},{\"id\":350623,\"name\":\"漳浦县\",\"pid\":350600,\"level\":3},{\"id\":350624,\"name\":\"诏安县\",\"pid\":350600,\"level\":3},{\"id\":350625,\"name\":\"长泰县\",\"pid\":350600,\"level\":3},{\"id\":350626,\"name\":\"东山县\",\"pid\":350600,\"level\":3},{\"id\":350627,\"name\":\"南靖县\",\"pid\":350600,\"level\":3},{\"id\":350628,\"name\":\"平和县\",\"pid\":350600,\"level\":3},{\"id\":350629,\"name\":\"华安县\",\"pid\":350600,\"level\":3},{\"id\":350681,\"name\":\"龙海市\",\"pid\":350600,\"level\":3}]},{\"id\":350700,\"name\":\"南平市\",\"pid\":350000,\"level\":2,\"children\":[{\"id\":350702,\"name\":\"延平区\",\"pid\":350700,\"level\":3},{\"id\":350703,\"name\":\"建阳区\",\"pid\":350700,\"level\":3},{\"id\":350721,\"name\":\"顺昌县\",\"pid\":350700,\"level\":3},{\"id\":350722,\"name\":\"浦城县\",\"pid\":350700,\"level\":3},{\"id\":350723,\"name\":\"光泽县\",\"pid\":350700,\"level\":3},{\"id\":350724,\"name\":\"松溪县\",\"pid\":350700,\"level\":3},{\"id\":350725,\"name\":\"政和县\",\"pid\":350700,\"level\":3},{\"id\":350781,\"name\":\"邵武市\",\"pid\":350700,\"level\":3},{\"id\":350782,\"name\":\"武夷山市\",\"pid\":350700,\"level\":3},{\"id\":350783,\"name\":\"建瓯市\",\"pid\":350700,\"level\":3}]},{\"id\":350800,\"name\":\"龙岩市\",\"pid\":350000,\"level\":2,\"children\":[{\"id\":350802,\"name\":\"新罗区\",\"pid\":350800,\"level\":3},{\"id\":350821,\"name\":\"长汀县\",\"pid\":350800,\"level\":3},{\"id\":350822,\"name\":\"永定区\",\"pid\":350800,\"level\":3},{\"id\":350823,\"name\":\"上杭县\",\"pid\":350800,\"level\":3},{\"id\":350824,\"name\":\"武平县\",\"pid\":350800,\"level\":3},{\"id\":350825,\"name\":\"连城县\",\"pid\":350800,\"level\":3},{\"id\":350881,\"name\":\"漳平市\",\"pid\":350800,\"level\":3}]},{\"id\":350900,\"name\":\"宁德市\",\"pid\":350000,\"level\":2,\"children\":[{\"id\":350902,\"name\":\"蕉城区\",\"pid\":350900,\"level\":3},{\"id\":350921,\"name\":\"霞浦县\",\"pid\":350900,\"level\":3},{\"id\":350922,\"name\":\"古田县\",\"pid\":350900,\"level\":3},{\"id\":350923,\"name\":\"屏南县\",\"pid\":350900,\"level\":3},{\"id\":350924,\"name\":\"寿宁县\",\"pid\":350900,\"level\":3},{\"id\":350925,\"name\":\"周宁县\",\"pid\":350900,\"level\":3},{\"id\":350926,\"name\":\"柘荣县\",\"pid\":350900,\"level\":3},{\"id\":350981,\"name\":\"福安市\",\"pid\":350900,\"level\":3},{\"id\":350982,\"name\":\"福鼎市\",\"pid\":350900,\"level\":3}]}]},{\"id\":360000,\"name\":\"江西省\",\"pid\":100000,\"level\":1,\"children\":[{\"id\":360100,\"name\":\"南昌市\",\"pid\":360000,\"level\":2,\"children\":[{\"id\":360102,\"name\":\"东湖区\",\"pid\":360100,\"level\":3},{\"id\":360103,\"name\":\"西湖区\",\"pid\":360100,\"level\":3},{\"id\":360104,\"name\":\"青云谱区\",\"pid\":360100,\"level\":3},{\"id\":360105,\"name\":\"湾里区\",\"pid\":360100,\"level\":3},{\"id\":360111,\"name\":\"青山湖区\",\"pid\":360100,\"level\":3},{\"id\":360121,\"name\":\"南昌县\",\"pid\":360100,\"level\":3},{\"id\":360122,\"name\":\"新建县\",\"pid\":360100,\"level\":3},{\"id\":360123,\"name\":\"安义县\",\"pid\":360100,\"level\":3},{\"id\":360124,\"name\":\"进贤县\",\"pid\":360100,\"level\":3}]},{\"id\":360200,\"name\":\"景德镇市\",\"pid\":360000,\"level\":2,\"children\":[{\"id\":360202,\"name\":\"昌江区\",\"pid\":360200,\"level\":3},{\"id\":360203,\"name\":\"珠山区\",\"pid\":360200,\"level\":3},{\"id\":360222,\"name\":\"浮梁县\",\"pid\":360200,\"level\":3},{\"id\":360281,\"name\":\"乐平市\",\"pid\":360200,\"level\":3}]},{\"id\":360300,\"name\":\"萍乡市\",\"pid\":360000,\"level\":2,\"children\":[{\"id\":360302,\"name\":\"安源区\",\"pid\":360300,\"level\":3},{\"id\":360313,\"name\":\"湘东区\",\"pid\":360300,\"level\":3},{\"id\":360321,\"name\":\"莲花县\",\"pid\":360300,\"level\":3},{\"id\":360322,\"name\":\"上栗县\",\"pid\":360300,\"level\":3},{\"id\":360323,\"name\":\"芦溪县\",\"pid\":360300,\"level\":3}]},{\"id\":360400,\"name\":\"九江市\",\"pid\":360000,\"level\":2,\"children\":[{\"id\":360402,\"name\":\"庐山区\",\"pid\":360400,\"level\":3},{\"id\":360403,\"name\":\"浔阳区\",\"pid\":360400,\"level\":3},{\"id\":360421,\"name\":\"九江县\",\"pid\":360400,\"level\":3},{\"id\":360423,\"name\":\"武宁县\",\"pid\":360400,\"level\":3},{\"id\":360424,\"name\":\"修水县\",\"pid\":360400,\"level\":3},{\"id\":360425,\"name\":\"永修县\",\"pid\":360400,\"level\":3},{\"id\":360426,\"name\":\"德安县\",\"pid\":360400,\"level\":3},{\"id\":360427,\"name\":\"星子县\",\"pid\":360400,\"level\":3},{\"id\":360428,\"name\":\"都昌县\",\"pid\":360400,\"level\":3},{\"id\":360429,\"name\":\"湖口县\",\"pid\":360400,\"level\":3},{\"id\":360430,\"name\":\"彭泽县\",\"pid\":360400,\"level\":3},{\"id\":360481,\"name\":\"瑞昌市\",\"pid\":360400,\"level\":3},{\"id\":360482,\"name\":\"共青城市\",\"pid\":360400,\"level\":3}]},{\"id\":360500,\"name\":\"新余市\",\"pid\":360000,\"level\":2,\"children\":[{\"id\":360502,\"name\":\"渝水区\",\"pid\":360500,\"level\":3},{\"id\":360521,\"name\":\"分宜县\",\"pid\":360500,\"level\":3}]},{\"id\":360600,\"name\":\"鹰潭市\",\"pid\":360000,\"level\":2,\"children\":[{\"id\":360602,\"name\":\"月湖区\",\"pid\":360600,\"level\":3},{\"id\":360622,\"name\":\"余江县\",\"pid\":360600,\"level\":3},{\"id\":360681,\"name\":\"贵溪市\",\"pid\":360600,\"level\":3}]},{\"id\":360700,\"name\":\"赣州市\",\"pid\":360000,\"level\":2,\"children\":[{\"id\":360702,\"name\":\"章贡区\",\"pid\":360700,\"level\":3},{\"id\":360703,\"name\":\"南康区\",\"pid\":360700,\"level\":3},{\"id\":360721,\"name\":\"赣县\",\"pid\":360700,\"level\":3},{\"id\":360722,\"name\":\"信丰县\",\"pid\":360700,\"level\":3},{\"id\":360723,\"name\":\"大余县\",\"pid\":360700,\"level\":3},{\"id\":360724,\"name\":\"上犹县\",\"pid\":360700,\"level\":3},{\"id\":360725,\"name\":\"崇义县\",\"pid\":360700,\"level\":3},{\"id\":360726,\"name\":\"安远县\",\"pid\":360700,\"level\":3},{\"id\":360727,\"name\":\"龙南县\",\"pid\":360700,\"level\":3},{\"id\":360728,\"name\":\"定南县\",\"pid\":360700,\"level\":3},{\"id\":360729,\"name\":\"全南县\",\"pid\":360700,\"level\":3},{\"id\":360730,\"name\":\"宁都县\",\"pid\":360700,\"level\":3},{\"id\":360731,\"name\":\"于都县\",\"pid\":360700,\"level\":3},{\"id\":360732,\"name\":\"兴国县\",\"pid\":360700,\"level\":3},{\"id\":360733,\"name\":\"会昌县\",\"pid\":360700,\"level\":3},{\"id\":360734,\"name\":\"寻乌县\",\"pid\":360700,\"level\":3},{\"id\":360735,\"name\":\"石城县\",\"pid\":360700,\"level\":3},{\"id\":360781,\"name\":\"瑞金市\",\"pid\":360700,\"level\":3}]},{\"id\":360800,\"name\":\"吉安市\",\"pid\":360000,\"level\":2,\"children\":[{\"id\":360802,\"name\":\"吉州区\",\"pid\":360800,\"level\":3},{\"id\":360803,\"name\":\"青原区\",\"pid\":360800,\"level\":3},{\"id\":360821,\"name\":\"吉安县\",\"pid\":360800,\"level\":3},{\"id\":360822,\"name\":\"吉水县\",\"pid\":360800,\"level\":3},{\"id\":360823,\"name\":\"峡江县\",\"pid\":360800,\"level\":3},{\"id\":360824,\"name\":\"新干县\",\"pid\":360800,\"level\":3},{\"id\":360825,\"name\":\"永丰县\",\"pid\":360800,\"level\":3},{\"id\":360826,\"name\":\"泰和县\",\"pid\":360800,\"level\":3},{\"id\":360827,\"name\":\"遂川县\",\"pid\":360800,\"level\":3},{\"id\":360828,\"name\":\"万安县\",\"pid\":360800,\"level\":3},{\"id\":360829,\"name\":\"安福县\",\"pid\":360800,\"level\":3},{\"id\":360830,\"name\":\"永新县\",\"pid\":360800,\"level\":3},{\"id\":360881,\"name\":\"井冈山市\",\"pid\":360800,\"level\":3}]},{\"id\":360900,\"name\":\"宜春市\",\"pid\":360000,\"level\":2,\"children\":[{\"id\":360902,\"name\":\"袁州区\",\"pid\":360900,\"level\":3},{\"id\":360921,\"name\":\"奉新县\",\"pid\":360900,\"level\":3},{\"id\":360922,\"name\":\"万载县\",\"pid\":360900,\"level\":3},{\"id\":360923,\"name\":\"上高县\",\"pid\":360900,\"level\":3},{\"id\":360924,\"name\":\"宜丰县\",\"pid\":360900,\"level\":3},{\"id\":360925,\"name\":\"靖安县\",\"pid\":360900,\"level\":3},{\"id\":360926,\"name\":\"铜鼓县\",\"pid\":360900,\"level\":3},{\"id\":360981,\"name\":\"丰城市\",\"pid\":360900,\"level\":3},{\"id\":360982,\"name\":\"樟树市\",\"pid\":360900,\"level\":3},{\"id\":360983,\"name\":\"高安市\",\"pid\":360900,\"level\":3}]},{\"id\":361000,\"name\":\"抚州市\",\"pid\":360000,\"level\":2,\"children\":[{\"id\":361002,\"name\":\"临川区\",\"pid\":361000,\"level\":3},{\"id\":361021,\"name\":\"南城县\",\"pid\":361000,\"level\":3},{\"id\":361022,\"name\":\"黎川县\",\"pid\":361000,\"level\":3},{\"id\":361023,\"name\":\"南丰县\",\"pid\":361000,\"level\":3},{\"id\":361024,\"name\":\"崇仁县\",\"pid\":361000,\"level\":3},{\"id\":361025,\"name\":\"乐安县\",\"pid\":361000,\"level\":3},{\"id\":361026,\"name\":\"宜黄县\",\"pid\":361000,\"level\":3},{\"id\":361027,\"name\":\"金溪县\",\"pid\":361000,\"level\":3},{\"id\":361028,\"name\":\"资溪县\",\"pid\":361000,\"level\":3},{\"id\":361029,\"name\":\"东乡县\",\"pid\":361000,\"level\":3},{\"id\":361030,\"name\":\"广昌县\",\"pid\":361000,\"level\":3}]},{\"id\":361100,\"name\":\"上饶市\",\"pid\":360000,\"level\":2,\"children\":[{\"id\":361102,\"name\":\"信州区\",\"pid\":361100,\"level\":3},{\"id\":361121,\"name\":\"上饶县\",\"pid\":361100,\"level\":3},{\"id\":361122,\"name\":\"广丰县\",\"pid\":361100,\"level\":3},{\"id\":361123,\"name\":\"玉山县\",\"pid\":361100,\"level\":3},{\"id\":361124,\"name\":\"铅山县\",\"pid\":361100,\"level\":3},{\"id\":361125,\"name\":\"横峰县\",\"pid\":361100,\"level\":3},{\"id\":361126,\"name\":\"弋阳县\",\"pid\":361100,\"level\":3},{\"id\":361127,\"name\":\"余干县\",\"pid\":361100,\"level\":3},{\"id\":361128,\"name\":\"鄱阳县\",\"pid\":361100,\"level\":3},{\"id\":361129,\"name\":\"万年县\",\"pid\":361100,\"level\":3},{\"id\":361130,\"name\":\"婺源县\",\"pid\":361100,\"level\":3},{\"id\":361181,\"name\":\"德兴市\",\"pid\":361100,\"level\":3}]}]},{\"id\":370000,\"name\":\"山东省\",\"pid\":100000,\"level\":1,\"children\":[{\"id\":370100,\"name\":\"济南市\",\"pid\":370000,\"level\":2,\"children\":[{\"id\":370102,\"name\":\"历下区\",\"pid\":370100,\"level\":3},{\"id\":370103,\"name\":\"市中区\",\"pid\":370100,\"level\":3},{\"id\":370104,\"name\":\"槐荫区\",\"pid\":370100,\"level\":3},{\"id\":370105,\"name\":\"天桥区\",\"pid\":370100,\"level\":3},{\"id\":370112,\"name\":\"历城区\",\"pid\":370100,\"level\":3},{\"id\":370113,\"name\":\"长清区\",\"pid\":370100,\"level\":3},{\"id\":370124,\"name\":\"平阴县\",\"pid\":370100,\"level\":3},{\"id\":370125,\"name\":\"济阳县\",\"pid\":370100,\"level\":3},{\"id\":370126,\"name\":\"商河县\",\"pid\":370100,\"level\":3},{\"id\":370181,\"name\":\"章丘市\",\"pid\":370100,\"level\":3},{\"id\":371202,\"name\":\"莱芜区\",\"pid\":370100,\"level\":3},{\"id\":371203,\"name\":\"钢城区\",\"pid\":370100,\"level\":3}]},{\"id\":370200,\"name\":\"青岛市\",\"pid\":370000,\"level\":2,\"children\":[{\"id\":370202,\"name\":\"市南区\",\"pid\":370200,\"level\":3},{\"id\":370203,\"name\":\"市北区\",\"pid\":370200,\"level\":3},{\"id\":370211,\"name\":\"黄岛区\",\"pid\":370200,\"level\":3},{\"id\":370212,\"name\":\"崂山区\",\"pid\":370200,\"level\":3},{\"id\":370213,\"name\":\"李沧区\",\"pid\":370200,\"level\":3},{\"id\":370214,\"name\":\"城阳区\",\"pid\":370200,\"level\":3},{\"id\":370281,\"name\":\"胶州市\",\"pid\":370200,\"level\":3},{\"id\":370282,\"name\":\"即墨市\",\"pid\":370200,\"level\":3},{\"id\":370283,\"name\":\"平度市\",\"pid\":370200,\"level\":3},{\"id\":370285,\"name\":\"莱西市\",\"pid\":370200,\"level\":3},{\"id\":370286,\"name\":\"西海岸新区\",\"pid\":370200,\"level\":3}]},{\"id\":370300,\"name\":\"淄博市\",\"pid\":370000,\"level\":2,\"children\":[{\"id\":370302,\"name\":\"淄川区\",\"pid\":370300,\"level\":3},{\"id\":370303,\"name\":\"张店区\",\"pid\":370300,\"level\":3},{\"id\":370304,\"name\":\"博山区\",\"pid\":370300,\"level\":3},{\"id\":370305,\"name\":\"临淄区\",\"pid\":370300,\"level\":3},{\"id\":370306,\"name\":\"周村区\",\"pid\":370300,\"level\":3},{\"id\":370321,\"name\":\"桓台县\",\"pid\":370300,\"level\":3},{\"id\":370322,\"name\":\"高青县\",\"pid\":370300,\"level\":3},{\"id\":370323,\"name\":\"沂源县\",\"pid\":370300,\"level\":3}]},{\"id\":370400,\"name\":\"枣庄市\",\"pid\":370000,\"level\":2,\"children\":[{\"id\":370402,\"name\":\"市中区\",\"pid\":370400,\"level\":3},{\"id\":370403,\"name\":\"薛城区\",\"pid\":370400,\"level\":3},{\"id\":370404,\"name\":\"峄城区\",\"pid\":370400,\"level\":3},{\"id\":370405,\"name\":\"台儿庄区\",\"pid\":370400,\"level\":3},{\"id\":370406,\"name\":\"山亭区\",\"pid\":370400,\"level\":3},{\"id\":370481,\"name\":\"滕州市\",\"pid\":370400,\"level\":3}]},{\"id\":370500,\"name\":\"东营市\",\"pid\":370000,\"level\":2,\"children\":[{\"id\":370502,\"name\":\"东营区\",\"pid\":370500,\"level\":3},{\"id\":370503,\"name\":\"河口区\",\"pid\":370500,\"level\":3},{\"id\":370521,\"name\":\"垦利县\",\"pid\":370500,\"level\":3},{\"id\":370522,\"name\":\"利津县\",\"pid\":370500,\"level\":3},{\"id\":370523,\"name\":\"广饶县\",\"pid\":370500,\"level\":3}]},{\"id\":370600,\"name\":\"烟台市\",\"pid\":370000,\"level\":2,\"children\":[{\"id\":370602,\"name\":\"芝罘区\",\"pid\":370600,\"level\":3},{\"id\":370611,\"name\":\"福山区\",\"pid\":370600,\"level\":3},{\"id\":370612,\"name\":\"牟平区\",\"pid\":370600,\"level\":3},{\"id\":370613,\"name\":\"莱山区\",\"pid\":370600,\"level\":3},{\"id\":370634,\"name\":\"长岛县\",\"pid\":370600,\"level\":3},{\"id\":370681,\"name\":\"龙口市\",\"pid\":370600,\"level\":3},{\"id\":370682,\"name\":\"莱阳市\",\"pid\":370600,\"level\":3},{\"id\":370683,\"name\":\"莱州市\",\"pid\":370600,\"level\":3},{\"id\":370684,\"name\":\"蓬莱市\",\"pid\":370600,\"level\":3},{\"id\":370685,\"name\":\"招远市\",\"pid\":370600,\"level\":3},{\"id\":370686,\"name\":\"栖霞市\",\"pid\":370600,\"level\":3},{\"id\":370687,\"name\":\"海阳市\",\"pid\":370600,\"level\":3}]},{\"id\":370700,\"name\":\"潍坊市\",\"pid\":370000,\"level\":2,\"children\":[{\"id\":370702,\"name\":\"潍城区\",\"pid\":370700,\"level\":3},{\"id\":370703,\"name\":\"寒亭区\",\"pid\":370700,\"level\":3},{\"id\":370704,\"name\":\"坊子区\",\"pid\":370700,\"level\":3},{\"id\":370705,\"name\":\"奎文区\",\"pid\":370700,\"level\":3},{\"id\":370724,\"name\":\"临朐县\",\"pid\":370700,\"level\":3},{\"id\":370725,\"name\":\"昌乐县\",\"pid\":370700,\"level\":3},{\"id\":370781,\"name\":\"青州市\",\"pid\":370700,\"level\":3},{\"id\":370782,\"name\":\"诸城市\",\"pid\":370700,\"level\":3},{\"id\":370783,\"name\":\"寿光市\",\"pid\":370700,\"level\":3},{\"id\":370784,\"name\":\"安丘市\",\"pid\":370700,\"level\":3},{\"id\":370785,\"name\":\"高密市\",\"pid\":370700,\"level\":3},{\"id\":370786,\"name\":\"昌邑市\",\"pid\":370700,\"level\":3}]},{\"id\":370800,\"name\":\"济宁市\",\"pid\":370000,\"level\":2,\"children\":[{\"id\":370811,\"name\":\"任城区\",\"pid\":370800,\"level\":3},{\"id\":370812,\"name\":\"兖州区\",\"pid\":370800,\"level\":3},{\"id\":370826,\"name\":\"微山县\",\"pid\":370800,\"level\":3},{\"id\":370827,\"name\":\"鱼台县\",\"pid\":370800,\"level\":3},{\"id\":370828,\"name\":\"金乡县\",\"pid\":370800,\"level\":3},{\"id\":370829,\"name\":\"嘉祥县\",\"pid\":370800,\"level\":3},{\"id\":370830,\"name\":\"汶上县\",\"pid\":370800,\"level\":3},{\"id\":370831,\"name\":\"泗水县\",\"pid\":370800,\"level\":3},{\"id\":370832,\"name\":\"梁山县\",\"pid\":370800,\"level\":3},{\"id\":370881,\"name\":\"曲阜市\",\"pid\":370800,\"level\":3},{\"id\":370883,\"name\":\"邹城市\",\"pid\":370800,\"level\":3}]},{\"id\":370900,\"name\":\"泰安市\",\"pid\":370000,\"level\":2,\"children\":[{\"id\":370902,\"name\":\"泰山区\",\"pid\":370900,\"level\":3},{\"id\":370911,\"name\":\"岱岳区\",\"pid\":370900,\"level\":3},{\"id\":370921,\"name\":\"宁阳县\",\"pid\":370900,\"level\":3},{\"id\":370923,\"name\":\"东平县\",\"pid\":370900,\"level\":3},{\"id\":370982,\"name\":\"新泰市\",\"pid\":370900,\"level\":3},{\"id\":370983,\"name\":\"肥城市\",\"pid\":370900,\"level\":3}]},{\"id\":371000,\"name\":\"威海市\",\"pid\":370000,\"level\":2,\"children\":[{\"id\":371002,\"name\":\"环翠区\",\"pid\":371000,\"level\":3},{\"id\":371003,\"name\":\"文登区\",\"pid\":371000,\"level\":3},{\"id\":371082,\"name\":\"荣成市\",\"pid\":371000,\"level\":3},{\"id\":371083,\"name\":\"乳山市\",\"pid\":371000,\"level\":3}]},{\"id\":371100,\"name\":\"日照市\",\"pid\":370000,\"level\":2,\"children\":[{\"id\":371102,\"name\":\"东港区\",\"pid\":371100,\"level\":3},{\"id\":371103,\"name\":\"岚山区\",\"pid\":371100,\"level\":3},{\"id\":371121,\"name\":\"五莲县\",\"pid\":371100,\"level\":3},{\"id\":371122,\"name\":\"莒县\",\"pid\":371100,\"level\":3}]},{\"id\":371300,\"name\":\"临沂市\",\"pid\":370000,\"level\":2,\"children\":[{\"id\":371302,\"name\":\"兰山区\",\"pid\":371300,\"level\":3},{\"id\":371311,\"name\":\"罗庄区\",\"pid\":371300,\"level\":3},{\"id\":371312,\"name\":\"河东区\",\"pid\":371300,\"level\":3},{\"id\":371321,\"name\":\"沂南县\",\"pid\":371300,\"level\":3},{\"id\":371322,\"name\":\"郯城县\",\"pid\":371300,\"level\":3},{\"id\":371323,\"name\":\"沂水县\",\"pid\":371300,\"level\":3},{\"id\":371324,\"name\":\"兰陵县\",\"pid\":371300,\"level\":3},{\"id\":371325,\"name\":\"费县\",\"pid\":371300,\"level\":3},{\"id\":371326,\"name\":\"平邑县\",\"pid\":371300,\"level\":3},{\"id\":371327,\"name\":\"莒南县\",\"pid\":371300,\"level\":3},{\"id\":371328,\"name\":\"蒙阴县\",\"pid\":371300,\"level\":3},{\"id\":371329,\"name\":\"临沭县\",\"pid\":371300,\"level\":3}]},{\"id\":371400,\"name\":\"德州市\",\"pid\":370000,\"level\":2,\"children\":[{\"id\":371402,\"name\":\"德城区\",\"pid\":371400,\"level\":3},{\"id\":371403,\"name\":\"陵城区\",\"pid\":371400,\"level\":3},{\"id\":371422,\"name\":\"宁津县\",\"pid\":371400,\"level\":3},{\"id\":371423,\"name\":\"庆云县\",\"pid\":371400,\"level\":3},{\"id\":371424,\"name\":\"临邑县\",\"pid\":371400,\"level\":3},{\"id\":371425,\"name\":\"齐河县\",\"pid\":371400,\"level\":3},{\"id\":371426,\"name\":\"平原县\",\"pid\":371400,\"level\":3},{\"id\":371427,\"name\":\"夏津县\",\"pid\":371400,\"level\":3},{\"id\":371428,\"name\":\"武城县\",\"pid\":371400,\"level\":3},{\"id\":371481,\"name\":\"乐陵市\",\"pid\":371400,\"level\":3},{\"id\":371482,\"name\":\"禹城市\",\"pid\":371400,\"level\":3}]},{\"id\":371500,\"name\":\"聊城市\",\"pid\":370000,\"level\":2,\"children\":[{\"id\":371502,\"name\":\"东昌府区\",\"pid\":371500,\"level\":3},{\"id\":371521,\"name\":\"阳谷县\",\"pid\":371500,\"level\":3},{\"id\":371522,\"name\":\"莘县\",\"pid\":371500,\"level\":3},{\"id\":371523,\"name\":\"茌平县\",\"pid\":371500,\"level\":3},{\"id\":371524,\"name\":\"东阿县\",\"pid\":371500,\"level\":3},{\"id\":371525,\"name\":\"冠县\",\"pid\":371500,\"level\":3},{\"id\":371526,\"name\":\"高唐县\",\"pid\":371500,\"level\":3},{\"id\":371581,\"name\":\"临清市\",\"pid\":371500,\"level\":3}]},{\"id\":371600,\"name\":\"滨州市\",\"pid\":370000,\"level\":2,\"children\":[{\"id\":371602,\"name\":\"滨城区\",\"pid\":371600,\"level\":3},{\"id\":371603,\"name\":\"沾化区\",\"pid\":371600,\"level\":3},{\"id\":371621,\"name\":\"惠民县\",\"pid\":371600,\"level\":3},{\"id\":371622,\"name\":\"阳信县\",\"pid\":371600,\"level\":3},{\"id\":371623,\"name\":\"无棣县\",\"pid\":371600,\"level\":3},{\"id\":371625,\"name\":\"博兴县\",\"pid\":371600,\"level\":3},{\"id\":371626,\"name\":\"邹平县\",\"pid\":371600,\"level\":3},{\"id\":371627,\"name\":\"北海新区\",\"pid\":371600,\"level\":3}]},{\"id\":371700,\"name\":\"菏泽市\",\"pid\":370000,\"level\":2,\"children\":[{\"id\":371702,\"name\":\"牡丹区\",\"pid\":371700,\"level\":3},{\"id\":371721,\"name\":\"曹县\",\"pid\":371700,\"level\":3},{\"id\":371722,\"name\":\"单县\",\"pid\":371700,\"level\":3},{\"id\":371723,\"name\":\"成武县\",\"pid\":371700,\"level\":3},{\"id\":371724,\"name\":\"巨野县\",\"pid\":371700,\"level\":3},{\"id\":371725,\"name\":\"郓城县\",\"pid\":371700,\"level\":3},{\"id\":371726,\"name\":\"鄄城县\",\"pid\":371700,\"level\":3},{\"id\":371727,\"name\":\"定陶县\",\"pid\":371700,\"level\":3},{\"id\":371728,\"name\":\"东明县\",\"pid\":371700,\"level\":3}]}]},{\"id\":410000,\"name\":\"河南省\",\"pid\":100000,\"level\":1,\"children\":[{\"id\":410100,\"name\":\"郑州市\",\"pid\":410000,\"level\":2,\"children\":[{\"id\":410102,\"name\":\"中原区\",\"pid\":410100,\"level\":3},{\"id\":410103,\"name\":\"二七区\",\"pid\":410100,\"level\":3},{\"id\":410104,\"name\":\"管城回族区\",\"pid\":410100,\"level\":3},{\"id\":410105,\"name\":\"金水区\",\"pid\":410100,\"level\":3},{\"id\":410106,\"name\":\"上街区\",\"pid\":410100,\"level\":3},{\"id\":410108,\"name\":\"惠济区\",\"pid\":410100,\"level\":3},{\"id\":410122,\"name\":\"中牟县\",\"pid\":410100,\"level\":3},{\"id\":410181,\"name\":\"巩义市\",\"pid\":410100,\"level\":3},{\"id\":410182,\"name\":\"荥阳市\",\"pid\":410100,\"level\":3},{\"id\":410183,\"name\":\"新密市\",\"pid\":410100,\"level\":3},{\"id\":410184,\"name\":\"新郑市\",\"pid\":410100,\"level\":3},{\"id\":410185,\"name\":\"登封市\",\"pid\":410100,\"level\":3}]},{\"id\":410200,\"name\":\"开封市\",\"pid\":410000,\"level\":2,\"children\":[{\"id\":410202,\"name\":\"龙亭区\",\"pid\":410200,\"level\":3},{\"id\":410203,\"name\":\"顺河回族区\",\"pid\":410200,\"level\":3},{\"id\":410204,\"name\":\"鼓楼区\",\"pid\":410200,\"level\":3},{\"id\":410205,\"name\":\"禹王台区\",\"pid\":410200,\"level\":3},{\"id\":410212,\"name\":\"祥符区\",\"pid\":410200,\"level\":3},{\"id\":410221,\"name\":\"杞县\",\"pid\":410200,\"level\":3},{\"id\":410222,\"name\":\"通许县\",\"pid\":410200,\"level\":3},{\"id\":410223,\"name\":\"尉氏县\",\"pid\":410200,\"level\":3},{\"id\":410225,\"name\":\"兰考县\",\"pid\":410200,\"level\":3}]},{\"id\":410300,\"name\":\"洛阳市\",\"pid\":410000,\"level\":2,\"children\":[{\"id\":410302,\"name\":\"老城区\",\"pid\":410300,\"level\":3},{\"id\":410303,\"name\":\"西工区\",\"pid\":410300,\"level\":3},{\"id\":410304,\"name\":\"瀍河回族区\",\"pid\":410300,\"level\":3},{\"id\":410305,\"name\":\"涧西区\",\"pid\":410300,\"level\":3},{\"id\":410306,\"name\":\"吉利区\",\"pid\":410300,\"level\":3},{\"id\":410311,\"name\":\"洛龙区\",\"pid\":410300,\"level\":3},{\"id\":410322,\"name\":\"孟津县\",\"pid\":410300,\"level\":3},{\"id\":410323,\"name\":\"新安县\",\"pid\":410300,\"level\":3},{\"id\":410324,\"name\":\"栾川县\",\"pid\":410300,\"level\":3},{\"id\":410325,\"name\":\"嵩县\",\"pid\":410300,\"level\":3},{\"id\":410326,\"name\":\"汝阳县\",\"pid\":410300,\"level\":3},{\"id\":410327,\"name\":\"宜阳县\",\"pid\":410300,\"level\":3},{\"id\":410328,\"name\":\"洛宁县\",\"pid\":410300,\"level\":3},{\"id\":410329,\"name\":\"伊川县\",\"pid\":410300,\"level\":3},{\"id\":410381,\"name\":\"偃师市\",\"pid\":410300,\"level\":3}]},{\"id\":410400,\"name\":\"平顶山市\",\"pid\":410000,\"level\":2,\"children\":[{\"id\":410402,\"name\":\"新华区\",\"pid\":410400,\"level\":3},{\"id\":410403,\"name\":\"卫东区\",\"pid\":410400,\"level\":3},{\"id\":410404,\"name\":\"石龙区\",\"pid\":410400,\"level\":3},{\"id\":410411,\"name\":\"湛河区\",\"pid\":410400,\"level\":3},{\"id\":410421,\"name\":\"宝丰县\",\"pid\":410400,\"level\":3},{\"id\":410422,\"name\":\"叶县\",\"pid\":410400,\"level\":3},{\"id\":410423,\"name\":\"鲁山县\",\"pid\":410400,\"level\":3},{\"id\":410425,\"name\":\"郏县\",\"pid\":410400,\"level\":3},{\"id\":410481,\"name\":\"舞钢市\",\"pid\":410400,\"level\":3},{\"id\":410482,\"name\":\"汝州市\",\"pid\":410400,\"level\":3}]},{\"id\":410500,\"name\":\"安阳市\",\"pid\":410000,\"level\":2,\"children\":[{\"id\":410502,\"name\":\"文峰区\",\"pid\":410500,\"level\":3},{\"id\":410503,\"name\":\"北关区\",\"pid\":410500,\"level\":3},{\"id\":410505,\"name\":\"殷都区\",\"pid\":410500,\"level\":3},{\"id\":410506,\"name\":\"龙安区\",\"pid\":410500,\"level\":3},{\"id\":410522,\"name\":\"安阳县\",\"pid\":410500,\"level\":3},{\"id\":410523,\"name\":\"汤阴县\",\"pid\":410500,\"level\":3},{\"id\":410526,\"name\":\"滑县\",\"pid\":410500,\"level\":3},{\"id\":410527,\"name\":\"内黄县\",\"pid\":410500,\"level\":3},{\"id\":410581,\"name\":\"林州市\",\"pid\":410500,\"level\":3}]},{\"id\":410600,\"name\":\"鹤壁市\",\"pid\":410000,\"level\":2,\"children\":[{\"id\":410602,\"name\":\"鹤山区\",\"pid\":410600,\"level\":3},{\"id\":410603,\"name\":\"山城区\",\"pid\":410600,\"level\":3},{\"id\":410611,\"name\":\"淇滨区\",\"pid\":410600,\"level\":3},{\"id\":410621,\"name\":\"浚县\",\"pid\":410600,\"level\":3},{\"id\":410622,\"name\":\"淇县\",\"pid\":410600,\"level\":3}]},{\"id\":410700,\"name\":\"新乡市\",\"pid\":410000,\"level\":2,\"children\":[{\"id\":410702,\"name\":\"红旗区\",\"pid\":410700,\"level\":3},{\"id\":410703,\"name\":\"卫滨区\",\"pid\":410700,\"level\":3},{\"id\":410704,\"name\":\"凤泉区\",\"pid\":410700,\"level\":3},{\"id\":410711,\"name\":\"牧野区\",\"pid\":410700,\"level\":3},{\"id\":410721,\"name\":\"新乡县\",\"pid\":410700,\"level\":3},{\"id\":410724,\"name\":\"获嘉县\",\"pid\":410700,\"level\":3},{\"id\":410725,\"name\":\"原阳县\",\"pid\":410700,\"level\":3},{\"id\":410726,\"name\":\"延津县\",\"pid\":410700,\"level\":3},{\"id\":410727,\"name\":\"封丘县\",\"pid\":410700,\"level\":3},{\"id\":410728,\"name\":\"长垣县\",\"pid\":410700,\"level\":3},{\"id\":410781,\"name\":\"卫辉市\",\"pid\":410700,\"level\":3},{\"id\":410782,\"name\":\"辉县市\",\"pid\":410700,\"level\":3}]},{\"id\":410800,\"name\":\"焦作市\",\"pid\":410000,\"level\":2,\"children\":[{\"id\":410802,\"name\":\"解放区\",\"pid\":410800,\"level\":3},{\"id\":410803,\"name\":\"中站区\",\"pid\":410800,\"level\":3},{\"id\":410804,\"name\":\"马村区\",\"pid\":410800,\"level\":3},{\"id\":410811,\"name\":\"山阳区\",\"pid\":410800,\"level\":3},{\"id\":410821,\"name\":\"修武县\",\"pid\":410800,\"level\":3},{\"id\":410822,\"name\":\"博爱县\",\"pid\":410800,\"level\":3},{\"id\":410823,\"name\":\"武陟县\",\"pid\":410800,\"level\":3},{\"id\":410825,\"name\":\"温县\",\"pid\":410800,\"level\":3},{\"id\":410882,\"name\":\"沁阳市\",\"pid\":410800,\"level\":3},{\"id\":410883,\"name\":\"孟州市\",\"pid\":410800,\"level\":3}]},{\"id\":410900,\"name\":\"濮阳市\",\"pid\":410000,\"level\":2,\"children\":[{\"id\":410902,\"name\":\"华龙区\",\"pid\":410900,\"level\":3},{\"id\":410922,\"name\":\"清丰县\",\"pid\":410900,\"level\":3},{\"id\":410923,\"name\":\"南乐县\",\"pid\":410900,\"level\":3},{\"id\":410926,\"name\":\"范县\",\"pid\":410900,\"level\":3},{\"id\":410927,\"name\":\"台前县\",\"pid\":410900,\"level\":3},{\"id\":410928,\"name\":\"濮阳县\",\"pid\":410900,\"level\":3}]},{\"id\":411000,\"name\":\"许昌市\",\"pid\":410000,\"level\":2,\"children\":[{\"id\":411002,\"name\":\"魏都区\",\"pid\":411000,\"level\":3},{\"id\":411023,\"name\":\"许昌县\",\"pid\":411000,\"level\":3},{\"id\":411024,\"name\":\"鄢陵县\",\"pid\":411000,\"level\":3},{\"id\":411025,\"name\":\"襄城县\",\"pid\":411000,\"level\":3},{\"id\":411081,\"name\":\"禹州市\",\"pid\":411000,\"level\":3},{\"id\":411082,\"name\":\"长葛市\",\"pid\":411000,\"level\":3}]},{\"id\":411100,\"name\":\"漯河市\",\"pid\":410000,\"level\":2,\"children\":[{\"id\":411102,\"name\":\"源汇区\",\"pid\":411100,\"level\":3},{\"id\":411103,\"name\":\"郾城区\",\"pid\":411100,\"level\":3},{\"id\":411104,\"name\":\"召陵区\",\"pid\":411100,\"level\":3},{\"id\":411121,\"name\":\"舞阳县\",\"pid\":411100,\"level\":3},{\"id\":411122,\"name\":\"临颍县\",\"pid\":411100,\"level\":3}]},{\"id\":411200,\"name\":\"三门峡市\",\"pid\":410000,\"level\":2,\"children\":[{\"id\":411202,\"name\":\"湖滨区\",\"pid\":411200,\"level\":3},{\"id\":411221,\"name\":\"渑池县\",\"pid\":411200,\"level\":3},{\"id\":411222,\"name\":\"陕县\",\"pid\":411200,\"level\":3},{\"id\":411224,\"name\":\"卢氏县\",\"pid\":411200,\"level\":3},{\"id\":411281,\"name\":\"义马市\",\"pid\":411200,\"level\":3},{\"id\":411282,\"name\":\"灵宝市\",\"pid\":411200,\"level\":3}]},{\"id\":411300,\"name\":\"南阳市\",\"pid\":410000,\"level\":2,\"children\":[{\"id\":411302,\"name\":\"宛城区\",\"pid\":411300,\"level\":3},{\"id\":411303,\"name\":\"卧龙区\",\"pid\":411300,\"level\":3},{\"id\":411321,\"name\":\"南召县\",\"pid\":411300,\"level\":3},{\"id\":411322,\"name\":\"方城县\",\"pid\":411300,\"level\":3},{\"id\":411323,\"name\":\"西峡县\",\"pid\":411300,\"level\":3},{\"id\":411324,\"name\":\"镇平县\",\"pid\":411300,\"level\":3},{\"id\":411325,\"name\":\"内乡县\",\"pid\":411300,\"level\":3},{\"id\":411326,\"name\":\"淅川县\",\"pid\":411300,\"level\":3},{\"id\":411327,\"name\":\"社旗县\",\"pid\":411300,\"level\":3},{\"id\":411328,\"name\":\"唐河县\",\"pid\":411300,\"level\":3},{\"id\":411329,\"name\":\"新野县\",\"pid\":411300,\"level\":3},{\"id\":411330,\"name\":\"桐柏县\",\"pid\":411300,\"level\":3},{\"id\":411381,\"name\":\"邓州市\",\"pid\":411300,\"level\":3}]},{\"id\":411400,\"name\":\"商丘市\",\"pid\":410000,\"level\":2,\"children\":[{\"id\":411402,\"name\":\"梁园区\",\"pid\":411400,\"level\":3},{\"id\":411403,\"name\":\"睢阳区\",\"pid\":411400,\"level\":3},{\"id\":411421,\"name\":\"民权县\",\"pid\":411400,\"level\":3},{\"id\":411422,\"name\":\"睢县\",\"pid\":411400,\"level\":3},{\"id\":411423,\"name\":\"宁陵县\",\"pid\":411400,\"level\":3},{\"id\":411424,\"name\":\"柘城县\",\"pid\":411400,\"level\":3},{\"id\":411425,\"name\":\"虞城县\",\"pid\":411400,\"level\":3},{\"id\":411426,\"name\":\"夏邑县\",\"pid\":411400,\"level\":3},{\"id\":411481,\"name\":\"永城市\",\"pid\":411400,\"level\":3}]},{\"id\":411500,\"name\":\"信阳市\",\"pid\":410000,\"level\":2,\"children\":[{\"id\":411502,\"name\":\"浉河区\",\"pid\":411500,\"level\":3},{\"id\":411503,\"name\":\"平桥区\",\"pid\":411500,\"level\":3},{\"id\":411521,\"name\":\"罗山县\",\"pid\":411500,\"level\":3},{\"id\":411522,\"name\":\"光山县\",\"pid\":411500,\"level\":3},{\"id\":411523,\"name\":\"新县\",\"pid\":411500,\"level\":3},{\"id\":411524,\"name\":\"商城县\",\"pid\":411500,\"level\":3},{\"id\":411525,\"name\":\"固始县\",\"pid\":411500,\"level\":3},{\"id\":411526,\"name\":\"潢川县\",\"pid\":411500,\"level\":3},{\"id\":411527,\"name\":\"淮滨县\",\"pid\":411500,\"level\":3},{\"id\":411528,\"name\":\"息县\",\"pid\":411500,\"level\":3}]},{\"id\":411600,\"name\":\"周口市\",\"pid\":410000,\"level\":2,\"children\":[{\"id\":411602,\"name\":\"川汇区\",\"pid\":411600,\"level\":3},{\"id\":411621,\"name\":\"扶沟县\",\"pid\":411600,\"level\":3},{\"id\":411622,\"name\":\"西华县\",\"pid\":411600,\"level\":3},{\"id\":411623,\"name\":\"商水县\",\"pid\":411600,\"level\":3},{\"id\":411624,\"name\":\"沈丘县\",\"pid\":411600,\"level\":3},{\"id\":411625,\"name\":\"郸城县\",\"pid\":411600,\"level\":3},{\"id\":411626,\"name\":\"淮阳县\",\"pid\":411600,\"level\":3},{\"id\":411627,\"name\":\"太康县\",\"pid\":411600,\"level\":3},{\"id\":411628,\"name\":\"鹿邑县\",\"pid\":411600,\"level\":3},{\"id\":411681,\"name\":\"项城市\",\"pid\":411600,\"level\":3}]},{\"id\":411700,\"name\":\"驻马店市\",\"pid\":410000,\"level\":2,\"children\":[{\"id\":411702,\"name\":\"驿城区\",\"pid\":411700,\"level\":3},{\"id\":411721,\"name\":\"西平县\",\"pid\":411700,\"level\":3},{\"id\":411722,\"name\":\"上蔡县\",\"pid\":411700,\"level\":3},{\"id\":411723,\"name\":\"平舆县\",\"pid\":411700,\"level\":3},{\"id\":411724,\"name\":\"正阳县\",\"pid\":411700,\"level\":3},{\"id\":411725,\"name\":\"确山县\",\"pid\":411700,\"level\":3},{\"id\":411726,\"name\":\"泌阳县\",\"pid\":411700,\"level\":3},{\"id\":411727,\"name\":\"汝南县\",\"pid\":411700,\"level\":3},{\"id\":411728,\"name\":\"遂平县\",\"pid\":411700,\"level\":3},{\"id\":411729,\"name\":\"新蔡县\",\"pid\":411700,\"level\":3}]},{\"id\":419000,\"name\":\"直辖县级\",\"pid\":410000,\"level\":2,\"children\":[{\"id\":419001,\"name\":\"济源市\",\"pid\":419000,\"level\":3}]}]},{\"id\":420000,\"name\":\"湖北省\",\"pid\":100000,\"level\":1,\"children\":[{\"id\":420100,\"name\":\"武汉市\",\"pid\":420000,\"level\":2,\"children\":[{\"id\":420102,\"name\":\"江岸区\",\"pid\":420100,\"level\":3},{\"id\":420103,\"name\":\"江汉区\",\"pid\":420100,\"level\":3},{\"id\":420104,\"name\":\"硚口区\",\"pid\":420100,\"level\":3},{\"id\":420105,\"name\":\"汉阳区\",\"pid\":420100,\"level\":3},{\"id\":420106,\"name\":\"武昌区\",\"pid\":420100,\"level\":3},{\"id\":420107,\"name\":\"青山区\",\"pid\":420100,\"level\":3},{\"id\":420111,\"name\":\"洪山区\",\"pid\":420100,\"level\":3},{\"id\":420112,\"name\":\"东西湖区\",\"pid\":420100,\"level\":3},{\"id\":420113,\"name\":\"汉南区\",\"pid\":420100,\"level\":3},{\"id\":420114,\"name\":\"蔡甸区\",\"pid\":420100,\"level\":3},{\"id\":420115,\"name\":\"江夏区\",\"pid\":420100,\"level\":3},{\"id\":420116,\"name\":\"黄陂区\",\"pid\":420100,\"level\":3},{\"id\":420117,\"name\":\"新洲区\",\"pid\":420100,\"level\":3}]},{\"id\":420200,\"name\":\"黄石市\",\"pid\":420000,\"level\":2,\"children\":[{\"id\":420202,\"name\":\"黄石港区\",\"pid\":420200,\"level\":3},{\"id\":420203,\"name\":\"西塞山区\",\"pid\":420200,\"level\":3},{\"id\":420204,\"name\":\"下陆区\",\"pid\":420200,\"level\":3},{\"id\":420205,\"name\":\"铁山区\",\"pid\":420200,\"level\":3},{\"id\":420222,\"name\":\"阳新县\",\"pid\":420200,\"level\":3},{\"id\":420281,\"name\":\"大冶市\",\"pid\":420200,\"level\":3}]},{\"id\":420300,\"name\":\"十堰市\",\"pid\":420000,\"level\":2,\"children\":[{\"id\":420302,\"name\":\"茅箭区\",\"pid\":420300,\"level\":3},{\"id\":420303,\"name\":\"张湾区\",\"pid\":420300,\"level\":3},{\"id\":420304,\"name\":\"郧阳区\",\"pid\":420300,\"level\":3},{\"id\":420322,\"name\":\"郧西县\",\"pid\":420300,\"level\":3},{\"id\":420323,\"name\":\"竹山县\",\"pid\":420300,\"level\":3},{\"id\":420324,\"name\":\"竹溪县\",\"pid\":420300,\"level\":3},{\"id\":420325,\"name\":\"房县\",\"pid\":420300,\"level\":3},{\"id\":420381,\"name\":\"丹江口市\",\"pid\":420300,\"level\":3}]},{\"id\":420500,\"name\":\"宜昌市\",\"pid\":420000,\"level\":2,\"children\":[{\"id\":420502,\"name\":\"西陵区\",\"pid\":420500,\"level\":3},{\"id\":420503,\"name\":\"伍家岗区\",\"pid\":420500,\"level\":3},{\"id\":420504,\"name\":\"点军区\",\"pid\":420500,\"level\":3},{\"id\":420505,\"name\":\"猇亭区\",\"pid\":420500,\"level\":3},{\"id\":420506,\"name\":\"夷陵区\",\"pid\":420500,\"level\":3},{\"id\":420525,\"name\":\"远安县\",\"pid\":420500,\"level\":3},{\"id\":420526,\"name\":\"兴山县\",\"pid\":420500,\"level\":3},{\"id\":420527,\"name\":\"秭归县\",\"pid\":420500,\"level\":3},{\"id\":420528,\"name\":\"长阳土家族自治县\",\"pid\":420500,\"level\":3},{\"id\":420529,\"name\":\"五峰土家族自治县\",\"pid\":420500,\"level\":3},{\"id\":420581,\"name\":\"宜都市\",\"pid\":420500,\"level\":3},{\"id\":420582,\"name\":\"当阳市\",\"pid\":420500,\"level\":3},{\"id\":420583,\"name\":\"枝江市\",\"pid\":420500,\"level\":3}]},{\"id\":420600,\"name\":\"襄阳市\",\"pid\":420000,\"level\":2,\"children\":[{\"id\":420602,\"name\":\"襄城区\",\"pid\":420600,\"level\":3},{\"id\":420606,\"name\":\"樊城区\",\"pid\":420600,\"level\":3},{\"id\":420607,\"name\":\"襄州区\",\"pid\":420600,\"level\":3},{\"id\":420624,\"name\":\"南漳县\",\"pid\":420600,\"level\":3},{\"id\":420625,\"name\":\"谷城县\",\"pid\":420600,\"level\":3},{\"id\":420626,\"name\":\"保康县\",\"pid\":420600,\"level\":3},{\"id\":420682,\"name\":\"老河口市\",\"pid\":420600,\"level\":3},{\"id\":420683,\"name\":\"枣阳市\",\"pid\":420600,\"level\":3},{\"id\":420684,\"name\":\"宜城市\",\"pid\":420600,\"level\":3}]},{\"id\":420700,\"name\":\"鄂州市\",\"pid\":420000,\"level\":2,\"children\":[{\"id\":420702,\"name\":\"梁子湖区\",\"pid\":420700,\"level\":3},{\"id\":420703,\"name\":\"华容区\",\"pid\":420700,\"level\":3},{\"id\":420704,\"name\":\"鄂城区\",\"pid\":420700,\"level\":3}]},{\"id\":420800,\"name\":\"荆门市\",\"pid\":420000,\"level\":2,\"children\":[{\"id\":420802,\"name\":\"东宝区\",\"pid\":420800,\"level\":3},{\"id\":420804,\"name\":\"掇刀区\",\"pid\":420800,\"level\":3},{\"id\":420821,\"name\":\"京山县\",\"pid\":420800,\"level\":3},{\"id\":420822,\"name\":\"沙洋县\",\"pid\":420800,\"level\":3},{\"id\":420881,\"name\":\"钟祥市\",\"pid\":420800,\"level\":3}]},{\"id\":420900,\"name\":\"孝感市\",\"pid\":420000,\"level\":2,\"children\":[{\"id\":420902,\"name\":\"孝南区\",\"pid\":420900,\"level\":3},{\"id\":420921,\"name\":\"孝昌县\",\"pid\":420900,\"level\":3},{\"id\":420922,\"name\":\"大悟县\",\"pid\":420900,\"level\":3},{\"id\":420923,\"name\":\"云梦县\",\"pid\":420900,\"level\":3},{\"id\":420981,\"name\":\"应城市\",\"pid\":420900,\"level\":3},{\"id\":420982,\"name\":\"安陆市\",\"pid\":420900,\"level\":3},{\"id\":420984,\"name\":\"汉川市\",\"pid\":420900,\"level\":3}]},{\"id\":421000,\"name\":\"荆州市\",\"pid\":420000,\"level\":2,\"children\":[{\"id\":421002,\"name\":\"沙市区\",\"pid\":421000,\"level\":3},{\"id\":421003,\"name\":\"荆州区\",\"pid\":421000,\"level\":3},{\"id\":421022,\"name\":\"公安县\",\"pid\":421000,\"level\":3},{\"id\":421023,\"name\":\"监利县\",\"pid\":421000,\"level\":3},{\"id\":421024,\"name\":\"江陵县\",\"pid\":421000,\"level\":3},{\"id\":421081,\"name\":\"石首市\",\"pid\":421000,\"level\":3},{\"id\":421083,\"name\":\"洪湖市\",\"pid\":421000,\"level\":3},{\"id\":421087,\"name\":\"松滋市\",\"pid\":421000,\"level\":3}]},{\"id\":421100,\"name\":\"黄冈市\",\"pid\":420000,\"level\":2,\"children\":[{\"id\":421102,\"name\":\"黄州区\",\"pid\":421100,\"level\":3},{\"id\":421121,\"name\":\"团风县\",\"pid\":421100,\"level\":3},{\"id\":421122,\"name\":\"红安县\",\"pid\":421100,\"level\":3},{\"id\":421123,\"name\":\"罗田县\",\"pid\":421100,\"level\":3},{\"id\":421124,\"name\":\"英山县\",\"pid\":421100,\"level\":3},{\"id\":421125,\"name\":\"浠水县\",\"pid\":421100,\"level\":3},{\"id\":421126,\"name\":\"蕲春县\",\"pid\":421100,\"level\":3},{\"id\":421127,\"name\":\"黄梅县\",\"pid\":421100,\"level\":3},{\"id\":421181,\"name\":\"麻城市\",\"pid\":421100,\"level\":3},{\"id\":421182,\"name\":\"武穴市\",\"pid\":421100,\"level\":3}]},{\"id\":421200,\"name\":\"咸宁市\",\"pid\":420000,\"level\":2,\"children\":[{\"id\":421202,\"name\":\"咸安区\",\"pid\":421200,\"level\":3},{\"id\":421221,\"name\":\"嘉鱼县\",\"pid\":421200,\"level\":3},{\"id\":421222,\"name\":\"通城县\",\"pid\":421200,\"level\":3},{\"id\":421223,\"name\":\"崇阳县\",\"pid\":421200,\"level\":3},{\"id\":421224,\"name\":\"通山县\",\"pid\":421200,\"level\":3},{\"id\":421281,\"name\":\"赤壁市\",\"pid\":421200,\"level\":3}]},{\"id\":421300,\"name\":\"随州市\",\"pid\":420000,\"level\":2,\"children\":[{\"id\":421303,\"name\":\"曾都区\",\"pid\":421300,\"level\":3},{\"id\":421321,\"name\":\"随县\",\"pid\":421300,\"level\":3},{\"id\":421381,\"name\":\"广水市\",\"pid\":421300,\"level\":3}]},{\"id\":422800,\"name\":\"恩施土家族苗族自治州\",\"pid\":420000,\"level\":2,\"children\":[{\"id\":422801,\"name\":\"恩施市\",\"pid\":422800,\"level\":3},{\"id\":422802,\"name\":\"利川市\",\"pid\":422800,\"level\":3},{\"id\":422822,\"name\":\"建始县\",\"pid\":422800,\"level\":3},{\"id\":422823,\"name\":\"巴东县\",\"pid\":422800,\"level\":3},{\"id\":422825,\"name\":\"宣恩县\",\"pid\":422800,\"level\":3},{\"id\":422826,\"name\":\"咸丰县\",\"pid\":422800,\"level\":3},{\"id\":422827,\"name\":\"来凤县\",\"pid\":422800,\"level\":3},{\"id\":422828,\"name\":\"鹤峰县\",\"pid\":422800,\"level\":3}]},{\"id\":429000,\"name\":\"直辖县级\",\"pid\":420000,\"level\":2,\"children\":[{\"id\":429004,\"name\":\"仙桃市\",\"pid\":429000,\"level\":3},{\"id\":429005,\"name\":\"潜江市\",\"pid\":429000,\"level\":3},{\"id\":429006,\"name\":\"天门市\",\"pid\":429000,\"level\":3},{\"id\":429021,\"name\":\"神农架林区\",\"pid\":429000,\"level\":3}]}]},{\"id\":430000,\"name\":\"湖南省\",\"pid\":100000,\"level\":1,\"children\":[{\"id\":430100,\"name\":\"长沙市\",\"pid\":430000,\"level\":2,\"children\":[{\"id\":430102,\"name\":\"芙蓉区\",\"pid\":430100,\"level\":3},{\"id\":430103,\"name\":\"天心区\",\"pid\":430100,\"level\":3},{\"id\":430104,\"name\":\"岳麓区\",\"pid\":430100,\"level\":3},{\"id\":430105,\"name\":\"开福区\",\"pid\":430100,\"level\":3},{\"id\":430111,\"name\":\"雨花区\",\"pid\":430100,\"level\":3},{\"id\":430112,\"name\":\"望城区\",\"pid\":430100,\"level\":3},{\"id\":430121,\"name\":\"长沙县\",\"pid\":430100,\"level\":3},{\"id\":430124,\"name\":\"宁乡县\",\"pid\":430100,\"level\":3},{\"id\":430181,\"name\":\"浏阳市\",\"pid\":430100,\"level\":3}]},{\"id\":430200,\"name\":\"株洲市\",\"pid\":430000,\"level\":2,\"children\":[{\"id\":430202,\"name\":\"荷塘区\",\"pid\":430200,\"level\":3},{\"id\":430203,\"name\":\"芦淞区\",\"pid\":430200,\"level\":3},{\"id\":430204,\"name\":\"石峰区\",\"pid\":430200,\"level\":3},{\"id\":430211,\"name\":\"天元区\",\"pid\":430200,\"level\":3},{\"id\":430221,\"name\":\"株洲县\",\"pid\":430200,\"level\":3},{\"id\":430223,\"name\":\"攸县\",\"pid\":430200,\"level\":3},{\"id\":430224,\"name\":\"茶陵县\",\"pid\":430200,\"level\":3},{\"id\":430225,\"name\":\"炎陵县\",\"pid\":430200,\"level\":3},{\"id\":430281,\"name\":\"醴陵市\",\"pid\":430200,\"level\":3}]},{\"id\":430300,\"name\":\"湘潭市\",\"pid\":430000,\"level\":2,\"children\":[{\"id\":430302,\"name\":\"雨湖区\",\"pid\":430300,\"level\":3},{\"id\":430304,\"name\":\"岳塘区\",\"pid\":430300,\"level\":3},{\"id\":430321,\"name\":\"湘潭县\",\"pid\":430300,\"level\":3},{\"id\":430381,\"name\":\"湘乡市\",\"pid\":430300,\"level\":3},{\"id\":430382,\"name\":\"韶山市\",\"pid\":430300,\"level\":3}]},{\"id\":430400,\"name\":\"衡阳市\",\"pid\":430000,\"level\":2,\"children\":[{\"id\":430405,\"name\":\"珠晖区\",\"pid\":430400,\"level\":3},{\"id\":430406,\"name\":\"雁峰区\",\"pid\":430400,\"level\":3},{\"id\":430407,\"name\":\"石鼓区\",\"pid\":430400,\"level\":3},{\"id\":430408,\"name\":\"蒸湘区\",\"pid\":430400,\"level\":3},{\"id\":430412,\"name\":\"南岳区\",\"pid\":430400,\"level\":3},{\"id\":430421,\"name\":\"衡阳县\",\"pid\":430400,\"level\":3},{\"id\":430422,\"name\":\"衡南县\",\"pid\":430400,\"level\":3},{\"id\":430423,\"name\":\"衡山县\",\"pid\":430400,\"level\":3},{\"id\":430424,\"name\":\"衡东县\",\"pid\":430400,\"level\":3},{\"id\":430426,\"name\":\"祁东县\",\"pid\":430400,\"level\":3},{\"id\":430481,\"name\":\"耒阳市\",\"pid\":430400,\"level\":3},{\"id\":430482,\"name\":\"常宁市\",\"pid\":430400,\"level\":3}]},{\"id\":430500,\"name\":\"邵阳市\",\"pid\":430000,\"level\":2,\"children\":[{\"id\":430502,\"name\":\"双清区\",\"pid\":430500,\"level\":3},{\"id\":430503,\"name\":\"大祥区\",\"pid\":430500,\"level\":3},{\"id\":430511,\"name\":\"北塔区\",\"pid\":430500,\"level\":3},{\"id\":430521,\"name\":\"邵东县\",\"pid\":430500,\"level\":3},{\"id\":430522,\"name\":\"新邵县\",\"pid\":430500,\"level\":3},{\"id\":430523,\"name\":\"邵阳县\",\"pid\":430500,\"level\":3},{\"id\":430524,\"name\":\"隆回县\",\"pid\":430500,\"level\":3},{\"id\":430525,\"name\":\"洞口县\",\"pid\":430500,\"level\":3},{\"id\":430527,\"name\":\"绥宁县\",\"pid\":430500,\"level\":3},{\"id\":430528,\"name\":\"新宁县\",\"pid\":430500,\"level\":3},{\"id\":430529,\"name\":\"城步苗族自治县\",\"pid\":430500,\"level\":3},{\"id\":430581,\"name\":\"武冈市\",\"pid\":430500,\"level\":3}]},{\"id\":430600,\"name\":\"岳阳市\",\"pid\":430000,\"level\":2,\"children\":[{\"id\":430602,\"name\":\"岳阳楼区\",\"pid\":430600,\"level\":3},{\"id\":430603,\"name\":\"云溪区\",\"pid\":430600,\"level\":3},{\"id\":430611,\"name\":\"君山区\",\"pid\":430600,\"level\":3},{\"id\":430621,\"name\":\"岳阳县\",\"pid\":430600,\"level\":3},{\"id\":430623,\"name\":\"华容县\",\"pid\":430600,\"level\":3},{\"id\":430624,\"name\":\"湘阴县\",\"pid\":430600,\"level\":3},{\"id\":430626,\"name\":\"平江县\",\"pid\":430600,\"level\":3},{\"id\":430681,\"name\":\"汨罗市\",\"pid\":430600,\"level\":3},{\"id\":430682,\"name\":\"临湘市\",\"pid\":430600,\"level\":3}]},{\"id\":430700,\"name\":\"常德市\",\"pid\":430000,\"level\":2,\"children\":[{\"id\":430702,\"name\":\"武陵区\",\"pid\":430700,\"level\":3},{\"id\":430703,\"name\":\"鼎城区\",\"pid\":430700,\"level\":3},{\"id\":430721,\"name\":\"安乡县\",\"pid\":430700,\"level\":3},{\"id\":430722,\"name\":\"汉寿县\",\"pid\":430700,\"level\":3},{\"id\":430723,\"name\":\"澧县\",\"pid\":430700,\"level\":3},{\"id\":430724,\"name\":\"临澧县\",\"pid\":430700,\"level\":3},{\"id\":430725,\"name\":\"桃源县\",\"pid\":430700,\"level\":3},{\"id\":430726,\"name\":\"石门县\",\"pid\":430700,\"level\":3},{\"id\":430781,\"name\":\"津市市\",\"pid\":430700,\"level\":3}]},{\"id\":430800,\"name\":\"张家界市\",\"pid\":430000,\"level\":2,\"children\":[{\"id\":430802,\"name\":\"永定区\",\"pid\":430800,\"level\":3},{\"id\":430811,\"name\":\"武陵源区\",\"pid\":430800,\"level\":3},{\"id\":430821,\"name\":\"慈利县\",\"pid\":430800,\"level\":3},{\"id\":430822,\"name\":\"桑植县\",\"pid\":430800,\"level\":3}]},{\"id\":430900,\"name\":\"益阳市\",\"pid\":430000,\"level\":2,\"children\":[{\"id\":430902,\"name\":\"资阳区\",\"pid\":430900,\"level\":3},{\"id\":430903,\"name\":\"赫山区\",\"pid\":430900,\"level\":3},{\"id\":430921,\"name\":\"南县\",\"pid\":430900,\"level\":3},{\"id\":430922,\"name\":\"桃江县\",\"pid\":430900,\"level\":3},{\"id\":430923,\"name\":\"安化县\",\"pid\":430900,\"level\":3},{\"id\":430981,\"name\":\"沅江市\",\"pid\":430900,\"level\":3}]},{\"id\":431000,\"name\":\"郴州市\",\"pid\":430000,\"level\":2,\"children\":[{\"id\":431002,\"name\":\"北湖区\",\"pid\":431000,\"level\":3},{\"id\":431003,\"name\":\"苏仙区\",\"pid\":431000,\"level\":3},{\"id\":431021,\"name\":\"桂阳县\",\"pid\":431000,\"level\":3},{\"id\":431022,\"name\":\"宜章县\",\"pid\":431000,\"level\":3},{\"id\":431023,\"name\":\"永兴县\",\"pid\":431000,\"level\":3},{\"id\":431024,\"name\":\"嘉禾县\",\"pid\":431000,\"level\":3},{\"id\":431025,\"name\":\"临武县\",\"pid\":431000,\"level\":3},{\"id\":431026,\"name\":\"汝城县\",\"pid\":431000,\"level\":3},{\"id\":431027,\"name\":\"桂东县\",\"pid\":431000,\"level\":3},{\"id\":431028,\"name\":\"安仁县\",\"pid\":431000,\"level\":3},{\"id\":431081,\"name\":\"资兴市\",\"pid\":431000,\"level\":3}]},{\"id\":431100,\"name\":\"永州市\",\"pid\":430000,\"level\":2,\"children\":[{\"id\":431102,\"name\":\"零陵区\",\"pid\":431100,\"level\":3},{\"id\":431103,\"name\":\"冷水滩区\",\"pid\":431100,\"level\":3},{\"id\":431121,\"name\":\"祁阳县\",\"pid\":431100,\"level\":3},{\"id\":431122,\"name\":\"东安县\",\"pid\":431100,\"level\":3},{\"id\":431123,\"name\":\"双牌县\",\"pid\":431100,\"level\":3},{\"id\":431124,\"name\":\"道县\",\"pid\":431100,\"level\":3},{\"id\":431125,\"name\":\"江永县\",\"pid\":431100,\"level\":3},{\"id\":431126,\"name\":\"宁远县\",\"pid\":431100,\"level\":3},{\"id\":431127,\"name\":\"蓝山县\",\"pid\":431100,\"level\":3},{\"id\":431128,\"name\":\"新田县\",\"pid\":431100,\"level\":3},{\"id\":431129,\"name\":\"江华瑶族自治县\",\"pid\":431100,\"level\":3}]},{\"id\":431200,\"name\":\"怀化市\",\"pid\":430000,\"level\":2,\"children\":[{\"id\":431202,\"name\":\"鹤城区\",\"pid\":431200,\"level\":3},{\"id\":431221,\"name\":\"中方县\",\"pid\":431200,\"level\":3},{\"id\":431222,\"name\":\"沅陵县\",\"pid\":431200,\"level\":3},{\"id\":431223,\"name\":\"辰溪县\",\"pid\":431200,\"level\":3},{\"id\":431224,\"name\":\"溆浦县\",\"pid\":431200,\"level\":3},{\"id\":431225,\"name\":\"会同县\",\"pid\":431200,\"level\":3},{\"id\":431226,\"name\":\"麻阳苗族自治县\",\"pid\":431200,\"level\":3},{\"id\":431227,\"name\":\"新晃侗族自治县\",\"pid\":431200,\"level\":3},{\"id\":431228,\"name\":\"芷江侗族自治县\",\"pid\":431200,\"level\":3},{\"id\":431229,\"name\":\"靖州苗族侗族自治县\",\"pid\":431200,\"level\":3},{\"id\":431230,\"name\":\"通道侗族自治县\",\"pid\":431200,\"level\":3},{\"id\":431281,\"name\":\"洪江市\",\"pid\":431200,\"level\":3}]},{\"id\":431300,\"name\":\"娄底市\",\"pid\":430000,\"level\":2,\"children\":[{\"id\":431302,\"name\":\"娄星区\",\"pid\":431300,\"level\":3},{\"id\":431321,\"name\":\"双峰县\",\"pid\":431300,\"level\":3},{\"id\":431322,\"name\":\"新化县\",\"pid\":431300,\"level\":3},{\"id\":431381,\"name\":\"冷水江市\",\"pid\":431300,\"level\":3},{\"id\":431382,\"name\":\"涟源市\",\"pid\":431300,\"level\":3}]},{\"id\":433100,\"name\":\"湘西土家族苗族自治州\",\"pid\":430000,\"level\":2,\"children\":[{\"id\":433101,\"name\":\"吉首市\",\"pid\":433100,\"level\":3},{\"id\":433122,\"name\":\"泸溪县\",\"pid\":433100,\"level\":3},{\"id\":433123,\"name\":\"凤凰县\",\"pid\":433100,\"level\":3},{\"id\":433124,\"name\":\"花垣县\",\"pid\":433100,\"level\":3},{\"id\":433125,\"name\":\"保靖县\",\"pid\":433100,\"level\":3},{\"id\":433126,\"name\":\"古丈县\",\"pid\":433100,\"level\":3},{\"id\":433127,\"name\":\"永顺县\",\"pid\":433100,\"level\":3},{\"id\":433130,\"name\":\"龙山县\",\"pid\":433100,\"level\":3}]}]},{\"id\":440000,\"name\":\"广东省\",\"pid\":100000,\"level\":1,\"children\":[{\"id\":440100,\"name\":\"广州市\",\"pid\":440000,\"level\":2,\"children\":[{\"id\":440103,\"name\":\"荔湾区\",\"pid\":440100,\"level\":3},{\"id\":440104,\"name\":\"越秀区\",\"pid\":440100,\"level\":3},{\"id\":440105,\"name\":\"海珠区\",\"pid\":440100,\"level\":3},{\"id\":440106,\"name\":\"天河区\",\"pid\":440100,\"level\":3},{\"id\":440111,\"name\":\"白云区\",\"pid\":440100,\"level\":3},{\"id\":440112,\"name\":\"黄埔区\",\"pid\":440100,\"level\":3},{\"id\":440113,\"name\":\"番禺区\",\"pid\":440100,\"level\":3},{\"id\":440114,\"name\":\"花都区\",\"pid\":440100,\"level\":3},{\"id\":440115,\"name\":\"南沙区\",\"pid\":440100,\"level\":3},{\"id\":440117,\"name\":\"从化区\",\"pid\":440100,\"level\":3},{\"id\":440118,\"name\":\"增城区\",\"pid\":440100,\"level\":3}]},{\"id\":440200,\"name\":\"韶关市\",\"pid\":440000,\"level\":2,\"children\":[{\"id\":440203,\"name\":\"武江区\",\"pid\":440200,\"level\":3},{\"id\":440204,\"name\":\"浈江区\",\"pid\":440200,\"level\":3},{\"id\":440205,\"name\":\"曲江区\",\"pid\":440200,\"level\":3},{\"id\":440222,\"name\":\"始兴县\",\"pid\":440200,\"level\":3},{\"id\":440224,\"name\":\"仁化县\",\"pid\":440200,\"level\":3},{\"id\":440229,\"name\":\"翁源县\",\"pid\":440200,\"level\":3},{\"id\":440232,\"name\":\"乳源瑶族自治县\",\"pid\":440200,\"level\":3},{\"id\":440233,\"name\":\"新丰县\",\"pid\":440200,\"level\":3},{\"id\":440281,\"name\":\"乐昌市\",\"pid\":440200,\"level\":3},{\"id\":440282,\"name\":\"南雄市\",\"pid\":440200,\"level\":3}]},{\"id\":440300,\"name\":\"深圳市\",\"pid\":440000,\"level\":2,\"children\":[{\"id\":440303,\"name\":\"罗湖区\",\"pid\":440300,\"level\":3},{\"id\":440304,\"name\":\"福田区\",\"pid\":440300,\"level\":3},{\"id\":440305,\"name\":\"南山区\",\"pid\":440300,\"level\":3},{\"id\":440306,\"name\":\"宝安区\",\"pid\":440300,\"level\":3},{\"id\":440307,\"name\":\"龙岗区\",\"pid\":440300,\"level\":3},{\"id\":440308,\"name\":\"盐田区\",\"pid\":440300,\"level\":3},{\"id\":440309,\"name\":\"光明新区\",\"pid\":440300,\"level\":3},{\"id\":440310,\"name\":\"坪山新区\",\"pid\":440300,\"level\":3},{\"id\":440311,\"name\":\"大鹏新区\",\"pid\":440300,\"level\":3},{\"id\":440312,\"name\":\"龙华新区\",\"pid\":440300,\"level\":3}]},{\"id\":440400,\"name\":\"珠海市\",\"pid\":440000,\"level\":2,\"children\":[{\"id\":440402,\"name\":\"香洲区\",\"pid\":440400,\"level\":3},{\"id\":440403,\"name\":\"斗门区\",\"pid\":440400,\"level\":3},{\"id\":440404,\"name\":\"金湾区\",\"pid\":440400,\"level\":3}]},{\"id\":440500,\"name\":\"汕头市\",\"pid\":440000,\"level\":2,\"children\":[{\"id\":440507,\"name\":\"龙湖区\",\"pid\":440500,\"level\":3},{\"id\":440511,\"name\":\"金平区\",\"pid\":440500,\"level\":3},{\"id\":440512,\"name\":\"濠江区\",\"pid\":440500,\"level\":3},{\"id\":440513,\"name\":\"潮阳区\",\"pid\":440500,\"level\":3},{\"id\":440514,\"name\":\"潮南区\",\"pid\":440500,\"level\":3},{\"id\":440515,\"name\":\"澄海区\",\"pid\":440500,\"level\":3},{\"id\":440523,\"name\":\"南澳县\",\"pid\":440500,\"level\":3}]},{\"id\":440600,\"name\":\"佛山市\",\"pid\":440000,\"level\":2,\"children\":[{\"id\":440604,\"name\":\"禅城区\",\"pid\":440600,\"level\":3},{\"id\":440605,\"name\":\"南海区\",\"pid\":440600,\"level\":3},{\"id\":440606,\"name\":\"顺德区\",\"pid\":440600,\"level\":3},{\"id\":440607,\"name\":\"三水区\",\"pid\":440600,\"level\":3},{\"id\":440608,\"name\":\"高明区\",\"pid\":440600,\"level\":3}]},{\"id\":440700,\"name\":\"江门市\",\"pid\":440000,\"level\":2,\"children\":[{\"id\":440703,\"name\":\"蓬江区\",\"pid\":440700,\"level\":3},{\"id\":440704,\"name\":\"江海区\",\"pid\":440700,\"level\":3},{\"id\":440705,\"name\":\"新会区\",\"pid\":440700,\"level\":3},{\"id\":440781,\"name\":\"台山市\",\"pid\":440700,\"level\":3},{\"id\":440783,\"name\":\"开平市\",\"pid\":440700,\"level\":3},{\"id\":440784,\"name\":\"鹤山市\",\"pid\":440700,\"level\":3},{\"id\":440785,\"name\":\"恩平市\",\"pid\":440700,\"level\":3}]},{\"id\":440800,\"name\":\"湛江市\",\"pid\":440000,\"level\":2,\"children\":[{\"id\":440802,\"name\":\"赤坎区\",\"pid\":440800,\"level\":3},{\"id\":440803,\"name\":\"霞山区\",\"pid\":440800,\"level\":3},{\"id\":440804,\"name\":\"坡头区\",\"pid\":440800,\"level\":3},{\"id\":440811,\"name\":\"麻章区\",\"pid\":440800,\"level\":3},{\"id\":440823,\"name\":\"遂溪县\",\"pid\":440800,\"level\":3},{\"id\":440825,\"name\":\"徐闻县\",\"pid\":440800,\"level\":3},{\"id\":440881,\"name\":\"廉江市\",\"pid\":440800,\"level\":3},{\"id\":440882,\"name\":\"雷州市\",\"pid\":440800,\"level\":3},{\"id\":440883,\"name\":\"吴川市\",\"pid\":440800,\"level\":3}]},{\"id\":440900,\"name\":\"茂名市\",\"pid\":440000,\"level\":2,\"children\":[{\"id\":440902,\"name\":\"茂南区\",\"pid\":440900,\"level\":3},{\"id\":440904,\"name\":\"电白区\",\"pid\":440900,\"level\":3},{\"id\":440981,\"name\":\"高州市\",\"pid\":440900,\"level\":3},{\"id\":440982,\"name\":\"化州市\",\"pid\":440900,\"level\":3},{\"id\":440983,\"name\":\"信宜市\",\"pid\":440900,\"level\":3}]},{\"id\":441200,\"name\":\"肇庆市\",\"pid\":440000,\"level\":2,\"children\":[{\"id\":441202,\"name\":\"端州区\",\"pid\":441200,\"level\":3},{\"id\":441203,\"name\":\"鼎湖区\",\"pid\":441200,\"level\":3},{\"id\":441223,\"name\":\"广宁县\",\"pid\":441200,\"level\":3},{\"id\":441224,\"name\":\"怀集县\",\"pid\":441200,\"level\":3},{\"id\":441225,\"name\":\"封开县\",\"pid\":441200,\"level\":3},{\"id\":441226,\"name\":\"德庆县\",\"pid\":441200,\"level\":3},{\"id\":441283,\"name\":\"高要市\",\"pid\":441200,\"level\":3},{\"id\":441284,\"name\":\"四会市\",\"pid\":441200,\"level\":3}]},{\"id\":441300,\"name\":\"惠州市\",\"pid\":440000,\"level\":2,\"children\":[{\"id\":441302,\"name\":\"惠城区\",\"pid\":441300,\"level\":3},{\"id\":441303,\"name\":\"惠阳区\",\"pid\":441300,\"level\":3},{\"id\":441322,\"name\":\"博罗县\",\"pid\":441300,\"level\":3},{\"id\":441323,\"name\":\"惠东县\",\"pid\":441300,\"level\":3},{\"id\":441324,\"name\":\"龙门县\",\"pid\":441300,\"level\":3}]},{\"id\":441400,\"name\":\"梅州市\",\"pid\":440000,\"level\":2,\"children\":[{\"id\":441402,\"name\":\"梅江区\",\"pid\":441400,\"level\":3},{\"id\":441403,\"name\":\"梅县区\",\"pid\":441400,\"level\":3},{\"id\":441422,\"name\":\"大埔县\",\"pid\":441400,\"level\":3},{\"id\":441423,\"name\":\"丰顺县\",\"pid\":441400,\"level\":3},{\"id\":441424,\"name\":\"五华县\",\"pid\":441400,\"level\":3},{\"id\":441426,\"name\":\"平远县\",\"pid\":441400,\"level\":3},{\"id\":441427,\"name\":\"蕉岭县\",\"pid\":441400,\"level\":3},{\"id\":441481,\"name\":\"兴宁市\",\"pid\":441400,\"level\":3}]},{\"id\":441500,\"name\":\"汕尾市\",\"pid\":440000,\"level\":2,\"children\":[{\"id\":441502,\"name\":\"城区\",\"pid\":441500,\"level\":3},{\"id\":441521,\"name\":\"海丰县\",\"pid\":441500,\"level\":3},{\"id\":441523,\"name\":\"陆河县\",\"pid\":441500,\"level\":3},{\"id\":441581,\"name\":\"陆丰市\",\"pid\":441500,\"level\":3}]},{\"id\":441600,\"name\":\"河源市\",\"pid\":440000,\"level\":2,\"children\":[{\"id\":441602,\"name\":\"源城区\",\"pid\":441600,\"level\":3},{\"id\":441621,\"name\":\"紫金县\",\"pid\":441600,\"level\":3},{\"id\":441622,\"name\":\"龙川县\",\"pid\":441600,\"level\":3},{\"id\":441623,\"name\":\"连平县\",\"pid\":441600,\"level\":3},{\"id\":441624,\"name\":\"和平县\",\"pid\":441600,\"level\":3},{\"id\":441625,\"name\":\"东源县\",\"pid\":441600,\"level\":3}]},{\"id\":441700,\"name\":\"阳江市\",\"pid\":440000,\"level\":2,\"children\":[{\"id\":441702,\"name\":\"江城区\",\"pid\":441700,\"level\":3},{\"id\":441704,\"name\":\"阳东区\",\"pid\":441700,\"level\":3},{\"id\":441721,\"name\":\"阳西县\",\"pid\":441700,\"level\":3},{\"id\":441781,\"name\":\"阳春市\",\"pid\":441700,\"level\":3}]},{\"id\":441800,\"name\":\"清远市\",\"pid\":440000,\"level\":2,\"children\":[{\"id\":441802,\"name\":\"清城区\",\"pid\":441800,\"level\":3},{\"id\":441803,\"name\":\"清新区\",\"pid\":441800,\"level\":3},{\"id\":441821,\"name\":\"佛冈县\",\"pid\":441800,\"level\":3},{\"id\":441823,\"name\":\"阳山县\",\"pid\":441800,\"level\":3},{\"id\":441825,\"name\":\"连山壮族瑶族自治县\",\"pid\":441800,\"level\":3},{\"id\":441826,\"name\":\"连南瑶族自治县\",\"pid\":441800,\"level\":3},{\"id\":441881,\"name\":\"英德市\",\"pid\":441800,\"level\":3},{\"id\":441882,\"name\":\"连州市\",\"pid\":441800,\"level\":3}]},{\"id\":441900,\"name\":\"东莞市\",\"pid\":440000,\"level\":2,\"children\":[{\"id\":441901,\"name\":\"莞城区\",\"pid\":441900,\"level\":3},{\"id\":441902,\"name\":\"南城区\",\"pid\":441900,\"level\":3},{\"id\":441904,\"name\":\"万江区\",\"pid\":441900,\"level\":3},{\"id\":441905,\"name\":\"石碣镇\",\"pid\":441900,\"level\":3},{\"id\":441906,\"name\":\"石龙镇\",\"pid\":441900,\"level\":3},{\"id\":441907,\"name\":\"茶山镇\",\"pid\":441900,\"level\":3},{\"id\":441908,\"name\":\"石排镇\",\"pid\":441900,\"level\":3},{\"id\":441909,\"name\":\"企石镇\",\"pid\":441900,\"level\":3},{\"id\":441910,\"name\":\"横沥镇\",\"pid\":441900,\"level\":3},{\"id\":441911,\"name\":\"桥头镇\",\"pid\":441900,\"level\":3},{\"id\":441912,\"name\":\"谢岗镇\",\"pid\":441900,\"level\":3},{\"id\":441913,\"name\":\"东坑镇\",\"pid\":441900,\"level\":3},{\"id\":441914,\"name\":\"常平镇\",\"pid\":441900,\"level\":3},{\"id\":441915,\"name\":\"寮步镇\",\"pid\":441900,\"level\":3},{\"id\":441916,\"name\":\"大朗镇\",\"pid\":441900,\"level\":3},{\"id\":441917,\"name\":\"麻涌镇\",\"pid\":441900,\"level\":3},{\"id\":441918,\"name\":\"中堂镇\",\"pid\":441900,\"level\":3},{\"id\":441919,\"name\":\"高埗镇\",\"pid\":441900,\"level\":3},{\"id\":441920,\"name\":\"樟木头镇\",\"pid\":441900,\"level\":3},{\"id\":441921,\"name\":\"大岭山镇\",\"pid\":441900,\"level\":3},{\"id\":441922,\"name\":\"望牛墩镇\",\"pid\":441900,\"level\":3},{\"id\":441923,\"name\":\"黄江镇\",\"pid\":441900,\"level\":3},{\"id\":441924,\"name\":\"洪梅镇\",\"pid\":441900,\"level\":3},{\"id\":441925,\"name\":\"清溪镇\",\"pid\":441900,\"level\":3},{\"id\":441926,\"name\":\"沙田镇\",\"pid\":441900,\"level\":3},{\"id\":441927,\"name\":\"道滘镇\",\"pid\":441900,\"level\":3},{\"id\":441928,\"name\":\"塘厦镇\",\"pid\":441900,\"level\":3},{\"id\":441929,\"name\":\"虎门镇\",\"pid\":441900,\"level\":3},{\"id\":441930,\"name\":\"厚街镇\",\"pid\":441900,\"level\":3},{\"id\":441931,\"name\":\"凤岗镇\",\"pid\":441900,\"level\":3},{\"id\":441932,\"name\":\"长安镇\",\"pid\":441900,\"level\":3}]},{\"id\":442000,\"name\":\"中山市\",\"pid\":440000,\"level\":2,\"children\":[{\"id\":442001,\"name\":\"石岐区\",\"pid\":442000,\"level\":3},{\"id\":442004,\"name\":\"南区\",\"pid\":442000,\"level\":3},{\"id\":442005,\"name\":\"五桂山区\",\"pid\":442000,\"level\":3},{\"id\":442006,\"name\":\"火炬开发区\",\"pid\":442000,\"level\":3},{\"id\":442007,\"name\":\"黄圃镇\",\"pid\":442000,\"level\":3},{\"id\":442008,\"name\":\"南头镇\",\"pid\":442000,\"level\":3},{\"id\":442009,\"name\":\"东凤镇\",\"pid\":442000,\"level\":3},{\"id\":442010,\"name\":\"阜沙镇\",\"pid\":442000,\"level\":3},{\"id\":442011,\"name\":\"小榄镇\",\"pid\":442000,\"level\":3},{\"id\":442012,\"name\":\"东升镇\",\"pid\":442000,\"level\":3},{\"id\":442013,\"name\":\"古镇镇\",\"pid\":442000,\"level\":3},{\"id\":442014,\"name\":\"横栏镇\",\"pid\":442000,\"level\":3},{\"id\":442015,\"name\":\"三角镇\",\"pid\":442000,\"level\":3},{\"id\":442016,\"name\":\"民众镇\",\"pid\":442000,\"level\":3},{\"id\":442017,\"name\":\"南朗镇\",\"pid\":442000,\"level\":3},{\"id\":442018,\"name\":\"港口镇\",\"pid\":442000,\"level\":3},{\"id\":442019,\"name\":\"大涌镇\",\"pid\":442000,\"level\":3},{\"id\":442020,\"name\":\"沙溪镇\",\"pid\":442000,\"level\":3},{\"id\":442021,\"name\":\"三乡镇\",\"pid\":442000,\"level\":3},{\"id\":442022,\"name\":\"板芙镇\",\"pid\":442000,\"level\":3},{\"id\":442023,\"name\":\"神湾镇\",\"pid\":442000,\"level\":3},{\"id\":442024,\"name\":\"坦洲镇\",\"pid\":442000,\"level\":3}]},{\"id\":445100,\"name\":\"潮州市\",\"pid\":440000,\"level\":2,\"children\":[{\"id\":445102,\"name\":\"湘桥区\",\"pid\":445100,\"level\":3},{\"id\":445103,\"name\":\"潮安区\",\"pid\":445100,\"level\":3},{\"id\":445122,\"name\":\"饶平县\",\"pid\":445100,\"level\":3}]},{\"id\":445200,\"name\":\"揭阳市\",\"pid\":440000,\"level\":2,\"children\":[{\"id\":445202,\"name\":\"榕城区\",\"pid\":445200,\"level\":3},{\"id\":445203,\"name\":\"揭东区\",\"pid\":445200,\"level\":3},{\"id\":445222,\"name\":\"揭西县\",\"pid\":445200,\"level\":3},{\"id\":445224,\"name\":\"惠来县\",\"pid\":445200,\"level\":3},{\"id\":445281,\"name\":\"普宁市\",\"pid\":445200,\"level\":3}]},{\"id\":445300,\"name\":\"云浮市\",\"pid\":440000,\"level\":2,\"children\":[{\"id\":445302,\"name\":\"云城区\",\"pid\":445300,\"level\":3},{\"id\":445303,\"name\":\"云安区\",\"pid\":445300,\"level\":3},{\"id\":445321,\"name\":\"新兴县\",\"pid\":445300,\"level\":3},{\"id\":445322,\"name\":\"郁南县\",\"pid\":445300,\"level\":3},{\"id\":445381,\"name\":\"罗定市\",\"pid\":445300,\"level\":3}]}]},{\"id\":450000,\"name\":\"广西壮族自治区\",\"pid\":100000,\"level\":1,\"children\":[{\"id\":450100,\"name\":\"南宁市\",\"pid\":450000,\"level\":2,\"children\":[{\"id\":450102,\"name\":\"兴宁区\",\"pid\":450100,\"level\":3},{\"id\":450103,\"name\":\"青秀区\",\"pid\":450100,\"level\":3},{\"id\":450105,\"name\":\"江南区\",\"pid\":450100,\"level\":3},{\"id\":450107,\"name\":\"西乡塘区\",\"pid\":450100,\"level\":3},{\"id\":450108,\"name\":\"良庆区\",\"pid\":450100,\"level\":3},{\"id\":450109,\"name\":\"邕宁区\",\"pid\":450100,\"level\":3},{\"id\":450122,\"name\":\"武鸣县\",\"pid\":450100,\"level\":3},{\"id\":450123,\"name\":\"隆安县\",\"pid\":450100,\"level\":3},{\"id\":450124,\"name\":\"马山县\",\"pid\":450100,\"level\":3},{\"id\":450125,\"name\":\"上林县\",\"pid\":450100,\"level\":3},{\"id\":450126,\"name\":\"宾阳县\",\"pid\":450100,\"level\":3},{\"id\":450127,\"name\":\"横县\",\"pid\":450100,\"level\":3},{\"id\":450128,\"name\":\"埌东新区\",\"pid\":450100,\"level\":3}]},{\"id\":450200,\"name\":\"柳州市\",\"pid\":450000,\"level\":2,\"children\":[{\"id\":450202,\"name\":\"城中区\",\"pid\":450200,\"level\":3},{\"id\":450203,\"name\":\"鱼峰区\",\"pid\":450200,\"level\":3},{\"id\":450204,\"name\":\"柳南区\",\"pid\":450200,\"level\":3},{\"id\":450205,\"name\":\"柳北区\",\"pid\":450200,\"level\":3},{\"id\":450221,\"name\":\"柳江县\",\"pid\":450200,\"level\":3},{\"id\":450222,\"name\":\"柳城县\",\"pid\":450200,\"level\":3},{\"id\":450223,\"name\":\"鹿寨县\",\"pid\":450200,\"level\":3},{\"id\":450224,\"name\":\"融安县\",\"pid\":450200,\"level\":3},{\"id\":450225,\"name\":\"融水苗族自治县\",\"pid\":450200,\"level\":3},{\"id\":450226,\"name\":\"三江侗族自治县\",\"pid\":450200,\"level\":3},{\"id\":450227,\"name\":\"柳东新区\",\"pid\":450200,\"level\":3}]},{\"id\":450300,\"name\":\"桂林市\",\"pid\":450000,\"level\":2,\"children\":[{\"id\":450302,\"name\":\"秀峰区\",\"pid\":450300,\"level\":3},{\"id\":450303,\"name\":\"叠彩区\",\"pid\":450300,\"level\":3},{\"id\":450304,\"name\":\"象山区\",\"pid\":450300,\"level\":3},{\"id\":450305,\"name\":\"七星区\",\"pid\":450300,\"level\":3},{\"id\":450311,\"name\":\"雁山区\",\"pid\":450300,\"level\":3},{\"id\":450312,\"name\":\"临桂区\",\"pid\":450300,\"level\":3},{\"id\":450321,\"name\":\"阳朔县\",\"pid\":450300,\"level\":3},{\"id\":450323,\"name\":\"灵川县\",\"pid\":450300,\"level\":3},{\"id\":450324,\"name\":\"全州县\",\"pid\":450300,\"level\":3},{\"id\":450325,\"name\":\"兴安县\",\"pid\":450300,\"level\":3},{\"id\":450326,\"name\":\"永福县\",\"pid\":450300,\"level\":3},{\"id\":450327,\"name\":\"灌阳县\",\"pid\":450300,\"level\":3},{\"id\":450328,\"name\":\"龙胜各族自治县\",\"pid\":450300,\"level\":3},{\"id\":450329,\"name\":\"资源县\",\"pid\":450300,\"level\":3},{\"id\":450330,\"name\":\"平乐县\",\"pid\":450300,\"level\":3},{\"id\":450331,\"name\":\"荔浦县\",\"pid\":450300,\"level\":3},{\"id\":450332,\"name\":\"恭城瑶族自治县\",\"pid\":450300,\"level\":3}]},{\"id\":450400,\"name\":\"梧州市\",\"pid\":450000,\"level\":2,\"children\":[{\"id\":450403,\"name\":\"万秀区\",\"pid\":450400,\"level\":3},{\"id\":450405,\"name\":\"长洲区\",\"pid\":450400,\"level\":3},{\"id\":450406,\"name\":\"龙圩区\",\"pid\":450400,\"level\":3},{\"id\":450421,\"name\":\"苍梧县\",\"pid\":450400,\"level\":3},{\"id\":450422,\"name\":\"藤县\",\"pid\":450400,\"level\":3},{\"id\":450423,\"name\":\"蒙山县\",\"pid\":450400,\"level\":3},{\"id\":450481,\"name\":\"岑溪市\",\"pid\":450400,\"level\":3}]},{\"id\":450500,\"name\":\"北海市\",\"pid\":450000,\"level\":2,\"children\":[{\"id\":450502,\"name\":\"海城区\",\"pid\":450500,\"level\":3},{\"id\":450503,\"name\":\"银海区\",\"pid\":450500,\"level\":3},{\"id\":450512,\"name\":\"铁山港区\",\"pid\":450500,\"level\":3},{\"id\":450521,\"name\":\"合浦县\",\"pid\":450500,\"level\":3}]},{\"id\":450600,\"name\":\"防城港市\",\"pid\":450000,\"level\":2,\"children\":[{\"id\":450602,\"name\":\"港口区\",\"pid\":450600,\"level\":3},{\"id\":450603,\"name\":\"防城区\",\"pid\":450600,\"level\":3},{\"id\":450621,\"name\":\"上思县\",\"pid\":450600,\"level\":3},{\"id\":450681,\"name\":\"东兴市\",\"pid\":450600,\"level\":3}]},{\"id\":450700,\"name\":\"钦州市\",\"pid\":450000,\"level\":2,\"children\":[{\"id\":450702,\"name\":\"钦南区\",\"pid\":450700,\"level\":3},{\"id\":450703,\"name\":\"钦北区\",\"pid\":450700,\"level\":3},{\"id\":450721,\"name\":\"灵山县\",\"pid\":450700,\"level\":3},{\"id\":450722,\"name\":\"浦北县\",\"pid\":450700,\"level\":3}]},{\"id\":450800,\"name\":\"贵港市\",\"pid\":450000,\"level\":2,\"children\":[{\"id\":450802,\"name\":\"港北区\",\"pid\":450800,\"level\":3},{\"id\":450803,\"name\":\"港南区\",\"pid\":450800,\"level\":3},{\"id\":450804,\"name\":\"覃塘区\",\"pid\":450800,\"level\":3},{\"id\":450821,\"name\":\"平南县\",\"pid\":450800,\"level\":3},{\"id\":450881,\"name\":\"桂平市\",\"pid\":450800,\"level\":3}]},{\"id\":450900,\"name\":\"玉林市\",\"pid\":450000,\"level\":2,\"children\":[{\"id\":450902,\"name\":\"玉州区\",\"pid\":450900,\"level\":3},{\"id\":450903,\"name\":\"福绵区\",\"pid\":450900,\"level\":3},{\"id\":450904,\"name\":\"玉东新区\",\"pid\":450900,\"level\":3},{\"id\":450921,\"name\":\"容县\",\"pid\":450900,\"level\":3},{\"id\":450922,\"name\":\"陆川县\",\"pid\":450900,\"level\":3},{\"id\":450923,\"name\":\"博白县\",\"pid\":450900,\"level\":3},{\"id\":450924,\"name\":\"兴业县\",\"pid\":450900,\"level\":3},{\"id\":450981,\"name\":\"北流市\",\"pid\":450900,\"level\":3}]},{\"id\":451000,\"name\":\"百色市\",\"pid\":450000,\"level\":2,\"children\":[{\"id\":451002,\"name\":\"右江区\",\"pid\":451000,\"level\":3},{\"id\":451021,\"name\":\"田阳县\",\"pid\":451000,\"level\":3},{\"id\":451022,\"name\":\"田东县\",\"pid\":451000,\"level\":3},{\"id\":451023,\"name\":\"平果县\",\"pid\":451000,\"level\":3},{\"id\":451024,\"name\":\"德保县\",\"pid\":451000,\"level\":3},{\"id\":451025,\"name\":\"靖西县\",\"pid\":451000,\"level\":3},{\"id\":451026,\"name\":\"那坡县\",\"pid\":451000,\"level\":3},{\"id\":451027,\"name\":\"凌云县\",\"pid\":451000,\"level\":3},{\"id\":451028,\"name\":\"乐业县\",\"pid\":451000,\"level\":3},{\"id\":451029,\"name\":\"田林县\",\"pid\":451000,\"level\":3},{\"id\":451030,\"name\":\"西林县\",\"pid\":451000,\"level\":3},{\"id\":451031,\"name\":\"隆林各族自治县\",\"pid\":451000,\"level\":3}]},{\"id\":451100,\"name\":\"贺州市\",\"pid\":450000,\"level\":2,\"children\":[{\"id\":451102,\"name\":\"八步区\",\"pid\":451100,\"level\":3},{\"id\":451121,\"name\":\"昭平县\",\"pid\":451100,\"level\":3},{\"id\":451122,\"name\":\"钟山县\",\"pid\":451100,\"level\":3},{\"id\":451123,\"name\":\"富川瑶族自治县\",\"pid\":451100,\"level\":3},{\"id\":451124,\"name\":\"平桂管理区\",\"pid\":451100,\"level\":3}]},{\"id\":451200,\"name\":\"河池市\",\"pid\":450000,\"level\":2,\"children\":[{\"id\":451202,\"name\":\"金城江区\",\"pid\":451200,\"level\":3},{\"id\":451221,\"name\":\"南丹县\",\"pid\":451200,\"level\":3},{\"id\":451222,\"name\":\"天峨县\",\"pid\":451200,\"level\":3},{\"id\":451223,\"name\":\"凤山县\",\"pid\":451200,\"level\":3},{\"id\":451224,\"name\":\"东兰县\",\"pid\":451200,\"level\":3},{\"id\":451225,\"name\":\"罗城仫佬族自治县\",\"pid\":451200,\"level\":3},{\"id\":451226,\"name\":\"环江毛南族自治县\",\"pid\":451200,\"level\":3},{\"id\":451227,\"name\":\"巴马瑶族自治县\",\"pid\":451200,\"level\":3},{\"id\":451228,\"name\":\"都安瑶族自治县\",\"pid\":451200,\"level\":3},{\"id\":451229,\"name\":\"大化瑶族自治县\",\"pid\":451200,\"level\":3},{\"id\":451281,\"name\":\"宜州市\",\"pid\":451200,\"level\":3}]},{\"id\":451300,\"name\":\"来宾市\",\"pid\":450000,\"level\":2,\"children\":[{\"id\":451302,\"name\":\"兴宾区\",\"pid\":451300,\"level\":3},{\"id\":451321,\"name\":\"忻城县\",\"pid\":451300,\"level\":3},{\"id\":451322,\"name\":\"象州县\",\"pid\":451300,\"level\":3},{\"id\":451323,\"name\":\"武宣县\",\"pid\":451300,\"level\":3},{\"id\":451324,\"name\":\"金秀瑶族自治县\",\"pid\":451300,\"level\":3},{\"id\":451381,\"name\":\"合山市\",\"pid\":451300,\"level\":3}]},{\"id\":451400,\"name\":\"崇左市\",\"pid\":450000,\"level\":2,\"children\":[{\"id\":451402,\"name\":\"江州区\",\"pid\":451400,\"level\":3},{\"id\":451421,\"name\":\"扶绥县\",\"pid\":451400,\"level\":3},{\"id\":451422,\"name\":\"宁明县\",\"pid\":451400,\"level\":3},{\"id\":451423,\"name\":\"龙州县\",\"pid\":451400,\"level\":3},{\"id\":451424,\"name\":\"大新县\",\"pid\":451400,\"level\":3},{\"id\":451425,\"name\":\"天等县\",\"pid\":451400,\"level\":3},{\"id\":451481,\"name\":\"凭祥市\",\"pid\":451400,\"level\":3}]}]},{\"id\":460000,\"name\":\"海南省\",\"pid\":100000,\"level\":1,\"children\":[{\"id\":460100,\"name\":\"海口市\",\"pid\":460000,\"level\":2,\"children\":[{\"id\":460105,\"name\":\"秀英区\",\"pid\":460100,\"level\":3},{\"id\":460106,\"name\":\"龙华区\",\"pid\":460100,\"level\":3},{\"id\":460107,\"name\":\"琼山区\",\"pid\":460100,\"level\":3},{\"id\":460108,\"name\":\"美兰区\",\"pid\":460100,\"level\":3}]},{\"id\":460200,\"name\":\"三亚市\",\"pid\":460000,\"level\":2,\"children\":[{\"id\":460202,\"name\":\"海棠区\",\"pid\":460200,\"level\":3},{\"id\":460203,\"name\":\"吉阳区\",\"pid\":460200,\"level\":3},{\"id\":460204,\"name\":\"天涯区\",\"pid\":460200,\"level\":3},{\"id\":460205,\"name\":\"崖州区\",\"pid\":460200,\"level\":3}]},{\"id\":460300,\"name\":\"三沙市\",\"pid\":460000,\"level\":2,\"children\":[{\"id\":460321,\"name\":\"西沙群岛\",\"pid\":460300,\"level\":3},{\"id\":460322,\"name\":\"南沙群岛\",\"pid\":460300,\"level\":3},{\"id\":460323,\"name\":\"中沙群岛\",\"pid\":460300,\"level\":3}]},{\"id\":469000,\"name\":\"直辖县级\",\"pid\":460000,\"level\":2,\"children\":[{\"id\":469001,\"name\":\"五指山市\",\"pid\":469000,\"level\":3},{\"id\":469002,\"name\":\"琼海市\",\"pid\":469000,\"level\":3},{\"id\":469003,\"name\":\"儋州市\",\"pid\":469000,\"level\":3},{\"id\":469005,\"name\":\"文昌市\",\"pid\":469000,\"level\":3},{\"id\":469006,\"name\":\"万宁市\",\"pid\":469000,\"level\":3},{\"id\":469007,\"name\":\"东方市\",\"pid\":469000,\"level\":3},{\"id\":469021,\"name\":\"定安县\",\"pid\":469000,\"level\":3},{\"id\":469022,\"name\":\"屯昌县\",\"pid\":469000,\"level\":3},{\"id\":469023,\"name\":\"澄迈县\",\"pid\":469000,\"level\":3},{\"id\":469024,\"name\":\"临高县\",\"pid\":469000,\"level\":3},{\"id\":469025,\"name\":\"白沙黎族自治县\",\"pid\":469000,\"level\":3},{\"id\":469026,\"name\":\"昌江黎族自治县\",\"pid\":469000,\"level\":3},{\"id\":469027,\"name\":\"乐东黎族自治县\",\"pid\":469000,\"level\":3},{\"id\":469028,\"name\":\"陵水黎族自治县\",\"pid\":469000,\"level\":3},{\"id\":469029,\"name\":\"保亭黎族苗族自治县\",\"pid\":469000,\"level\":3},{\"id\":469030,\"name\":\"琼中黎族苗族自治县\",\"pid\":469000,\"level\":3}]}]},{\"id\":500000,\"name\":\"重庆市\",\"pid\":100000,\"level\":1,\"children\":[{\"id\":500100,\"name\":\"重庆市\",\"pid\":500000,\"level\":2,\"children\":[{\"id\":500101,\"name\":\"万州区\",\"pid\":500100,\"level\":3},{\"id\":500102,\"name\":\"涪陵区\",\"pid\":500100,\"level\":3},{\"id\":500103,\"name\":\"渝中区\",\"pid\":500100,\"level\":3},{\"id\":500104,\"name\":\"大渡口区\",\"pid\":500100,\"level\":3},{\"id\":500105,\"name\":\"江北区\",\"pid\":500100,\"level\":3},{\"id\":500106,\"name\":\"沙坪坝区\",\"pid\":500100,\"level\":3},{\"id\":500107,\"name\":\"九龙坡区\",\"pid\":500100,\"level\":3},{\"id\":500108,\"name\":\"南岸区\",\"pid\":500100,\"level\":3},{\"id\":500109,\"name\":\"北碚区\",\"pid\":500100,\"level\":3},{\"id\":500110,\"name\":\"綦江区\",\"pid\":500100,\"level\":3},{\"id\":500111,\"name\":\"大足区\",\"pid\":500100,\"level\":3},{\"id\":500112,\"name\":\"渝北区\",\"pid\":500100,\"level\":3},{\"id\":500113,\"name\":\"巴南区\",\"pid\":500100,\"level\":3},{\"id\":500114,\"name\":\"黔江区\",\"pid\":500100,\"level\":3},{\"id\":500115,\"name\":\"长寿区\",\"pid\":500100,\"level\":3},{\"id\":500116,\"name\":\"江津区\",\"pid\":500100,\"level\":3},{\"id\":500117,\"name\":\"合川区\",\"pid\":500100,\"level\":3},{\"id\":500118,\"name\":\"永川区\",\"pid\":500100,\"level\":3},{\"id\":500119,\"name\":\"南川区\",\"pid\":500100,\"level\":3},{\"id\":500120,\"name\":\"璧山区\",\"pid\":500100,\"level\":3},{\"id\":500151,\"name\":\"铜梁区\",\"pid\":500100,\"level\":3},{\"id\":500223,\"name\":\"潼南县\",\"pid\":500100,\"level\":3},{\"id\":500226,\"name\":\"荣昌县\",\"pid\":500100,\"level\":3},{\"id\":500228,\"name\":\"梁平县\",\"pid\":500100,\"level\":3},{\"id\":500229,\"name\":\"城口县\",\"pid\":500100,\"level\":3},{\"id\":500230,\"name\":\"丰都县\",\"pid\":500100,\"level\":3},{\"id\":500231,\"name\":\"垫江县\",\"pid\":500100,\"level\":3},{\"id\":500232,\"name\":\"武隆县\",\"pid\":500100,\"level\":3},{\"id\":500233,\"name\":\"忠县\",\"pid\":500100,\"level\":3},{\"id\":500234,\"name\":\"开县\",\"pid\":500100,\"level\":3},{\"id\":500235,\"name\":\"云阳县\",\"pid\":500100,\"level\":3},{\"id\":500236,\"name\":\"奉节县\",\"pid\":500100,\"level\":3},{\"id\":500237,\"name\":\"巫山县\",\"pid\":500100,\"level\":3},{\"id\":500238,\"name\":\"巫溪县\",\"pid\":500100,\"level\":3},{\"id\":500240,\"name\":\"石柱土家族自治县\",\"pid\":500100,\"level\":3},{\"id\":500241,\"name\":\"秀山土家族苗族自治县\",\"pid\":500100,\"level\":3},{\"id\":500242,\"name\":\"酉阳土家族苗族自治县\",\"pid\":500100,\"level\":3},{\"id\":500243,\"name\":\"彭水苗族土家族自治县\",\"pid\":500100,\"level\":3}]},{\"id\":500300,\"name\":\"两江新区\",\"pid\":500000,\"level\":2,\"children\":[{\"id\":500301,\"name\":\"北部新区\",\"pid\":500300,\"level\":3},{\"id\":500302,\"name\":\"保税港区\",\"pid\":500300,\"level\":3},{\"id\":500303,\"name\":\"工业园区\",\"pid\":500300,\"level\":3}]}]},{\"id\":510000,\"name\":\"四川省\",\"pid\":100000,\"level\":1,\"children\":[{\"id\":510100,\"name\":\"成都市\",\"pid\":510000,\"level\":2,\"children\":[{\"id\":510104,\"name\":\"锦江区\",\"pid\":510100,\"level\":3},{\"id\":510105,\"name\":\"青羊区\",\"pid\":510100,\"level\":3},{\"id\":510106,\"name\":\"金牛区\",\"pid\":510100,\"level\":3},{\"id\":510107,\"name\":\"武侯区\",\"pid\":510100,\"level\":3},{\"id\":510108,\"name\":\"成华区\",\"pid\":510100,\"level\":3},{\"id\":510112,\"name\":\"龙泉驿区\",\"pid\":510100,\"level\":3},{\"id\":510113,\"name\":\"青白江区\",\"pid\":510100,\"level\":3},{\"id\":510114,\"name\":\"新都区\",\"pid\":510100,\"level\":3},{\"id\":510115,\"name\":\"温江区\",\"pid\":510100,\"level\":3},{\"id\":510121,\"name\":\"金堂县\",\"pid\":510100,\"level\":3},{\"id\":510122,\"name\":\"双流县\",\"pid\":510100,\"level\":3},{\"id\":510124,\"name\":\"郫县\",\"pid\":510100,\"level\":3},{\"id\":510129,\"name\":\"大邑县\",\"pid\":510100,\"level\":3},{\"id\":510131,\"name\":\"蒲江县\",\"pid\":510100,\"level\":3},{\"id\":510132,\"name\":\"新津县\",\"pid\":510100,\"level\":3},{\"id\":510181,\"name\":\"都江堰市\",\"pid\":510100,\"level\":3},{\"id\":510182,\"name\":\"彭州市\",\"pid\":510100,\"level\":3},{\"id\":510183,\"name\":\"邛崃市\",\"pid\":510100,\"level\":3},{\"id\":510184,\"name\":\"崇州市\",\"pid\":510100,\"level\":3}]},{\"id\":510300,\"name\":\"自贡市\",\"pid\":510000,\"level\":2,\"children\":[{\"id\":510302,\"name\":\"自流井区\",\"pid\":510300,\"level\":3},{\"id\":510303,\"name\":\"贡井区\",\"pid\":510300,\"level\":3},{\"id\":510304,\"name\":\"大安区\",\"pid\":510300,\"level\":3},{\"id\":510311,\"name\":\"沿滩区\",\"pid\":510300,\"level\":3},{\"id\":510321,\"name\":\"荣县\",\"pid\":510300,\"level\":3},{\"id\":510322,\"name\":\"富顺县\",\"pid\":510300,\"level\":3}]},{\"id\":510400,\"name\":\"攀枝花市\",\"pid\":510000,\"level\":2,\"children\":[{\"id\":510402,\"name\":\"东区\",\"pid\":510400,\"level\":3},{\"id\":510403,\"name\":\"西区\",\"pid\":510400,\"level\":3},{\"id\":510411,\"name\":\"仁和区\",\"pid\":510400,\"level\":3},{\"id\":510421,\"name\":\"米易县\",\"pid\":510400,\"level\":3},{\"id\":510422,\"name\":\"盐边县\",\"pid\":510400,\"level\":3}]},{\"id\":510500,\"name\":\"泸州市\",\"pid\":510000,\"level\":2,\"children\":[{\"id\":510502,\"name\":\"江阳区\",\"pid\":510500,\"level\":3},{\"id\":510503,\"name\":\"纳溪区\",\"pid\":510500,\"level\":3},{\"id\":510504,\"name\":\"龙马潭区\",\"pid\":510500,\"level\":3},{\"id\":510521,\"name\":\"泸县\",\"pid\":510500,\"level\":3},{\"id\":510522,\"name\":\"合江县\",\"pid\":510500,\"level\":3},{\"id\":510524,\"name\":\"叙永县\",\"pid\":510500,\"level\":3},{\"id\":510525,\"name\":\"古蔺县\",\"pid\":510500,\"level\":3}]},{\"id\":510600,\"name\":\"德阳市\",\"pid\":510000,\"level\":2,\"children\":[{\"id\":510603,\"name\":\"旌阳区\",\"pid\":510600,\"level\":3},{\"id\":510623,\"name\":\"中江县\",\"pid\":510600,\"level\":3},{\"id\":510626,\"name\":\"罗江县\",\"pid\":510600,\"level\":3},{\"id\":510681,\"name\":\"广汉市\",\"pid\":510600,\"level\":3},{\"id\":510682,\"name\":\"什邡市\",\"pid\":510600,\"level\":3},{\"id\":510683,\"name\":\"绵竹市\",\"pid\":510600,\"level\":3}]},{\"id\":510700,\"name\":\"绵阳市\",\"pid\":510000,\"level\":2,\"children\":[{\"id\":510703,\"name\":\"涪城区\",\"pid\":510700,\"level\":3},{\"id\":510704,\"name\":\"游仙区\",\"pid\":510700,\"level\":3},{\"id\":510722,\"name\":\"三台县\",\"pid\":510700,\"level\":3},{\"id\":510723,\"name\":\"盐亭县\",\"pid\":510700,\"level\":3},{\"id\":510724,\"name\":\"安县\",\"pid\":510700,\"level\":3},{\"id\":510725,\"name\":\"梓潼县\",\"pid\":510700,\"level\":3},{\"id\":510726,\"name\":\"北川羌族自治县\",\"pid\":510700,\"level\":3},{\"id\":510727,\"name\":\"平武县\",\"pid\":510700,\"level\":3},{\"id\":510781,\"name\":\"江油市\",\"pid\":510700,\"level\":3}]},{\"id\":510800,\"name\":\"广元市\",\"pid\":510000,\"level\":2,\"children\":[{\"id\":510802,\"name\":\"利州区\",\"pid\":510800,\"level\":3},{\"id\":510811,\"name\":\"昭化区\",\"pid\":510800,\"level\":3},{\"id\":510812,\"name\":\"朝天区\",\"pid\":510800,\"level\":3},{\"id\":510821,\"name\":\"旺苍县\",\"pid\":510800,\"level\":3},{\"id\":510822,\"name\":\"青川县\",\"pid\":510800,\"level\":3},{\"id\":510823,\"name\":\"剑阁县\",\"pid\":510800,\"level\":3},{\"id\":510824,\"name\":\"苍溪县\",\"pid\":510800,\"level\":3}]},{\"id\":510900,\"name\":\"遂宁市\",\"pid\":510000,\"level\":2,\"children\":[{\"id\":510903,\"name\":\"船山区\",\"pid\":510900,\"level\":3},{\"id\":510904,\"name\":\"安居区\",\"pid\":510900,\"level\":3},{\"id\":510921,\"name\":\"蓬溪县\",\"pid\":510900,\"level\":3},{\"id\":510922,\"name\":\"射洪县\",\"pid\":510900,\"level\":3},{\"id\":510923,\"name\":\"大英县\",\"pid\":510900,\"level\":3}]},{\"id\":511000,\"name\":\"内江市\",\"pid\":510000,\"level\":2,\"children\":[{\"id\":511002,\"name\":\"市中区\",\"pid\":511000,\"level\":3},{\"id\":511011,\"name\":\"东兴区\",\"pid\":511000,\"level\":3},{\"id\":511024,\"name\":\"威远县\",\"pid\":511000,\"level\":3},{\"id\":511025,\"name\":\"资中县\",\"pid\":511000,\"level\":3},{\"id\":511028,\"name\":\"隆昌县\",\"pid\":511000,\"level\":3}]},{\"id\":511100,\"name\":\"乐山市\",\"pid\":510000,\"level\":2,\"children\":[{\"id\":511102,\"name\":\"市中区\",\"pid\":511100,\"level\":3},{\"id\":511111,\"name\":\"沙湾区\",\"pid\":511100,\"level\":3},{\"id\":511112,\"name\":\"五通桥区\",\"pid\":511100,\"level\":3},{\"id\":511113,\"name\":\"金口河区\",\"pid\":511100,\"level\":3},{\"id\":511123,\"name\":\"犍为县\",\"pid\":511100,\"level\":3},{\"id\":511124,\"name\":\"井研县\",\"pid\":511100,\"level\":3},{\"id\":511126,\"name\":\"夹江县\",\"pid\":511100,\"level\":3},{\"id\":511129,\"name\":\"沐川县\",\"pid\":511100,\"level\":3},{\"id\":511132,\"name\":\"峨边彝族自治县\",\"pid\":511100,\"level\":3},{\"id\":511133,\"name\":\"马边彝族自治县\",\"pid\":511100,\"level\":3},{\"id\":511181,\"name\":\"峨眉山市\",\"pid\":511100,\"level\":3}]},{\"id\":511300,\"name\":\"南充市\",\"pid\":510000,\"level\":2,\"children\":[{\"id\":511302,\"name\":\"顺庆区\",\"pid\":511300,\"level\":3},{\"id\":511303,\"name\":\"高坪区\",\"pid\":511300,\"level\":3},{\"id\":511304,\"name\":\"嘉陵区\",\"pid\":511300,\"level\":3},{\"id\":511321,\"name\":\"南部县\",\"pid\":511300,\"level\":3},{\"id\":511322,\"name\":\"营山县\",\"pid\":511300,\"level\":3},{\"id\":511323,\"name\":\"蓬安县\",\"pid\":511300,\"level\":3},{\"id\":511324,\"name\":\"仪陇县\",\"pid\":511300,\"level\":3},{\"id\":511325,\"name\":\"西充县\",\"pid\":511300,\"level\":3},{\"id\":511381,\"name\":\"阆中市\",\"pid\":511300,\"level\":3}]},{\"id\":511400,\"name\":\"眉山市\",\"pid\":510000,\"level\":2,\"children\":[{\"id\":511402,\"name\":\"东坡区\",\"pid\":511400,\"level\":3},{\"id\":511403,\"name\":\"彭山区\",\"pid\":511400,\"level\":3},{\"id\":511421,\"name\":\"仁寿县\",\"pid\":511400,\"level\":3},{\"id\":511423,\"name\":\"洪雅县\",\"pid\":511400,\"level\":3},{\"id\":511424,\"name\":\"丹棱县\",\"pid\":511400,\"level\":3},{\"id\":511425,\"name\":\"青神县\",\"pid\":511400,\"level\":3}]},{\"id\":511500,\"name\":\"宜宾市\",\"pid\":510000,\"level\":2,\"children\":[{\"id\":511502,\"name\":\"翠屏区\",\"pid\":511500,\"level\":3},{\"id\":511503,\"name\":\"南溪区\",\"pid\":511500,\"level\":3},{\"id\":511521,\"name\":\"宜宾县\",\"pid\":511500,\"level\":3},{\"id\":511523,\"name\":\"江安县\",\"pid\":511500,\"level\":3},{\"id\":511524,\"name\":\"长宁县\",\"pid\":511500,\"level\":3},{\"id\":511525,\"name\":\"高县\",\"pid\":511500,\"level\":3},{\"id\":511526,\"name\":\"珙县\",\"pid\":511500,\"level\":3},{\"id\":511527,\"name\":\"筠连县\",\"pid\":511500,\"level\":3},{\"id\":511528,\"name\":\"兴文县\",\"pid\":511500,\"level\":3},{\"id\":511529,\"name\":\"屏山县\",\"pid\":511500,\"level\":3}]},{\"id\":511600,\"name\":\"广安市\",\"pid\":510000,\"level\":2,\"children\":[{\"id\":511602,\"name\":\"广安区\",\"pid\":511600,\"level\":3},{\"id\":511603,\"name\":\"前锋区\",\"pid\":511600,\"level\":3},{\"id\":511621,\"name\":\"岳池县\",\"pid\":511600,\"level\":3},{\"id\":511622,\"name\":\"武胜县\",\"pid\":511600,\"level\":3},{\"id\":511623,\"name\":\"邻水县\",\"pid\":511600,\"level\":3},{\"id\":511681,\"name\":\"华蓥市\",\"pid\":511600,\"level\":3}]},{\"id\":511700,\"name\":\"达州市\",\"pid\":510000,\"level\":2,\"children\":[{\"id\":511702,\"name\":\"通川区\",\"pid\":511700,\"level\":3},{\"id\":511703,\"name\":\"达川区\",\"pid\":511700,\"level\":3},{\"id\":511722,\"name\":\"宣汉县\",\"pid\":511700,\"level\":3},{\"id\":511723,\"name\":\"开江县\",\"pid\":511700,\"level\":3},{\"id\":511724,\"name\":\"大竹县\",\"pid\":511700,\"level\":3},{\"id\":511725,\"name\":\"渠县\",\"pid\":511700,\"level\":3},{\"id\":511781,\"name\":\"万源市\",\"pid\":511700,\"level\":3}]},{\"id\":511800,\"name\":\"雅安市\",\"pid\":510000,\"level\":2,\"children\":[{\"id\":511802,\"name\":\"雨城区\",\"pid\":511800,\"level\":3},{\"id\":511803,\"name\":\"名山区\",\"pid\":511800,\"level\":3},{\"id\":511822,\"name\":\"荥经县\",\"pid\":511800,\"level\":3},{\"id\":511823,\"name\":\"汉源县\",\"pid\":511800,\"level\":3},{\"id\":511824,\"name\":\"石棉县\",\"pid\":511800,\"level\":3},{\"id\":511825,\"name\":\"天全县\",\"pid\":511800,\"level\":3},{\"id\":511826,\"name\":\"芦山县\",\"pid\":511800,\"level\":3},{\"id\":511827,\"name\":\"宝兴县\",\"pid\":511800,\"level\":3}]},{\"id\":511900,\"name\":\"巴中市\",\"pid\":510000,\"level\":2,\"children\":[{\"id\":511902,\"name\":\"巴州区\",\"pid\":511900,\"level\":3},{\"id\":511903,\"name\":\"恩阳区\",\"pid\":511900,\"level\":3},{\"id\":511921,\"name\":\"通江县\",\"pid\":511900,\"level\":3},{\"id\":511922,\"name\":\"南江县\",\"pid\":511900,\"level\":3},{\"id\":511923,\"name\":\"平昌县\",\"pid\":511900,\"level\":3}]},{\"id\":512000,\"name\":\"资阳市\",\"pid\":510000,\"level\":2,\"children\":[{\"id\":512002,\"name\":\"雁江区\",\"pid\":512000,\"level\":3},{\"id\":512021,\"name\":\"安岳县\",\"pid\":512000,\"level\":3},{\"id\":512022,\"name\":\"乐至县\",\"pid\":512000,\"level\":3},{\"id\":512081,\"name\":\"简阳市\",\"pid\":512000,\"level\":3}]},{\"id\":513200,\"name\":\"阿坝藏族羌族自治州\",\"pid\":510000,\"level\":2,\"children\":[{\"id\":513221,\"name\":\"汶川县\",\"pid\":513200,\"level\":3},{\"id\":513222,\"name\":\"理县\",\"pid\":513200,\"level\":3},{\"id\":513223,\"name\":\"茂县\",\"pid\":513200,\"level\":3},{\"id\":513224,\"name\":\"松潘县\",\"pid\":513200,\"level\":3},{\"id\":513225,\"name\":\"九寨沟县\",\"pid\":513200,\"level\":3},{\"id\":513226,\"name\":\"金川县\",\"pid\":513200,\"level\":3},{\"id\":513227,\"name\":\"小金县\",\"pid\":513200,\"level\":3},{\"id\":513228,\"name\":\"黑水县\",\"pid\":513200,\"level\":3},{\"id\":513229,\"name\":\"马尔康县\",\"pid\":513200,\"level\":3},{\"id\":513230,\"name\":\"壤塘县\",\"pid\":513200,\"level\":3},{\"id\":513231,\"name\":\"阿坝县\",\"pid\":513200,\"level\":3},{\"id\":513232,\"name\":\"若尔盖县\",\"pid\":513200,\"level\":3},{\"id\":513233,\"name\":\"红原县\",\"pid\":513200,\"level\":3}]},{\"id\":513300,\"name\":\"甘孜藏族自治州\",\"pid\":510000,\"level\":2,\"children\":[{\"id\":513321,\"name\":\"康定县\",\"pid\":513300,\"level\":3},{\"id\":513322,\"name\":\"泸定县\",\"pid\":513300,\"level\":3},{\"id\":513323,\"name\":\"丹巴县\",\"pid\":513300,\"level\":3},{\"id\":513324,\"name\":\"九龙县\",\"pid\":513300,\"level\":3},{\"id\":513325,\"name\":\"雅江县\",\"pid\":513300,\"level\":3},{\"id\":513326,\"name\":\"道孚县\",\"pid\":513300,\"level\":3},{\"id\":513327,\"name\":\"炉霍县\",\"pid\":513300,\"level\":3},{\"id\":513328,\"name\":\"甘孜县\",\"pid\":513300,\"level\":3},{\"id\":513329,\"name\":\"新龙县\",\"pid\":513300,\"level\":3},{\"id\":513330,\"name\":\"德格县\",\"pid\":513300,\"level\":3},{\"id\":513331,\"name\":\"白玉县\",\"pid\":513300,\"level\":3},{\"id\":513332,\"name\":\"石渠县\",\"pid\":513300,\"level\":3},{\"id\":513333,\"name\":\"色达县\",\"pid\":513300,\"level\":3},{\"id\":513334,\"name\":\"理塘县\",\"pid\":513300,\"level\":3},{\"id\":513335,\"name\":\"巴塘县\",\"pid\":513300,\"level\":3},{\"id\":513336,\"name\":\"乡城县\",\"pid\":513300,\"level\":3},{\"id\":513337,\"name\":\"稻城县\",\"pid\":513300,\"level\":3},{\"id\":513338,\"name\":\"得荣县\",\"pid\":513300,\"level\":3}]},{\"id\":513400,\"name\":\"凉山彝族自治州\",\"pid\":510000,\"level\":2,\"children\":[{\"id\":513401,\"name\":\"西昌市\",\"pid\":513400,\"level\":3},{\"id\":513422,\"name\":\"木里藏族自治县\",\"pid\":513400,\"level\":3},{\"id\":513423,\"name\":\"盐源县\",\"pid\":513400,\"level\":3},{\"id\":513424,\"name\":\"德昌县\",\"pid\":513400,\"level\":3},{\"id\":513425,\"name\":\"会理县\",\"pid\":513400,\"level\":3},{\"id\":513426,\"name\":\"会东县\",\"pid\":513400,\"level\":3},{\"id\":513427,\"name\":\"宁南县\",\"pid\":513400,\"level\":3},{\"id\":513428,\"name\":\"普格县\",\"pid\":513400,\"level\":3},{\"id\":513429,\"name\":\"布拖县\",\"pid\":513400,\"level\":3},{\"id\":513430,\"name\":\"金阳县\",\"pid\":513400,\"level\":3},{\"id\":513431,\"name\":\"昭觉县\",\"pid\":513400,\"level\":3},{\"id\":513432,\"name\":\"喜德县\",\"pid\":513400,\"level\":3},{\"id\":513433,\"name\":\"冕宁县\",\"pid\":513400,\"level\":3},{\"id\":513434,\"name\":\"越西县\",\"pid\":513400,\"level\":3},{\"id\":513435,\"name\":\"甘洛县\",\"pid\":513400,\"level\":3},{\"id\":513436,\"name\":\"美姑县\",\"pid\":513400,\"level\":3},{\"id\":513437,\"name\":\"雷波县\",\"pid\":513400,\"level\":3}]}]},{\"id\":520000,\"name\":\"贵州省\",\"pid\":100000,\"level\":1,\"children\":[{\"id\":520100,\"name\":\"贵阳市\",\"pid\":520000,\"level\":2,\"children\":[{\"id\":520102,\"name\":\"南明区\",\"pid\":520100,\"level\":3},{\"id\":520103,\"name\":\"云岩区\",\"pid\":520100,\"level\":3},{\"id\":520111,\"name\":\"花溪区\",\"pid\":520100,\"level\":3},{\"id\":520112,\"name\":\"乌当区\",\"pid\":520100,\"level\":3},{\"id\":520113,\"name\":\"白云区\",\"pid\":520100,\"level\":3},{\"id\":520115,\"name\":\"观山湖区\",\"pid\":520100,\"level\":3},{\"id\":520121,\"name\":\"开阳县\",\"pid\":520100,\"level\":3},{\"id\":520122,\"name\":\"息烽县\",\"pid\":520100,\"level\":3},{\"id\":520123,\"name\":\"修文县\",\"pid\":520100,\"level\":3},{\"id\":520181,\"name\":\"清镇市\",\"pid\":520100,\"level\":3}]},{\"id\":520200,\"name\":\"六盘水市\",\"pid\":520000,\"level\":2,\"children\":[{\"id\":520201,\"name\":\"钟山区\",\"pid\":520200,\"level\":3},{\"id\":520203,\"name\":\"六枝特区\",\"pid\":520200,\"level\":3},{\"id\":520221,\"name\":\"水城县\",\"pid\":520200,\"level\":3},{\"id\":520222,\"name\":\"盘县\",\"pid\":520200,\"level\":3}]},{\"id\":520300,\"name\":\"遵义市\",\"pid\":520000,\"level\":2,\"children\":[{\"id\":520302,\"name\":\"红花岗区\",\"pid\":520300,\"level\":3},{\"id\":520303,\"name\":\"汇川区\",\"pid\":520300,\"level\":3},{\"id\":520321,\"name\":\"遵义县\",\"pid\":520300,\"level\":3},{\"id\":520322,\"name\":\"桐梓县\",\"pid\":520300,\"level\":3},{\"id\":520323,\"name\":\"绥阳县\",\"pid\":520300,\"level\":3},{\"id\":520324,\"name\":\"正安县\",\"pid\":520300,\"level\":3},{\"id\":520325,\"name\":\"道真仡佬族苗族自治县\",\"pid\":520300,\"level\":3},{\"id\":520326,\"name\":\"务川仡佬族苗族自治县\",\"pid\":520300,\"level\":3},{\"id\":520327,\"name\":\"凤冈县\",\"pid\":520300,\"level\":3},{\"id\":520328,\"name\":\"湄潭县\",\"pid\":520300,\"level\":3},{\"id\":520329,\"name\":\"余庆县\",\"pid\":520300,\"level\":3},{\"id\":520330,\"name\":\"习水县\",\"pid\":520300,\"level\":3},{\"id\":520381,\"name\":\"赤水市\",\"pid\":520300,\"level\":3},{\"id\":520382,\"name\":\"仁怀市\",\"pid\":520300,\"level\":3}]},{\"id\":520400,\"name\":\"安顺市\",\"pid\":520000,\"level\":2,\"children\":[{\"id\":520402,\"name\":\"西秀区\",\"pid\":520400,\"level\":3},{\"id\":520421,\"name\":\"平坝区\",\"pid\":520400,\"level\":3},{\"id\":520422,\"name\":\"普定县\",\"pid\":520400,\"level\":3},{\"id\":520423,\"name\":\"镇宁布依族苗族自治县\",\"pid\":520400,\"level\":3},{\"id\":520424,\"name\":\"关岭布依族苗族自治县\",\"pid\":520400,\"level\":3},{\"id\":520425,\"name\":\"紫云苗族布依族自治县\",\"pid\":520400,\"level\":3}]},{\"id\":520500,\"name\":\"毕节市\",\"pid\":520000,\"level\":2,\"children\":[{\"id\":520502,\"name\":\"七星关区\",\"pid\":520500,\"level\":3},{\"id\":520521,\"name\":\"大方县\",\"pid\":520500,\"level\":3},{\"id\":520522,\"name\":\"黔西县\",\"pid\":520500,\"level\":3},{\"id\":520523,\"name\":\"金沙县\",\"pid\":520500,\"level\":3},{\"id\":520524,\"name\":\"织金县\",\"pid\":520500,\"level\":3},{\"id\":520525,\"name\":\"纳雍县\",\"pid\":520500,\"level\":3},{\"id\":520526,\"name\":\"威宁彝族回族苗族自治县\",\"pid\":520500,\"level\":3},{\"id\":520527,\"name\":\"赫章县\",\"pid\":520500,\"level\":3}]},{\"id\":520600,\"name\":\"铜仁市\",\"pid\":520000,\"level\":2,\"children\":[{\"id\":520602,\"name\":\"碧江区\",\"pid\":520600,\"level\":3},{\"id\":520603,\"name\":\"万山区\",\"pid\":520600,\"level\":3},{\"id\":520621,\"name\":\"江口县\",\"pid\":520600,\"level\":3},{\"id\":520622,\"name\":\"玉屏侗族自治县\",\"pid\":520600,\"level\":3},{\"id\":520623,\"name\":\"石阡县\",\"pid\":520600,\"level\":3},{\"id\":520624,\"name\":\"思南县\",\"pid\":520600,\"level\":3},{\"id\":520625,\"name\":\"印江土家族苗族自治县\",\"pid\":520600,\"level\":3},{\"id\":520626,\"name\":\"德江县\",\"pid\":520600,\"level\":3},{\"id\":520627,\"name\":\"沿河土家族自治县\",\"pid\":520600,\"level\":3},{\"id\":520628,\"name\":\"松桃苗族自治县\",\"pid\":520600,\"level\":3}]},{\"id\":522300,\"name\":\"黔西南布依族苗族自治州\",\"pid\":520000,\"level\":2,\"children\":[{\"id\":522301,\"name\":\"兴义市 \",\"pid\":522300,\"level\":3},{\"id\":522322,\"name\":\"兴仁县\",\"pid\":522300,\"level\":3},{\"id\":522323,\"name\":\"普安县\",\"pid\":522300,\"level\":3},{\"id\":522324,\"name\":\"晴隆县\",\"pid\":522300,\"level\":3},{\"id\":522325,\"name\":\"贞丰县\",\"pid\":522300,\"level\":3},{\"id\":522326,\"name\":\"望谟县\",\"pid\":522300,\"level\":3},{\"id\":522327,\"name\":\"册亨县\",\"pid\":522300,\"level\":3},{\"id\":522328,\"name\":\"安龙县\",\"pid\":522300,\"level\":3}]},{\"id\":522600,\"name\":\"黔东南苗族侗族自治州\",\"pid\":520000,\"level\":2,\"children\":[{\"id\":522601,\"name\":\"凯里市\",\"pid\":522600,\"level\":3},{\"id\":522622,\"name\":\"黄平县\",\"pid\":522600,\"level\":3},{\"id\":522623,\"name\":\"施秉县\",\"pid\":522600,\"level\":3},{\"id\":522624,\"name\":\"三穗县\",\"pid\":522600,\"level\":3},{\"id\":522625,\"name\":\"镇远县\",\"pid\":522600,\"level\":3},{\"id\":522626,\"name\":\"岑巩县\",\"pid\":522600,\"level\":3},{\"id\":522627,\"name\":\"天柱县\",\"pid\":522600,\"level\":3},{\"id\":522628,\"name\":\"锦屏县\",\"pid\":522600,\"level\":3},{\"id\":522629,\"name\":\"剑河县\",\"pid\":522600,\"level\":3},{\"id\":522630,\"name\":\"台江县\",\"pid\":522600,\"level\":3},{\"id\":522631,\"name\":\"黎平县\",\"pid\":522600,\"level\":3},{\"id\":522632,\"name\":\"榕江县\",\"pid\":522600,\"level\":3},{\"id\":522633,\"name\":\"从江县\",\"pid\":522600,\"level\":3},{\"id\":522634,\"name\":\"雷山县\",\"pid\":522600,\"level\":3},{\"id\":522635,\"name\":\"麻江县\",\"pid\":522600,\"level\":3},{\"id\":522636,\"name\":\"丹寨县\",\"pid\":522600,\"level\":3}]},{\"id\":522700,\"name\":\"黔南布依族苗族自治州\",\"pid\":520000,\"level\":2,\"children\":[{\"id\":522701,\"name\":\"都匀市\",\"pid\":522700,\"level\":3},{\"id\":522702,\"name\":\"福泉市\",\"pid\":522700,\"level\":3},{\"id\":522722,\"name\":\"荔波县\",\"pid\":522700,\"level\":3},{\"id\":522723,\"name\":\"贵定县\",\"pid\":522700,\"level\":3},{\"id\":522725,\"name\":\"瓮安县\",\"pid\":522700,\"level\":3},{\"id\":522726,\"name\":\"独山县\",\"pid\":522700,\"level\":3},{\"id\":522727,\"name\":\"平塘县\",\"pid\":522700,\"level\":3},{\"id\":522728,\"name\":\"罗甸县\",\"pid\":522700,\"level\":3},{\"id\":522729,\"name\":\"长顺县\",\"pid\":522700,\"level\":3},{\"id\":522730,\"name\":\"龙里县\",\"pid\":522700,\"level\":3},{\"id\":522731,\"name\":\"惠水县\",\"pid\":522700,\"level\":3},{\"id\":522732,\"name\":\"三都水族自治县\",\"pid\":522700,\"level\":3}]}]},{\"id\":530000,\"name\":\"云南省\",\"pid\":100000,\"level\":1,\"children\":[{\"id\":530100,\"name\":\"昆明市\",\"pid\":530000,\"level\":2,\"children\":[{\"id\":530102,\"name\":\"五华区\",\"pid\":530100,\"level\":3},{\"id\":530103,\"name\":\"盘龙区\",\"pid\":530100,\"level\":3},{\"id\":530111,\"name\":\"官渡区\",\"pid\":530100,\"level\":3},{\"id\":530112,\"name\":\"西山区\",\"pid\":530100,\"level\":3},{\"id\":530113,\"name\":\"东川区\",\"pid\":530100,\"level\":3},{\"id\":530114,\"name\":\"呈贡区\",\"pid\":530100,\"level\":3},{\"id\":530122,\"name\":\"晋宁县\",\"pid\":530100,\"level\":3},{\"id\":530124,\"name\":\"富民县\",\"pid\":530100,\"level\":3},{\"id\":530125,\"name\":\"宜良县\",\"pid\":530100,\"level\":3},{\"id\":530126,\"name\":\"石林彝族自治县\",\"pid\":530100,\"level\":3},{\"id\":530127,\"name\":\"嵩明县\",\"pid\":530100,\"level\":3},{\"id\":530128,\"name\":\"禄劝彝族苗族自治县\",\"pid\":530100,\"level\":3},{\"id\":530129,\"name\":\"寻甸回族彝族自治县 \",\"pid\":530100,\"level\":3},{\"id\":530181,\"name\":\"安宁市\",\"pid\":530100,\"level\":3}]},{\"id\":530300,\"name\":\"曲靖市\",\"pid\":530000,\"level\":2,\"children\":[{\"id\":530302,\"name\":\"麒麟区\",\"pid\":530300,\"level\":3},{\"id\":530321,\"name\":\"马龙县\",\"pid\":530300,\"level\":3},{\"id\":530322,\"name\":\"陆良县\",\"pid\":530300,\"level\":3},{\"id\":530323,\"name\":\"师宗县\",\"pid\":530300,\"level\":3},{\"id\":530324,\"name\":\"罗平县\",\"pid\":530300,\"level\":3},{\"id\":530325,\"name\":\"富源县\",\"pid\":530300,\"level\":3},{\"id\":530326,\"name\":\"会泽县\",\"pid\":530300,\"level\":3},{\"id\":530328,\"name\":\"沾益县\",\"pid\":530300,\"level\":3},{\"id\":530381,\"name\":\"宣威市\",\"pid\":530300,\"level\":3}]},{\"id\":530400,\"name\":\"玉溪市\",\"pid\":530000,\"level\":2,\"children\":[{\"id\":530402,\"name\":\"红塔区\",\"pid\":530400,\"level\":3},{\"id\":530421,\"name\":\"江川县\",\"pid\":530400,\"level\":3},{\"id\":530422,\"name\":\"澄江县\",\"pid\":530400,\"level\":3},{\"id\":530423,\"name\":\"通海县\",\"pid\":530400,\"level\":3},{\"id\":530424,\"name\":\"华宁县\",\"pid\":530400,\"level\":3},{\"id\":530425,\"name\":\"易门县\",\"pid\":530400,\"level\":3},{\"id\":530426,\"name\":\"峨山彝族自治县\",\"pid\":530400,\"level\":3},{\"id\":530427,\"name\":\"新平彝族傣族自治县\",\"pid\":530400,\"level\":3},{\"id\":530428,\"name\":\"元江哈尼族彝族傣族自治县\",\"pid\":530400,\"level\":3}]},{\"id\":530500,\"name\":\"保山市\",\"pid\":530000,\"level\":2,\"children\":[{\"id\":530502,\"name\":\"隆阳区\",\"pid\":530500,\"level\":3},{\"id\":530521,\"name\":\"施甸县\",\"pid\":530500,\"level\":3},{\"id\":530522,\"name\":\"腾冲县\",\"pid\":530500,\"level\":3},{\"id\":530523,\"name\":\"龙陵县\",\"pid\":530500,\"level\":3},{\"id\":530524,\"name\":\"昌宁县\",\"pid\":530500,\"level\":3}]},{\"id\":530600,\"name\":\"昭通市\",\"pid\":530000,\"level\":2,\"children\":[{\"id\":530602,\"name\":\"昭阳区\",\"pid\":530600,\"level\":3},{\"id\":530621,\"name\":\"鲁甸县\",\"pid\":530600,\"level\":3},{\"id\":530622,\"name\":\"巧家县\",\"pid\":530600,\"level\":3},{\"id\":530623,\"name\":\"盐津县\",\"pid\":530600,\"level\":3},{\"id\":530624,\"name\":\"大关县\",\"pid\":530600,\"level\":3},{\"id\":530625,\"name\":\"永善县\",\"pid\":530600,\"level\":3},{\"id\":530626,\"name\":\"绥江县\",\"pid\":530600,\"level\":3},{\"id\":530627,\"name\":\"镇雄县\",\"pid\":530600,\"level\":3},{\"id\":530628,\"name\":\"彝良县\",\"pid\":530600,\"level\":3},{\"id\":530629,\"name\":\"威信县\",\"pid\":530600,\"level\":3},{\"id\":530630,\"name\":\"水富县\",\"pid\":530600,\"level\":3}]},{\"id\":530700,\"name\":\"丽江市\",\"pid\":530000,\"level\":2,\"children\":[{\"id\":530702,\"name\":\"古城区\",\"pid\":530700,\"level\":3},{\"id\":530721,\"name\":\"玉龙纳西族自治县\",\"pid\":530700,\"level\":3},{\"id\":530722,\"name\":\"永胜县\",\"pid\":530700,\"level\":3},{\"id\":530723,\"name\":\"华坪县\",\"pid\":530700,\"level\":3},{\"id\":530724,\"name\":\"宁蒗彝族自治县\",\"pid\":530700,\"level\":3}]},{\"id\":530800,\"name\":\"普洱市\",\"pid\":530000,\"level\":2,\"children\":[{\"id\":530802,\"name\":\"思茅区\",\"pid\":530800,\"level\":3},{\"id\":530821,\"name\":\"宁洱哈尼族彝族自治县\",\"pid\":530800,\"level\":3},{\"id\":530822,\"name\":\"墨江哈尼族自治县\",\"pid\":530800,\"level\":3},{\"id\":530823,\"name\":\"景东彝族自治县\",\"pid\":530800,\"level\":3},{\"id\":530824,\"name\":\"景谷傣族彝族自治县\",\"pid\":530800,\"level\":3},{\"id\":530825,\"name\":\"镇沅彝族哈尼族拉祜族自治县\",\"pid\":530800,\"level\":3},{\"id\":530826,\"name\":\"江城哈尼族彝族自治县\",\"pid\":530800,\"level\":3},{\"id\":530827,\"name\":\"孟连傣族拉祜族佤族自治县\",\"pid\":530800,\"level\":3},{\"id\":530828,\"name\":\"澜沧拉祜族自治县\",\"pid\":530800,\"level\":3},{\"id\":530829,\"name\":\"西盟佤族自治县\",\"pid\":530800,\"level\":3}]},{\"id\":530900,\"name\":\"临沧市\",\"pid\":530000,\"level\":2,\"children\":[{\"id\":530902,\"name\":\"临翔区\",\"pid\":530900,\"level\":3},{\"id\":530921,\"name\":\"凤庆县\",\"pid\":530900,\"level\":3},{\"id\":530922,\"name\":\"云县\",\"pid\":530900,\"level\":3},{\"id\":530923,\"name\":\"永德县\",\"pid\":530900,\"level\":3},{\"id\":530924,\"name\":\"镇康县\",\"pid\":530900,\"level\":3},{\"id\":530925,\"name\":\"双江拉祜族佤族布朗族傣族自治县\",\"pid\":530900,\"level\":3},{\"id\":530926,\"name\":\"耿马傣族佤族自治县\",\"pid\":530900,\"level\":3},{\"id\":530927,\"name\":\"沧源佤族自治县\",\"pid\":530900,\"level\":3}]},{\"id\":532300,\"name\":\"楚雄彝族自治州\",\"pid\":530000,\"level\":2,\"children\":[{\"id\":532301,\"name\":\"楚雄市\",\"pid\":532300,\"level\":3},{\"id\":532322,\"name\":\"双柏县\",\"pid\":532300,\"level\":3},{\"id\":532323,\"name\":\"牟定县\",\"pid\":532300,\"level\":3},{\"id\":532324,\"name\":\"南华县\",\"pid\":532300,\"level\":3},{\"id\":532325,\"name\":\"姚安县\",\"pid\":532300,\"level\":3},{\"id\":532326,\"name\":\"大姚县\",\"pid\":532300,\"level\":3},{\"id\":532327,\"name\":\"永仁县\",\"pid\":532300,\"level\":3},{\"id\":532328,\"name\":\"元谋县\",\"pid\":532300,\"level\":3},{\"id\":532329,\"name\":\"武定县\",\"pid\":532300,\"level\":3},{\"id\":532331,\"name\":\"禄丰县\",\"pid\":532300,\"level\":3}]},{\"id\":532500,\"name\":\"红河哈尼族彝族自治州\",\"pid\":530000,\"level\":2,\"children\":[{\"id\":532501,\"name\":\"个旧市\",\"pid\":532500,\"level\":3},{\"id\":532502,\"name\":\"开远市\",\"pid\":532500,\"level\":3},{\"id\":532503,\"name\":\"蒙自市\",\"pid\":532500,\"level\":3},{\"id\":532504,\"name\":\"弥勒市\",\"pid\":532500,\"level\":3},{\"id\":532523,\"name\":\"屏边苗族自治县\",\"pid\":532500,\"level\":3},{\"id\":532524,\"name\":\"建水县\",\"pid\":532500,\"level\":3},{\"id\":532525,\"name\":\"石屏县\",\"pid\":532500,\"level\":3},{\"id\":532527,\"name\":\"泸西县\",\"pid\":532500,\"level\":3},{\"id\":532528,\"name\":\"元阳县\",\"pid\":532500,\"level\":3},{\"id\":532529,\"name\":\"红河县\",\"pid\":532500,\"level\":3},{\"id\":532530,\"name\":\"金平苗族瑶族傣族自治县\",\"pid\":532500,\"level\":3},{\"id\":532531,\"name\":\"绿春县\",\"pid\":532500,\"level\":3},{\"id\":532532,\"name\":\"河口瑶族自治县\",\"pid\":532500,\"level\":3}]},{\"id\":532600,\"name\":\"文山壮族苗族自治州\",\"pid\":530000,\"level\":2,\"children\":[{\"id\":532601,\"name\":\"文山市\",\"pid\":532600,\"level\":3},{\"id\":532622,\"name\":\"砚山县\",\"pid\":532600,\"level\":3},{\"id\":532623,\"name\":\"西畴县\",\"pid\":532600,\"level\":3},{\"id\":532624,\"name\":\"麻栗坡县\",\"pid\":532600,\"level\":3},{\"id\":532625,\"name\":\"马关县\",\"pid\":532600,\"level\":3},{\"id\":532626,\"name\":\"丘北县\",\"pid\":532600,\"level\":3},{\"id\":532627,\"name\":\"广南县\",\"pid\":532600,\"level\":3},{\"id\":532628,\"name\":\"富宁县\",\"pid\":532600,\"level\":3}]},{\"id\":532800,\"name\":\"西双版纳傣族自治州\",\"pid\":530000,\"level\":2,\"children\":[{\"id\":532801,\"name\":\"景洪市\",\"pid\":532800,\"level\":3},{\"id\":532822,\"name\":\"勐海县\",\"pid\":532800,\"level\":3},{\"id\":532823,\"name\":\"勐腊县\",\"pid\":532800,\"level\":3}]},{\"id\":532900,\"name\":\"大理白族自治州\",\"pid\":530000,\"level\":2,\"children\":[{\"id\":532901,\"name\":\"大理市\",\"pid\":532900,\"level\":3},{\"id\":532922,\"name\":\"漾濞彝族自治县\",\"pid\":532900,\"level\":3},{\"id\":532923,\"name\":\"祥云县\",\"pid\":532900,\"level\":3},{\"id\":532924,\"name\":\"宾川县\",\"pid\":532900,\"level\":3},{\"id\":532925,\"name\":\"弥渡县\",\"pid\":532900,\"level\":3},{\"id\":532926,\"name\":\"南涧彝族自治县\",\"pid\":532900,\"level\":3},{\"id\":532927,\"name\":\"巍山彝族回族自治县\",\"pid\":532900,\"level\":3},{\"id\":532928,\"name\":\"永平县\",\"pid\":532900,\"level\":3},{\"id\":532929,\"name\":\"云龙县\",\"pid\":532900,\"level\":3},{\"id\":532930,\"name\":\"洱源县\",\"pid\":532900,\"level\":3},{\"id\":532931,\"name\":\"剑川县\",\"pid\":532900,\"level\":3},{\"id\":532932,\"name\":\"鹤庆县\",\"pid\":532900,\"level\":3}]},{\"id\":533100,\"name\":\"德宏傣族景颇族自治州\",\"pid\":530000,\"level\":2,\"children\":[{\"id\":533102,\"name\":\"瑞丽市\",\"pid\":533100,\"level\":3},{\"id\":533103,\"name\":\"芒市\",\"pid\":533100,\"level\":3},{\"id\":533122,\"name\":\"梁河县\",\"pid\":533100,\"level\":3},{\"id\":533123,\"name\":\"盈江县\",\"pid\":533100,\"level\":3},{\"id\":533124,\"name\":\"陇川县\",\"pid\":533100,\"level\":3}]},{\"id\":533300,\"name\":\"怒江傈僳族自治州\",\"pid\":530000,\"level\":2,\"children\":[{\"id\":533321,\"name\":\"泸水县\",\"pid\":533300,\"level\":3},{\"id\":533323,\"name\":\"福贡县\",\"pid\":533300,\"level\":3},{\"id\":533324,\"name\":\"贡山独龙族怒族自治县\",\"pid\":533300,\"level\":3},{\"id\":533325,\"name\":\"兰坪白族普米族自治县\",\"pid\":533300,\"level\":3}]},{\"id\":533400,\"name\":\"迪庆藏族自治州\",\"pid\":530000,\"level\":2,\"children\":[{\"id\":533421,\"name\":\"香格里拉市\",\"pid\":533400,\"level\":3},{\"id\":533422,\"name\":\"德钦县\",\"pid\":533400,\"level\":3},{\"id\":533423,\"name\":\"维西傈僳族自治县\",\"pid\":533400,\"level\":3}]}]},{\"id\":540000,\"name\":\"西藏自治区\",\"pid\":100000,\"level\":1,\"children\":[{\"id\":540100,\"name\":\"拉萨市\",\"pid\":540000,\"level\":2,\"children\":[{\"id\":540102,\"name\":\"城关区\",\"pid\":540100,\"level\":3},{\"id\":540121,\"name\":\"林周县\",\"pid\":540100,\"level\":3},{\"id\":540122,\"name\":\"当雄县\",\"pid\":540100,\"level\":3},{\"id\":540123,\"name\":\"尼木县\",\"pid\":540100,\"level\":3},{\"id\":540124,\"name\":\"曲水县\",\"pid\":540100,\"level\":3},{\"id\":540125,\"name\":\"堆龙德庆县\",\"pid\":540100,\"level\":3},{\"id\":540126,\"name\":\"达孜县\",\"pid\":540100,\"level\":3},{\"id\":540127,\"name\":\"墨竹工卡县\",\"pid\":540100,\"level\":3}]},{\"id\":540200,\"name\":\"日喀则市\",\"pid\":540000,\"level\":2,\"children\":[{\"id\":540202,\"name\":\"桑珠孜区\",\"pid\":540200,\"level\":3},{\"id\":540221,\"name\":\"南木林县\",\"pid\":540200,\"level\":3},{\"id\":540222,\"name\":\"江孜县\",\"pid\":540200,\"level\":3},{\"id\":540223,\"name\":\"定日县\",\"pid\":540200,\"level\":3},{\"id\":540224,\"name\":\"萨迦县\",\"pid\":540200,\"level\":3},{\"id\":540225,\"name\":\"拉孜县\",\"pid\":540200,\"level\":3},{\"id\":540226,\"name\":\"昂仁县\",\"pid\":540200,\"level\":3},{\"id\":540227,\"name\":\"谢通门县\",\"pid\":540200,\"level\":3},{\"id\":540228,\"name\":\"白朗县\",\"pid\":540200,\"level\":3},{\"id\":540229,\"name\":\"仁布县\",\"pid\":540200,\"level\":3},{\"id\":540230,\"name\":\"康马县\",\"pid\":540200,\"level\":3},{\"id\":540231,\"name\":\"定结县\",\"pid\":540200,\"level\":3},{\"id\":540232,\"name\":\"仲巴县\",\"pid\":540200,\"level\":3},{\"id\":540233,\"name\":\"亚东县\",\"pid\":540200,\"level\":3},{\"id\":540234,\"name\":\"吉隆县\",\"pid\":540200,\"level\":3},{\"id\":540235,\"name\":\"聂拉木县\",\"pid\":540200,\"level\":3},{\"id\":540236,\"name\":\"萨嘎县\",\"pid\":540200,\"level\":3},{\"id\":540237,\"name\":\"岗巴县\",\"pid\":540200,\"level\":3}]},{\"id\":540300,\"name\":\"昌都市\",\"pid\":540000,\"level\":2,\"children\":[{\"id\":540302,\"name\":\"卡若区\",\"pid\":540300,\"level\":3},{\"id\":540321,\"name\":\"江达县\",\"pid\":540300,\"level\":3},{\"id\":540322,\"name\":\"贡觉县\",\"pid\":540300,\"level\":3},{\"id\":540323,\"name\":\"类乌齐县\",\"pid\":540300,\"level\":3},{\"id\":540324,\"name\":\"丁青县\",\"pid\":540300,\"level\":3},{\"id\":540325,\"name\":\"察雅县\",\"pid\":540300,\"level\":3},{\"id\":540326,\"name\":\"八宿县\",\"pid\":540300,\"level\":3},{\"id\":540327,\"name\":\"左贡县\",\"pid\":540300,\"level\":3},{\"id\":540328,\"name\":\"芒康县\",\"pid\":540300,\"level\":3},{\"id\":540329,\"name\":\"洛隆县\",\"pid\":540300,\"level\":3},{\"id\":540330,\"name\":\"边坝县\",\"pid\":540300,\"level\":3}]},{\"id\":542200,\"name\":\"山南地区\",\"pid\":540000,\"level\":2,\"children\":[{\"id\":542221,\"name\":\"乃东县\",\"pid\":542200,\"level\":3},{\"id\":542222,\"name\":\"扎囊县\",\"pid\":542200,\"level\":3},{\"id\":542223,\"name\":\"贡嘎县\",\"pid\":542200,\"level\":3},{\"id\":542224,\"name\":\"桑日县\",\"pid\":542200,\"level\":3},{\"id\":542225,\"name\":\"琼结县\",\"pid\":542200,\"level\":3},{\"id\":542226,\"name\":\"曲松县\",\"pid\":542200,\"level\":3},{\"id\":542227,\"name\":\"措美县\",\"pid\":542200,\"level\":3},{\"id\":542228,\"name\":\"洛扎县\",\"pid\":542200,\"level\":3},{\"id\":542229,\"name\":\"加查县\",\"pid\":542200,\"level\":3},{\"id\":542231,\"name\":\"隆子县\",\"pid\":542200,\"level\":3},{\"id\":542232,\"name\":\"错那县\",\"pid\":542200,\"level\":3},{\"id\":542233,\"name\":\"浪卡子县\",\"pid\":542200,\"level\":3}]},{\"id\":542400,\"name\":\"那曲地区\",\"pid\":540000,\"level\":2,\"children\":[{\"id\":542421,\"name\":\"那曲县\",\"pid\":542400,\"level\":3},{\"id\":542422,\"name\":\"嘉黎县\",\"pid\":542400,\"level\":3},{\"id\":542423,\"name\":\"比如县\",\"pid\":542400,\"level\":3},{\"id\":542424,\"name\":\"聂荣县\",\"pid\":542400,\"level\":3},{\"id\":542425,\"name\":\"安多县\",\"pid\":542400,\"level\":3},{\"id\":542426,\"name\":\"申扎县\",\"pid\":542400,\"level\":3},{\"id\":542427,\"name\":\"索县\",\"pid\":542400,\"level\":3},{\"id\":542428,\"name\":\"班戈县\",\"pid\":542400,\"level\":3},{\"id\":542429,\"name\":\"巴青县\",\"pid\":542400,\"level\":3},{\"id\":542430,\"name\":\"尼玛县\",\"pid\":542400,\"level\":3},{\"id\":542431,\"name\":\"双湖县\",\"pid\":542400,\"level\":3}]},{\"id\":542500,\"name\":\"阿里地区\",\"pid\":540000,\"level\":2,\"children\":[{\"id\":542521,\"name\":\"普兰县\",\"pid\":542500,\"level\":3},{\"id\":542522,\"name\":\"札达县\",\"pid\":542500,\"level\":3},{\"id\":542523,\"name\":\"噶尔县\",\"pid\":542500,\"level\":3},{\"id\":542524,\"name\":\"日土县\",\"pid\":542500,\"level\":3},{\"id\":542525,\"name\":\"革吉县\",\"pid\":542500,\"level\":3},{\"id\":542526,\"name\":\"改则县\",\"pid\":542500,\"level\":3},{\"id\":542527,\"name\":\"措勤县\",\"pid\":542500,\"level\":3}]},{\"id\":542600,\"name\":\"林芝地区\",\"pid\":540000,\"level\":2,\"children\":[{\"id\":542621,\"name\":\"林芝县\",\"pid\":542600,\"level\":3},{\"id\":542622,\"name\":\"工布江达县\",\"pid\":542600,\"level\":3},{\"id\":542623,\"name\":\"米林县\",\"pid\":542600,\"level\":3},{\"id\":542624,\"name\":\"墨脱县\",\"pid\":542600,\"level\":3},{\"id\":542625,\"name\":\"波密县\",\"pid\":542600,\"level\":3},{\"id\":542626,\"name\":\"察隅县\",\"pid\":542600,\"level\":3},{\"id\":542627,\"name\":\"朗县\",\"pid\":542600,\"level\":3}]}]},{\"id\":610000,\"name\":\"陕西省\",\"pid\":100000,\"level\":1,\"children\":[{\"id\":610100,\"name\":\"西安市\",\"pid\":610000,\"level\":2,\"children\":[{\"id\":610102,\"name\":\"新城区\",\"pid\":610100,\"level\":3},{\"id\":610103,\"name\":\"碑林区\",\"pid\":610100,\"level\":3},{\"id\":610104,\"name\":\"莲湖区\",\"pid\":610100,\"level\":3},{\"id\":610111,\"name\":\"灞桥区\",\"pid\":610100,\"level\":3},{\"id\":610112,\"name\":\"未央区\",\"pid\":610100,\"level\":3},{\"id\":610113,\"name\":\"雁塔区\",\"pid\":610100,\"level\":3},{\"id\":610114,\"name\":\"阎良区\",\"pid\":610100,\"level\":3},{\"id\":610115,\"name\":\"临潼区\",\"pid\":610100,\"level\":3},{\"id\":610116,\"name\":\"长安区\",\"pid\":610100,\"level\":3},{\"id\":610122,\"name\":\"蓝田县\",\"pid\":610100,\"level\":3},{\"id\":610124,\"name\":\"周至县\",\"pid\":610100,\"level\":3},{\"id\":610125,\"name\":\"户县\",\"pid\":610100,\"level\":3},{\"id\":610126,\"name\":\"高陵区\",\"pid\":610100,\"level\":3}]},{\"id\":610200,\"name\":\"铜川市\",\"pid\":610000,\"level\":2,\"children\":[{\"id\":610202,\"name\":\"王益区\",\"pid\":610200,\"level\":3},{\"id\":610203,\"name\":\"印台区\",\"pid\":610200,\"level\":3},{\"id\":610204,\"name\":\"耀州区\",\"pid\":610200,\"level\":3},{\"id\":610222,\"name\":\"宜君县\",\"pid\":610200,\"level\":3}]},{\"id\":610300,\"name\":\"宝鸡市\",\"pid\":610000,\"level\":2,\"children\":[{\"id\":610302,\"name\":\"渭滨区\",\"pid\":610300,\"level\":3},{\"id\":610303,\"name\":\"金台区\",\"pid\":610300,\"level\":3},{\"id\":610304,\"name\":\"陈仓区\",\"pid\":610300,\"level\":3},{\"id\":610322,\"name\":\"凤翔县\",\"pid\":610300,\"level\":3},{\"id\":610323,\"name\":\"岐山县\",\"pid\":610300,\"level\":3},{\"id\":610324,\"name\":\"扶风县\",\"pid\":610300,\"level\":3},{\"id\":610326,\"name\":\"眉县\",\"pid\":610300,\"level\":3},{\"id\":610327,\"name\":\"陇县\",\"pid\":610300,\"level\":3},{\"id\":610328,\"name\":\"千阳县\",\"pid\":610300,\"level\":3},{\"id\":610329,\"name\":\"麟游县\",\"pid\":610300,\"level\":3},{\"id\":610330,\"name\":\"凤县\",\"pid\":610300,\"level\":3},{\"id\":610331,\"name\":\"太白县\",\"pid\":610300,\"level\":3}]},{\"id\":610400,\"name\":\"咸阳市\",\"pid\":610000,\"level\":2,\"children\":[{\"id\":610402,\"name\":\"秦都区\",\"pid\":610400,\"level\":3},{\"id\":610403,\"name\":\"杨陵区\",\"pid\":610400,\"level\":3},{\"id\":610404,\"name\":\"渭城区\",\"pid\":610400,\"level\":3},{\"id\":610422,\"name\":\"三原县\",\"pid\":610400,\"level\":3},{\"id\":610423,\"name\":\"泾阳县\",\"pid\":610400,\"level\":3},{\"id\":610424,\"name\":\"乾县\",\"pid\":610400,\"level\":3},{\"id\":610425,\"name\":\"礼泉县\",\"pid\":610400,\"level\":3},{\"id\":610426,\"name\":\"永寿县\",\"pid\":610400,\"level\":3},{\"id\":610427,\"name\":\"彬县\",\"pid\":610400,\"level\":3},{\"id\":610428,\"name\":\"长武县\",\"pid\":610400,\"level\":3},{\"id\":610429,\"name\":\"旬邑县\",\"pid\":610400,\"level\":3},{\"id\":610430,\"name\":\"淳化县\",\"pid\":610400,\"level\":3},{\"id\":610431,\"name\":\"武功县\",\"pid\":610400,\"level\":3},{\"id\":610481,\"name\":\"兴平市\",\"pid\":610400,\"level\":3}]},{\"id\":610500,\"name\":\"渭南市\",\"pid\":610000,\"level\":2,\"children\":[{\"id\":610502,\"name\":\"临渭区\",\"pid\":610500,\"level\":3},{\"id\":610521,\"name\":\"华县\",\"pid\":610500,\"level\":3},{\"id\":610522,\"name\":\"潼关县\",\"pid\":610500,\"level\":3},{\"id\":610523,\"name\":\"大荔县\",\"pid\":610500,\"level\":3},{\"id\":610524,\"name\":\"合阳县\",\"pid\":610500,\"level\":3},{\"id\":610525,\"name\":\"澄城县\",\"pid\":610500,\"level\":3},{\"id\":610526,\"name\":\"蒲城县\",\"pid\":610500,\"level\":3},{\"id\":610527,\"name\":\"白水县\",\"pid\":610500,\"level\":3},{\"id\":610528,\"name\":\"富平县\",\"pid\":610500,\"level\":3},{\"id\":610581,\"name\":\"韩城市\",\"pid\":610500,\"level\":3},{\"id\":610582,\"name\":\"华阴市\",\"pid\":610500,\"level\":3}]},{\"id\":610600,\"name\":\"延安市\",\"pid\":610000,\"level\":2,\"children\":[{\"id\":610602,\"name\":\"宝塔区\",\"pid\":610600,\"level\":3},{\"id\":610621,\"name\":\"延长县\",\"pid\":610600,\"level\":3},{\"id\":610622,\"name\":\"延川县\",\"pid\":610600,\"level\":3},{\"id\":610623,\"name\":\"子长县\",\"pid\":610600,\"level\":3},{\"id\":610624,\"name\":\"安塞县\",\"pid\":610600,\"level\":3},{\"id\":610625,\"name\":\"志丹县\",\"pid\":610600,\"level\":3},{\"id\":610626,\"name\":\"吴起县\",\"pid\":610600,\"level\":3},{\"id\":610627,\"name\":\"甘泉县\",\"pid\":610600,\"level\":3},{\"id\":610628,\"name\":\"富县\",\"pid\":610600,\"level\":3},{\"id\":610629,\"name\":\"洛川县\",\"pid\":610600,\"level\":3},{\"id\":610630,\"name\":\"宜川县\",\"pid\":610600,\"level\":3},{\"id\":610631,\"name\":\"黄龙县\",\"pid\":610600,\"level\":3},{\"id\":610632,\"name\":\"黄陵县\",\"pid\":610600,\"level\":3}]},{\"id\":610700,\"name\":\"汉中市\",\"pid\":610000,\"level\":2,\"children\":[{\"id\":610702,\"name\":\"汉台区\",\"pid\":610700,\"level\":3},{\"id\":610721,\"name\":\"南郑县\",\"pid\":610700,\"level\":3},{\"id\":610722,\"name\":\"城固县\",\"pid\":610700,\"level\":3},{\"id\":610723,\"name\":\"洋县\",\"pid\":610700,\"level\":3},{\"id\":610724,\"name\":\"西乡县\",\"pid\":610700,\"level\":3},{\"id\":610725,\"name\":\"勉县\",\"pid\":610700,\"level\":3},{\"id\":610726,\"name\":\"宁强县\",\"pid\":610700,\"level\":3},{\"id\":610727,\"name\":\"略阳县\",\"pid\":610700,\"level\":3},{\"id\":610728,\"name\":\"镇巴县\",\"pid\":610700,\"level\":3},{\"id\":610729,\"name\":\"留坝县\",\"pid\":610700,\"level\":3},{\"id\":610730,\"name\":\"佛坪县\",\"pid\":610700,\"level\":3}]},{\"id\":610800,\"name\":\"榆林市\",\"pid\":610000,\"level\":2,\"children\":[{\"id\":610802,\"name\":\"榆阳区\",\"pid\":610800,\"level\":3},{\"id\":610821,\"name\":\"神木县\",\"pid\":610800,\"level\":3},{\"id\":610822,\"name\":\"府谷县\",\"pid\":610800,\"level\":3},{\"id\":610823,\"name\":\"横山县\",\"pid\":610800,\"level\":3},{\"id\":610824,\"name\":\"靖边县\",\"pid\":610800,\"level\":3},{\"id\":610825,\"name\":\"定边县\",\"pid\":610800,\"level\":3},{\"id\":610826,\"name\":\"绥德县\",\"pid\":610800,\"level\":3},{\"id\":610827,\"name\":\"米脂县\",\"pid\":610800,\"level\":3},{\"id\":610828,\"name\":\"佳县\",\"pid\":610800,\"level\":3},{\"id\":610829,\"name\":\"吴堡县\",\"pid\":610800,\"level\":3},{\"id\":610830,\"name\":\"清涧县\",\"pid\":610800,\"level\":3},{\"id\":610831,\"name\":\"子洲县\",\"pid\":610800,\"level\":3}]},{\"id\":610900,\"name\":\"安康市\",\"pid\":610000,\"level\":2,\"children\":[{\"id\":610902,\"name\":\"汉滨区\",\"pid\":610900,\"level\":3},{\"id\":610921,\"name\":\"汉阴县\",\"pid\":610900,\"level\":3},{\"id\":610922,\"name\":\"石泉县\",\"pid\":610900,\"level\":3},{\"id\":610923,\"name\":\"宁陕县\",\"pid\":610900,\"level\":3},{\"id\":610924,\"name\":\"紫阳县\",\"pid\":610900,\"level\":3},{\"id\":610925,\"name\":\"岚皋县\",\"pid\":610900,\"level\":3},{\"id\":610926,\"name\":\"平利县\",\"pid\":610900,\"level\":3},{\"id\":610927,\"name\":\"镇坪县\",\"pid\":610900,\"level\":3},{\"id\":610928,\"name\":\"旬阳县\",\"pid\":610900,\"level\":3},{\"id\":610929,\"name\":\"白河县\",\"pid\":610900,\"level\":3}]},{\"id\":611000,\"name\":\"商洛市\",\"pid\":610000,\"level\":2,\"children\":[{\"id\":611002,\"name\":\"商州区\",\"pid\":611000,\"level\":3},{\"id\":611021,\"name\":\"洛南县\",\"pid\":611000,\"level\":3},{\"id\":611022,\"name\":\"丹凤县\",\"pid\":611000,\"level\":3},{\"id\":611023,\"name\":\"商南县\",\"pid\":611000,\"level\":3},{\"id\":611024,\"name\":\"山阳县\",\"pid\":611000,\"level\":3},{\"id\":611025,\"name\":\"镇安县\",\"pid\":611000,\"level\":3},{\"id\":611026,\"name\":\"柞水县\",\"pid\":611000,\"level\":3}]},{\"id\":611100,\"name\":\"西咸新区\",\"pid\":610000,\"level\":2,\"children\":[{\"id\":611101,\"name\":\"空港新城\",\"pid\":611100,\"level\":3},{\"id\":611102,\"name\":\"沣东新城\",\"pid\":611100,\"level\":3},{\"id\":611103,\"name\":\"秦汉新城\",\"pid\":611100,\"level\":3},{\"id\":611104,\"name\":\"沣西新城\",\"pid\":611100,\"level\":3},{\"id\":611105,\"name\":\"泾河新城\",\"pid\":611100,\"level\":3}]}]},{\"id\":620000,\"name\":\"甘肃省\",\"pid\":100000,\"level\":1,\"children\":[{\"id\":620100,\"name\":\"兰州市\",\"pid\":620000,\"level\":2,\"children\":[{\"id\":620102,\"name\":\"城关区\",\"pid\":620100,\"level\":3},{\"id\":620103,\"name\":\"七里河区\",\"pid\":620100,\"level\":3},{\"id\":620104,\"name\":\"西固区\",\"pid\":620100,\"level\":3},{\"id\":620105,\"name\":\"安宁区\",\"pid\":620100,\"level\":3},{\"id\":620111,\"name\":\"红古区\",\"pid\":620100,\"level\":3},{\"id\":620121,\"name\":\"永登县\",\"pid\":620100,\"level\":3},{\"id\":620122,\"name\":\"皋兰县\",\"pid\":620100,\"level\":3},{\"id\":620123,\"name\":\"榆中县\",\"pid\":620100,\"level\":3}]},{\"id\":620200,\"name\":\"嘉峪关市\",\"pid\":620000,\"level\":2,\"children\":[{\"id\":620201,\"name\":\"雄关区\",\"pid\":620200,\"level\":3},{\"id\":620202,\"name\":\"长城区\",\"pid\":620200,\"level\":3},{\"id\":620203,\"name\":\"镜铁区\",\"pid\":620200,\"level\":3}]},{\"id\":620300,\"name\":\"金昌市\",\"pid\":620000,\"level\":2,\"children\":[{\"id\":620302,\"name\":\"金川区\",\"pid\":620300,\"level\":3},{\"id\":620321,\"name\":\"永昌县\",\"pid\":620300,\"level\":3}]},{\"id\":620400,\"name\":\"白银市\",\"pid\":620000,\"level\":2,\"children\":[{\"id\":620402,\"name\":\"白银区\",\"pid\":620400,\"level\":3},{\"id\":620403,\"name\":\"平川区\",\"pid\":620400,\"level\":3},{\"id\":620421,\"name\":\"靖远县\",\"pid\":620400,\"level\":3},{\"id\":620422,\"name\":\"会宁县\",\"pid\":620400,\"level\":3},{\"id\":620423,\"name\":\"景泰县\",\"pid\":620400,\"level\":3}]},{\"id\":620500,\"name\":\"天水市\",\"pid\":620000,\"level\":2,\"children\":[{\"id\":620502,\"name\":\"秦州区\",\"pid\":620500,\"level\":3},{\"id\":620503,\"name\":\"麦积区\",\"pid\":620500,\"level\":3},{\"id\":620521,\"name\":\"清水县\",\"pid\":620500,\"level\":3},{\"id\":620522,\"name\":\"秦安县\",\"pid\":620500,\"level\":3},{\"id\":620523,\"name\":\"甘谷县\",\"pid\":620500,\"level\":3},{\"id\":620524,\"name\":\"武山县\",\"pid\":620500,\"level\":3},{\"id\":620525,\"name\":\"张家川回族自治县\",\"pid\":620500,\"level\":3}]},{\"id\":620600,\"name\":\"武威市\",\"pid\":620000,\"level\":2,\"children\":[{\"id\":620602,\"name\":\"凉州区\",\"pid\":620600,\"level\":3},{\"id\":620621,\"name\":\"民勤县\",\"pid\":620600,\"level\":3},{\"id\":620622,\"name\":\"古浪县\",\"pid\":620600,\"level\":3},{\"id\":620623,\"name\":\"天祝藏族自治县\",\"pid\":620600,\"level\":3}]},{\"id\":620700,\"name\":\"张掖市\",\"pid\":620000,\"level\":2,\"children\":[{\"id\":620702,\"name\":\"甘州区\",\"pid\":620700,\"level\":3},{\"id\":620721,\"name\":\"肃南裕固族自治县\",\"pid\":620700,\"level\":3},{\"id\":620722,\"name\":\"民乐县\",\"pid\":620700,\"level\":3},{\"id\":620723,\"name\":\"临泽县\",\"pid\":620700,\"level\":3},{\"id\":620724,\"name\":\"高台县\",\"pid\":620700,\"level\":3},{\"id\":620725,\"name\":\"山丹县\",\"pid\":620700,\"level\":3}]},{\"id\":620800,\"name\":\"平凉市\",\"pid\":620000,\"level\":2,\"children\":[{\"id\":620802,\"name\":\"崆峒区\",\"pid\":620800,\"level\":3},{\"id\":620821,\"name\":\"泾川县\",\"pid\":620800,\"level\":3},{\"id\":620822,\"name\":\"灵台县\",\"pid\":620800,\"level\":3},{\"id\":620823,\"name\":\"崇信县\",\"pid\":620800,\"level\":3},{\"id\":620824,\"name\":\"华亭县\",\"pid\":620800,\"level\":3},{\"id\":620825,\"name\":\"庄浪县\",\"pid\":620800,\"level\":3},{\"id\":620826,\"name\":\"静宁县\",\"pid\":620800,\"level\":3}]},{\"id\":620900,\"name\":\"酒泉市\",\"pid\":620000,\"level\":2,\"children\":[{\"id\":620902,\"name\":\"肃州区\",\"pid\":620900,\"level\":3},{\"id\":620921,\"name\":\"金塔县\",\"pid\":620900,\"level\":3},{\"id\":620922,\"name\":\"瓜州县\",\"pid\":620900,\"level\":3},{\"id\":620923,\"name\":\"肃北蒙古族自治县\",\"pid\":620900,\"level\":3},{\"id\":620924,\"name\":\"阿克塞哈萨克族自治县\",\"pid\":620900,\"level\":3},{\"id\":620981,\"name\":\"玉门市\",\"pid\":620900,\"level\":3},{\"id\":620982,\"name\":\"敦煌市\",\"pid\":620900,\"level\":3}]},{\"id\":621000,\"name\":\"庆阳市\",\"pid\":620000,\"level\":2,\"children\":[{\"id\":621002,\"name\":\"西峰区\",\"pid\":621000,\"level\":3},{\"id\":621021,\"name\":\"庆城县\",\"pid\":621000,\"level\":3},{\"id\":621022,\"name\":\"环县\",\"pid\":621000,\"level\":3},{\"id\":621023,\"name\":\"华池县\",\"pid\":621000,\"level\":3},{\"id\":621024,\"name\":\"合水县\",\"pid\":621000,\"level\":3},{\"id\":621025,\"name\":\"正宁县\",\"pid\":621000,\"level\":3},{\"id\":621026,\"name\":\"宁县\",\"pid\":621000,\"level\":3},{\"id\":621027,\"name\":\"镇原县\",\"pid\":621000,\"level\":3}]},{\"id\":621100,\"name\":\"定西市\",\"pid\":620000,\"level\":2,\"children\":[{\"id\":621102,\"name\":\"安定区\",\"pid\":621100,\"level\":3},{\"id\":621121,\"name\":\"通渭县\",\"pid\":621100,\"level\":3},{\"id\":621122,\"name\":\"陇西县\",\"pid\":621100,\"level\":3},{\"id\":621123,\"name\":\"渭源县\",\"pid\":621100,\"level\":3},{\"id\":621124,\"name\":\"临洮县\",\"pid\":621100,\"level\":3},{\"id\":621125,\"name\":\"漳县\",\"pid\":621100,\"level\":3},{\"id\":621126,\"name\":\"岷县\",\"pid\":621100,\"level\":3}]},{\"id\":621200,\"name\":\"陇南市\",\"pid\":620000,\"level\":2,\"children\":[{\"id\":621202,\"name\":\"武都区\",\"pid\":621200,\"level\":3},{\"id\":621221,\"name\":\"成县\",\"pid\":621200,\"level\":3},{\"id\":621222,\"name\":\"文县\",\"pid\":621200,\"level\":3},{\"id\":621223,\"name\":\"宕昌县\",\"pid\":621200,\"level\":3},{\"id\":621224,\"name\":\"康县\",\"pid\":621200,\"level\":3},{\"id\":621225,\"name\":\"西和县\",\"pid\":621200,\"level\":3},{\"id\":621226,\"name\":\"礼县\",\"pid\":621200,\"level\":3},{\"id\":621227,\"name\":\"徽县\",\"pid\":621200,\"level\":3},{\"id\":621228,\"name\":\"两当县\",\"pid\":621200,\"level\":3}]},{\"id\":622900,\"name\":\"临夏回族自治州\",\"pid\":620000,\"level\":2,\"children\":[{\"id\":622901,\"name\":\"临夏市\",\"pid\":622900,\"level\":3},{\"id\":622921,\"name\":\"临夏县\",\"pid\":622900,\"level\":3},{\"id\":622922,\"name\":\"康乐县\",\"pid\":622900,\"level\":3},{\"id\":622923,\"name\":\"永靖县\",\"pid\":622900,\"level\":3},{\"id\":622924,\"name\":\"广河县\",\"pid\":622900,\"level\":3},{\"id\":622925,\"name\":\"和政县\",\"pid\":622900,\"level\":3},{\"id\":622926,\"name\":\"东乡族自治县\",\"pid\":622900,\"level\":3},{\"id\":622927,\"name\":\"积石山保安族东乡族撒拉族自治县\",\"pid\":622900,\"level\":3}]},{\"id\":623000,\"name\":\"甘南藏族自治州\",\"pid\":620000,\"level\":2,\"children\":[{\"id\":623001,\"name\":\"合作市\",\"pid\":623000,\"level\":3},{\"id\":623021,\"name\":\"临潭县\",\"pid\":623000,\"level\":3},{\"id\":623022,\"name\":\"卓尼县\",\"pid\":623000,\"level\":3},{\"id\":623023,\"name\":\"舟曲县\",\"pid\":623000,\"level\":3},{\"id\":623024,\"name\":\"迭部县\",\"pid\":623000,\"level\":3},{\"id\":623025,\"name\":\"玛曲县\",\"pid\":623000,\"level\":3},{\"id\":623026,\"name\":\"碌曲县\",\"pid\":623000,\"level\":3},{\"id\":623027,\"name\":\"夏河县\",\"pid\":623000,\"level\":3}]}]},{\"id\":630000,\"name\":\"青海省\",\"pid\":100000,\"level\":1,\"children\":[{\"id\":630100,\"name\":\"西宁市\",\"pid\":630000,\"level\":2,\"children\":[{\"id\":630102,\"name\":\"城东区\",\"pid\":630100,\"level\":3},{\"id\":630103,\"name\":\"城中区\",\"pid\":630100,\"level\":3},{\"id\":630104,\"name\":\"城西区\",\"pid\":630100,\"level\":3},{\"id\":630105,\"name\":\"城北区\",\"pid\":630100,\"level\":3},{\"id\":630121,\"name\":\"大通回族土族自治县\",\"pid\":630100,\"level\":3},{\"id\":630122,\"name\":\"湟中县\",\"pid\":630100,\"level\":3},{\"id\":630123,\"name\":\"湟源县\",\"pid\":630100,\"level\":3}]},{\"id\":630200,\"name\":\"海东市\",\"pid\":630000,\"level\":2,\"children\":[{\"id\":630202,\"name\":\"乐都区\",\"pid\":630200,\"level\":3},{\"id\":630221,\"name\":\"平安县\",\"pid\":630200,\"level\":3},{\"id\":630222,\"name\":\"民和回族土族自治县\",\"pid\":630200,\"level\":3},{\"id\":630223,\"name\":\"互助土族自治县\",\"pid\":630200,\"level\":3},{\"id\":630224,\"name\":\"化隆回族自治县\",\"pid\":630200,\"level\":3},{\"id\":630225,\"name\":\"循化撒拉族自治县\",\"pid\":630200,\"level\":3}]},{\"id\":632200,\"name\":\"海北藏族自治州\",\"pid\":630000,\"level\":2,\"children\":[{\"id\":632221,\"name\":\"门源回族自治县\",\"pid\":632200,\"level\":3},{\"id\":632222,\"name\":\"祁连县\",\"pid\":632200,\"level\":3},{\"id\":632223,\"name\":\"海晏县\",\"pid\":632200,\"level\":3},{\"id\":632224,\"name\":\"刚察县\",\"pid\":632200,\"level\":3}]},{\"id\":632300,\"name\":\"黄南藏族自治州\",\"pid\":630000,\"level\":2,\"children\":[{\"id\":632321,\"name\":\"同仁县\",\"pid\":632300,\"level\":3},{\"id\":632322,\"name\":\"尖扎县\",\"pid\":632300,\"level\":3},{\"id\":632323,\"name\":\"泽库县\",\"pid\":632300,\"level\":3},{\"id\":632324,\"name\":\"河南蒙古族自治县\",\"pid\":632300,\"level\":3}]},{\"id\":632500,\"name\":\"海南藏族自治州\",\"pid\":630000,\"level\":2,\"children\":[{\"id\":632521,\"name\":\"共和县\",\"pid\":632500,\"level\":3},{\"id\":632522,\"name\":\"同德县\",\"pid\":632500,\"level\":3},{\"id\":632523,\"name\":\"贵德县\",\"pid\":632500,\"level\":3},{\"id\":632524,\"name\":\"兴海县\",\"pid\":632500,\"level\":3},{\"id\":632525,\"name\":\"贵南县\",\"pid\":632500,\"level\":3}]},{\"id\":632600,\"name\":\"果洛藏族自治州\",\"pid\":630000,\"level\":2,\"children\":[{\"id\":632621,\"name\":\"玛沁县\",\"pid\":632600,\"level\":3},{\"id\":632622,\"name\":\"班玛县\",\"pid\":632600,\"level\":3},{\"id\":632623,\"name\":\"甘德县\",\"pid\":632600,\"level\":3},{\"id\":632624,\"name\":\"达日县\",\"pid\":632600,\"level\":3},{\"id\":632625,\"name\":\"久治县\",\"pid\":632600,\"level\":3},{\"id\":632626,\"name\":\"玛多县\",\"pid\":632600,\"level\":3}]},{\"id\":632700,\"name\":\"玉树藏族自治州\",\"pid\":630000,\"level\":2,\"children\":[{\"id\":632701,\"name\":\"玉树市\",\"pid\":632700,\"level\":3},{\"id\":632722,\"name\":\"杂多县\",\"pid\":632700,\"level\":3},{\"id\":632723,\"name\":\"称多县\",\"pid\":632700,\"level\":3},{\"id\":632724,\"name\":\"治多县\",\"pid\":632700,\"level\":3},{\"id\":632725,\"name\":\"囊谦县\",\"pid\":632700,\"level\":3},{\"id\":632726,\"name\":\"曲麻莱县\",\"pid\":632700,\"level\":3}]},{\"id\":632800,\"name\":\"海西蒙古族藏族自治州\",\"pid\":630000,\"level\":2,\"children\":[{\"id\":632801,\"name\":\"格尔木市\",\"pid\":632800,\"level\":3},{\"id\":632802,\"name\":\"德令哈市\",\"pid\":632800,\"level\":3},{\"id\":632821,\"name\":\"乌兰县\",\"pid\":632800,\"level\":3},{\"id\":632822,\"name\":\"都兰县\",\"pid\":632800,\"level\":3},{\"id\":632823,\"name\":\"天峻县\",\"pid\":632800,\"level\":3}]}]},{\"id\":640000,\"name\":\"宁夏回族自治区\",\"pid\":100000,\"level\":1,\"children\":[{\"id\":640100,\"name\":\"银川市\",\"pid\":640000,\"level\":2,\"children\":[{\"id\":640104,\"name\":\"兴庆区\",\"pid\":640100,\"level\":3},{\"id\":640105,\"name\":\"西夏区\",\"pid\":640100,\"level\":3},{\"id\":640106,\"name\":\"金凤区\",\"pid\":640100,\"level\":3},{\"id\":640121,\"name\":\"永宁县\",\"pid\":640100,\"level\":3},{\"id\":640122,\"name\":\"贺兰县\",\"pid\":640100,\"level\":3},{\"id\":640181,\"name\":\"灵武市\",\"pid\":640100,\"level\":3}]},{\"id\":640200,\"name\":\"石嘴山市\",\"pid\":640000,\"level\":2,\"children\":[{\"id\":640202,\"name\":\"大武口区\",\"pid\":640200,\"level\":3},{\"id\":640205,\"name\":\"惠农区\",\"pid\":640200,\"level\":3},{\"id\":640221,\"name\":\"平罗县\",\"pid\":640200,\"level\":3}]},{\"id\":640300,\"name\":\"吴忠市\",\"pid\":640000,\"level\":2,\"children\":[{\"id\":640302,\"name\":\"利通区\",\"pid\":640300,\"level\":3},{\"id\":640303,\"name\":\"红寺堡区\",\"pid\":640300,\"level\":3},{\"id\":640323,\"name\":\"盐池县\",\"pid\":640300,\"level\":3},{\"id\":640324,\"name\":\"同心县\",\"pid\":640300,\"level\":3},{\"id\":640381,\"name\":\"青铜峡市\",\"pid\":640300,\"level\":3}]},{\"id\":640400,\"name\":\"固原市\",\"pid\":640000,\"level\":2,\"children\":[{\"id\":640402,\"name\":\"原州区\",\"pid\":640400,\"level\":3},{\"id\":640422,\"name\":\"西吉县\",\"pid\":640400,\"level\":3},{\"id\":640423,\"name\":\"隆德县\",\"pid\":640400,\"level\":3},{\"id\":640424,\"name\":\"泾源县\",\"pid\":640400,\"level\":3},{\"id\":640425,\"name\":\"彭阳县\",\"pid\":640400,\"level\":3}]},{\"id\":640500,\"name\":\"中卫市\",\"pid\":640000,\"level\":2,\"children\":[{\"id\":640502,\"name\":\"沙坡头区\",\"pid\":640500,\"level\":3},{\"id\":640521,\"name\":\"中宁县\",\"pid\":640500,\"level\":3},{\"id\":640522,\"name\":\"海原县\",\"pid\":640500,\"level\":3}]}]},{\"id\":650000,\"name\":\"新疆维吾尔自治区\",\"pid\":100000,\"level\":1,\"children\":[{\"id\":650100,\"name\":\"乌鲁木齐市\",\"pid\":650000,\"level\":2,\"children\":[{\"id\":650102,\"name\":\"天山区\",\"pid\":650100,\"level\":3},{\"id\":650103,\"name\":\"沙依巴克区\",\"pid\":650100,\"level\":3},{\"id\":650104,\"name\":\"新市区\",\"pid\":650100,\"level\":3},{\"id\":650105,\"name\":\"水磨沟区\",\"pid\":650100,\"level\":3},{\"id\":650106,\"name\":\"头屯河区\",\"pid\":650100,\"level\":3},{\"id\":650107,\"name\":\"达坂城区\",\"pid\":650100,\"level\":3},{\"id\":650109,\"name\":\"米东区\",\"pid\":650100,\"level\":3},{\"id\":650121,\"name\":\"乌鲁木齐县\",\"pid\":650100,\"level\":3}]},{\"id\":650200,\"name\":\"克拉玛依市\",\"pid\":650000,\"level\":2,\"children\":[{\"id\":650202,\"name\":\"独山子区\",\"pid\":650200,\"level\":3},{\"id\":650203,\"name\":\"克拉玛依区\",\"pid\":650200,\"level\":3},{\"id\":650204,\"name\":\"白碱滩区\",\"pid\":650200,\"level\":3},{\"id\":650205,\"name\":\"乌尔禾区\",\"pid\":650200,\"level\":3}]},{\"id\":652100,\"name\":\"吐鲁番地区\",\"pid\":650000,\"level\":2,\"children\":[{\"id\":652101,\"name\":\"吐鲁番市\",\"pid\":652100,\"level\":3},{\"id\":652122,\"name\":\"鄯善县\",\"pid\":652100,\"level\":3},{\"id\":652123,\"name\":\"托克逊县\",\"pid\":652100,\"level\":3}]},{\"id\":652200,\"name\":\"哈密地区\",\"pid\":650000,\"level\":2,\"children\":[{\"id\":652201,\"name\":\"哈密市\",\"pid\":652200,\"level\":3},{\"id\":652222,\"name\":\"巴里坤哈萨克自治县\",\"pid\":652200,\"level\":3},{\"id\":652223,\"name\":\"伊吾县\",\"pid\":652200,\"level\":3}]},{\"id\":652300,\"name\":\"昌吉回族自治州\",\"pid\":650000,\"level\":2,\"children\":[{\"id\":652301,\"name\":\"昌吉市\",\"pid\":652300,\"level\":3},{\"id\":652302,\"name\":\"阜康市\",\"pid\":652300,\"level\":3},{\"id\":652323,\"name\":\"呼图壁县\",\"pid\":652300,\"level\":3},{\"id\":652324,\"name\":\"玛纳斯县\",\"pid\":652300,\"level\":3},{\"id\":652325,\"name\":\"奇台县\",\"pid\":652300,\"level\":3},{\"id\":652327,\"name\":\"吉木萨尔县\",\"pid\":652300,\"level\":3},{\"id\":652328,\"name\":\"木垒哈萨克自治县\",\"pid\":652300,\"level\":3}]},{\"id\":652700,\"name\":\"博尔塔拉蒙古自治州\",\"pid\":650000,\"level\":2,\"children\":[{\"id\":652701,\"name\":\"博乐市\",\"pid\":652700,\"level\":3},{\"id\":652702,\"name\":\"阿拉山口市\",\"pid\":652700,\"level\":3},{\"id\":652722,\"name\":\"精河县\",\"pid\":652700,\"level\":3},{\"id\":652723,\"name\":\"温泉县\",\"pid\":652700,\"level\":3}]},{\"id\":652800,\"name\":\"巴音郭楞蒙古自治州\",\"pid\":650000,\"level\":2,\"children\":[{\"id\":652801,\"name\":\"库尔勒市\",\"pid\":652800,\"level\":3},{\"id\":652822,\"name\":\"轮台县\",\"pid\":652800,\"level\":3},{\"id\":652823,\"name\":\"尉犁县\",\"pid\":652800,\"level\":3},{\"id\":652824,\"name\":\"若羌县\",\"pid\":652800,\"level\":3},{\"id\":652825,\"name\":\"且末县\",\"pid\":652800,\"level\":3},{\"id\":652826,\"name\":\"焉耆回族自治县\",\"pid\":652800,\"level\":3},{\"id\":652827,\"name\":\"和静县\",\"pid\":652800,\"level\":3},{\"id\":652828,\"name\":\"和硕县\",\"pid\":652800,\"level\":3},{\"id\":652829,\"name\":\"博湖县\",\"pid\":652800,\"level\":3}]},{\"id\":652900,\"name\":\"阿克苏地区\",\"pid\":650000,\"level\":2,\"children\":[{\"id\":652901,\"name\":\"阿克苏市\",\"pid\":652900,\"level\":3},{\"id\":652922,\"name\":\"温宿县\",\"pid\":652900,\"level\":3},{\"id\":652923,\"name\":\"库车县\",\"pid\":652900,\"level\":3},{\"id\":652924,\"name\":\"沙雅县\",\"pid\":652900,\"level\":3},{\"id\":652925,\"name\":\"新和县\",\"pid\":652900,\"level\":3},{\"id\":652926,\"name\":\"拜城县\",\"pid\":652900,\"level\":3},{\"id\":652927,\"name\":\"乌什县\",\"pid\":652900,\"level\":3},{\"id\":652928,\"name\":\"阿瓦提县\",\"pid\":652900,\"level\":3},{\"id\":652929,\"name\":\"柯坪县\",\"pid\":652900,\"level\":3}]},{\"id\":653000,\"name\":\"克孜勒苏柯尔克孜自治州\",\"pid\":650000,\"level\":2,\"children\":[{\"id\":653001,\"name\":\"阿图什市\",\"pid\":653000,\"level\":3},{\"id\":653022,\"name\":\"阿克陶县\",\"pid\":653000,\"level\":3},{\"id\":653023,\"name\":\"阿合奇县\",\"pid\":653000,\"level\":3},{\"id\":653024,\"name\":\"乌恰县\",\"pid\":653000,\"level\":3}]},{\"id\":653100,\"name\":\"喀什地区\",\"pid\":650000,\"level\":2,\"children\":[{\"id\":653101,\"name\":\"喀什市\",\"pid\":653100,\"level\":3},{\"id\":653121,\"name\":\"疏附县\",\"pid\":653100,\"level\":3},{\"id\":653122,\"name\":\"疏勒县\",\"pid\":653100,\"level\":3},{\"id\":653123,\"name\":\"英吉沙县\",\"pid\":653100,\"level\":3},{\"id\":653124,\"name\":\"泽普县\",\"pid\":653100,\"level\":3},{\"id\":653125,\"name\":\"莎车县\",\"pid\":653100,\"level\":3},{\"id\":653126,\"name\":\"叶城县\",\"pid\":653100,\"level\":3},{\"id\":653127,\"name\":\"麦盖提县\",\"pid\":653100,\"level\":3},{\"id\":653128,\"name\":\"岳普湖县\",\"pid\":653100,\"level\":3},{\"id\":653129,\"name\":\"伽师县\",\"pid\":653100,\"level\":3},{\"id\":653130,\"name\":\"巴楚县\",\"pid\":653100,\"level\":3},{\"id\":653131,\"name\":\"塔什库尔干塔吉克自治县\",\"pid\":653100,\"level\":3}]},{\"id\":653200,\"name\":\"和田地区\",\"pid\":650000,\"level\":2,\"children\":[{\"id\":653201,\"name\":\"和田市\",\"pid\":653200,\"level\":3},{\"id\":653221,\"name\":\"和田县\",\"pid\":653200,\"level\":3},{\"id\":653222,\"name\":\"墨玉县\",\"pid\":653200,\"level\":3},{\"id\":653223,\"name\":\"皮山县\",\"pid\":653200,\"level\":3},{\"id\":653224,\"name\":\"洛浦县\",\"pid\":653200,\"level\":3},{\"id\":653225,\"name\":\"策勒县\",\"pid\":653200,\"level\":3},{\"id\":653226,\"name\":\"于田县\",\"pid\":653200,\"level\":3},{\"id\":653227,\"name\":\"民丰县\",\"pid\":653200,\"level\":3}]},{\"id\":654000,\"name\":\"伊犁哈萨克自治州\",\"pid\":650000,\"level\":2,\"children\":[{\"id\":654002,\"name\":\"伊宁市\",\"pid\":654000,\"level\":3},{\"id\":654003,\"name\":\"奎屯市\",\"pid\":654000,\"level\":3},{\"id\":654004,\"name\":\"霍尔果斯市\",\"pid\":654000,\"level\":3},{\"id\":654021,\"name\":\"伊宁县\",\"pid\":654000,\"level\":3},{\"id\":654022,\"name\":\"察布查尔锡伯自治县\",\"pid\":654000,\"level\":3},{\"id\":654023,\"name\":\"霍城县\",\"pid\":654000,\"level\":3},{\"id\":654024,\"name\":\"巩留县\",\"pid\":654000,\"level\":3},{\"id\":654025,\"name\":\"新源县\",\"pid\":654000,\"level\":3},{\"id\":654026,\"name\":\"昭苏县\",\"pid\":654000,\"level\":3},{\"id\":654027,\"name\":\"特克斯县\",\"pid\":654000,\"level\":3},{\"id\":654028,\"name\":\"尼勒克县\",\"pid\":654000,\"level\":3}]},{\"id\":654200,\"name\":\"塔城地区\",\"pid\":650000,\"level\":2,\"children\":[{\"id\":654201,\"name\":\"塔城市\",\"pid\":654200,\"level\":3},{\"id\":654202,\"name\":\"乌苏市\",\"pid\":654200,\"level\":3},{\"id\":654221,\"name\":\"额敏县\",\"pid\":654200,\"level\":3},{\"id\":654223,\"name\":\"沙湾县\",\"pid\":654200,\"level\":3},{\"id\":654224,\"name\":\"托里县\",\"pid\":654200,\"level\":3},{\"id\":654225,\"name\":\"裕民县\",\"pid\":654200,\"level\":3},{\"id\":654226,\"name\":\"和布克赛尔蒙古自治县\",\"pid\":654200,\"level\":3}]},{\"id\":654300,\"name\":\"阿勒泰地区\",\"pid\":650000,\"level\":2,\"children\":[{\"id\":654301,\"name\":\"阿勒泰市\",\"pid\":654300,\"level\":3},{\"id\":654321,\"name\":\"布尔津县\",\"pid\":654300,\"level\":3},{\"id\":654322,\"name\":\"富蕴县\",\"pid\":654300,\"level\":3},{\"id\":654323,\"name\":\"福海县\",\"pid\":654300,\"level\":3},{\"id\":654324,\"name\":\"哈巴河县\",\"pid\":654300,\"level\":3},{\"id\":654325,\"name\":\"青河县\",\"pid\":654300,\"level\":3},{\"id\":654326,\"name\":\"吉木乃县\",\"pid\":654300,\"level\":3}]},{\"id\":659000,\"name\":\"直辖县级\",\"pid\":650000,\"level\":2,\"children\":[{\"id\":659001,\"name\":\"石河子市\",\"pid\":659000,\"level\":3},{\"id\":659002,\"name\":\"阿拉尔市\",\"pid\":659000,\"level\":3},{\"id\":659003,\"name\":\"图木舒克市\",\"pid\":659000,\"level\":3},{\"id\":659004,\"name\":\"五家渠市\",\"pid\":659000,\"level\":3},{\"id\":659005,\"name\":\"北屯市\",\"pid\":659000,\"level\":3},{\"id\":659006,\"name\":\"铁门关市\",\"pid\":659000,\"level\":3},{\"id\":659007,\"name\":\"双河市\",\"pid\":659000,\"level\":3}]}]},{\"id\":710000,\"name\":\"台湾\",\"pid\":100000,\"level\":1,\"children\":[{\"id\":710100,\"name\":\"台北市\",\"pid\":710000,\"level\":2,\"children\":[{\"id\":710101,\"name\":\"松山区\",\"pid\":710100,\"level\":3},{\"id\":710102,\"name\":\"信义区\",\"pid\":710100,\"level\":3},{\"id\":710103,\"name\":\"大安区\",\"pid\":710100,\"level\":3},{\"id\":710104,\"name\":\"中山区\",\"pid\":710100,\"level\":3},{\"id\":710105,\"name\":\"中正区\",\"pid\":710100,\"level\":3},{\"id\":710106,\"name\":\"大同区\",\"pid\":710100,\"level\":3},{\"id\":710107,\"name\":\"万华区\",\"pid\":710100,\"level\":3},{\"id\":710108,\"name\":\"文山区\",\"pid\":710100,\"level\":3},{\"id\":710109,\"name\":\"南港区\",\"pid\":710100,\"level\":3},{\"id\":710110,\"name\":\"内湖区\",\"pid\":710100,\"level\":3},{\"id\":710111,\"name\":\"士林区\",\"pid\":710100,\"level\":3},{\"id\":710112,\"name\":\"北投区\",\"pid\":710100,\"level\":3}]},{\"id\":710200,\"name\":\"高雄市\",\"pid\":710000,\"level\":2,\"children\":[{\"id\":710201,\"name\":\"盐埕区\",\"pid\":710200,\"level\":3},{\"id\":710202,\"name\":\"鼓山区\",\"pid\":710200,\"level\":3},{\"id\":710203,\"name\":\"左营区\",\"pid\":710200,\"level\":3},{\"id\":710204,\"name\":\"楠梓区\",\"pid\":710200,\"level\":3},{\"id\":710205,\"name\":\"三民区\",\"pid\":710200,\"level\":3},{\"id\":710206,\"name\":\"新兴区\",\"pid\":710200,\"level\":3},{\"id\":710207,\"name\":\"前金区\",\"pid\":710200,\"level\":3},{\"id\":710208,\"name\":\"苓雅区\",\"pid\":710200,\"level\":3},{\"id\":710209,\"name\":\"前镇区\",\"pid\":710200,\"level\":3},{\"id\":710210,\"name\":\"旗津区\",\"pid\":710200,\"level\":3},{\"id\":710211,\"name\":\"小港区\",\"pid\":710200,\"level\":3},{\"id\":710212,\"name\":\"凤山区\",\"pid\":710200,\"level\":3},{\"id\":710213,\"name\":\"林园区\",\"pid\":710200,\"level\":3},{\"id\":710214,\"name\":\"大寮区\",\"pid\":710200,\"level\":3},{\"id\":710215,\"name\":\"大树区\",\"pid\":710200,\"level\":3},{\"id\":710216,\"name\":\"大社区\",\"pid\":710200,\"level\":3},{\"id\":710217,\"name\":\"仁武区\",\"pid\":710200,\"level\":3},{\"id\":710218,\"name\":\"鸟松区\",\"pid\":710200,\"level\":3},{\"id\":710219,\"name\":\"冈山区\",\"pid\":710200,\"level\":3},{\"id\":710220,\"name\":\"桥头区\",\"pid\":710200,\"level\":3},{\"id\":710221,\"name\":\"燕巢区\",\"pid\":710200,\"level\":3},{\"id\":710222,\"name\":\"田寮区\",\"pid\":710200,\"level\":3},{\"id\":710223,\"name\":\"阿莲区\",\"pid\":710200,\"level\":3},{\"id\":710224,\"name\":\"路竹区\",\"pid\":710200,\"level\":3},{\"id\":710225,\"name\":\"湖内区\",\"pid\":710200,\"level\":3},{\"id\":710226,\"name\":\"茄萣区\",\"pid\":710200,\"level\":3},{\"id\":710227,\"name\":\"永安区\",\"pid\":710200,\"level\":3},{\"id\":710228,\"name\":\"弥陀区\",\"pid\":710200,\"level\":3},{\"id\":710229,\"name\":\"梓官区\",\"pid\":710200,\"level\":3},{\"id\":710230,\"name\":\"旗山区\",\"pid\":710200,\"level\":3},{\"id\":710231,\"name\":\"美浓区\",\"pid\":710200,\"level\":3},{\"id\":710232,\"name\":\"六龟区\",\"pid\":710200,\"level\":3},{\"id\":710233,\"name\":\"甲仙区\",\"pid\":710200,\"level\":3},{\"id\":710234,\"name\":\"杉林区\",\"pid\":710200,\"level\":3},{\"id\":710235,\"name\":\"内门区\",\"pid\":710200,\"level\":3},{\"id\":710236,\"name\":\"茂林区\",\"pid\":710200,\"level\":3},{\"id\":710237,\"name\":\"桃源区\",\"pid\":710200,\"level\":3},{\"id\":710238,\"name\":\"那玛夏区\",\"pid\":710200,\"level\":3}]},{\"id\":710300,\"name\":\"基隆市\",\"pid\":710000,\"level\":2,\"children\":[{\"id\":710301,\"name\":\"中正区\",\"pid\":710300,\"level\":3},{\"id\":710302,\"name\":\"七堵区\",\"pid\":710300,\"level\":3},{\"id\":710303,\"name\":\"暖暖区\",\"pid\":710300,\"level\":3},{\"id\":710304,\"name\":\"仁爱区\",\"pid\":710300,\"level\":3},{\"id\":710305,\"name\":\"中山区\",\"pid\":710300,\"level\":3},{\"id\":710306,\"name\":\"安乐区\",\"pid\":710300,\"level\":3},{\"id\":710307,\"name\":\"信义区\",\"pid\":710300,\"level\":3}]},{\"id\":710400,\"name\":\"台中市\",\"pid\":710000,\"level\":2,\"children\":[{\"id\":710401,\"name\":\"中区\",\"pid\":710400,\"level\":3},{\"id\":710402,\"name\":\"东区\",\"pid\":710400,\"level\":3},{\"id\":710403,\"name\":\"南区\",\"pid\":710400,\"level\":3},{\"id\":710404,\"name\":\"西区\",\"pid\":710400,\"level\":3},{\"id\":710405,\"name\":\"北区\",\"pid\":710400,\"level\":3},{\"id\":710406,\"name\":\"西屯区\",\"pid\":710400,\"level\":3},{\"id\":710407,\"name\":\"南屯区\",\"pid\":710400,\"level\":3},{\"id\":710408,\"name\":\"北屯区\",\"pid\":710400,\"level\":3},{\"id\":710409,\"name\":\"丰原区\",\"pid\":710400,\"level\":3},{\"id\":710410,\"name\":\"东势区\",\"pid\":710400,\"level\":3},{\"id\":710411,\"name\":\"大甲区\",\"pid\":710400,\"level\":3},{\"id\":710412,\"name\":\"清水区\",\"pid\":710400,\"level\":3},{\"id\":710413,\"name\":\"沙鹿区\",\"pid\":710400,\"level\":3},{\"id\":710414,\"name\":\"梧栖区\",\"pid\":710400,\"level\":3},{\"id\":710415,\"name\":\"后里区\",\"pid\":710400,\"level\":3},{\"id\":710416,\"name\":\"神冈区\",\"pid\":710400,\"level\":3},{\"id\":710417,\"name\":\"潭子区\",\"pid\":710400,\"level\":3},{\"id\":710418,\"name\":\"大雅区\",\"pid\":710400,\"level\":3},{\"id\":710419,\"name\":\"新社区\",\"pid\":710400,\"level\":3},{\"id\":710420,\"name\":\"石冈区\",\"pid\":710400,\"level\":3},{\"id\":710421,\"name\":\"外埔区\",\"pid\":710400,\"level\":3},{\"id\":710422,\"name\":\"大安区\",\"pid\":710400,\"level\":3},{\"id\":710423,\"name\":\"乌日区\",\"pid\":710400,\"level\":3},{\"id\":710424,\"name\":\"大肚区\",\"pid\":710400,\"level\":3},{\"id\":710425,\"name\":\"龙井区\",\"pid\":710400,\"level\":3},{\"id\":710426,\"name\":\"雾峰区\",\"pid\":710400,\"level\":3},{\"id\":710427,\"name\":\"太平区\",\"pid\":710400,\"level\":3},{\"id\":710428,\"name\":\"大里区\",\"pid\":710400,\"level\":3},{\"id\":710429,\"name\":\"和平区\",\"pid\":710400,\"level\":3}]},{\"id\":710500,\"name\":\"台南市\",\"pid\":710000,\"level\":2,\"children\":[{\"id\":710501,\"name\":\"东区\",\"pid\":710500,\"level\":3},{\"id\":710502,\"name\":\"南区\",\"pid\":710500,\"level\":3},{\"id\":710504,\"name\":\"北区\",\"pid\":710500,\"level\":3},{\"id\":710506,\"name\":\"安南区\",\"pid\":710500,\"level\":3},{\"id\":710507,\"name\":\"安平区\",\"pid\":710500,\"level\":3},{\"id\":710508,\"name\":\"中西区\",\"pid\":710500,\"level\":3},{\"id\":710509,\"name\":\"新营区\",\"pid\":710500,\"level\":3},{\"id\":710510,\"name\":\"盐水区\",\"pid\":710500,\"level\":3},{\"id\":710511,\"name\":\"白河区\",\"pid\":710500,\"level\":3},{\"id\":710512,\"name\":\"柳营区\",\"pid\":710500,\"level\":3},{\"id\":710513,\"name\":\"后壁区\",\"pid\":710500,\"level\":3},{\"id\":710514,\"name\":\"东山区\",\"pid\":710500,\"level\":3},{\"id\":710515,\"name\":\"麻豆区\",\"pid\":710500,\"level\":3},{\"id\":710516,\"name\":\"下营区\",\"pid\":710500,\"level\":3},{\"id\":710517,\"name\":\"六甲区\",\"pid\":710500,\"level\":3},{\"id\":710518,\"name\":\"官田区\",\"pid\":710500,\"level\":3},{\"id\":710519,\"name\":\"大内区\",\"pid\":710500,\"level\":3},{\"id\":710520,\"name\":\"佳里区\",\"pid\":710500,\"level\":3},{\"id\":710521,\"name\":\"学甲区\",\"pid\":710500,\"level\":3},{\"id\":710522,\"name\":\"西港区\",\"pid\":710500,\"level\":3},{\"id\":710523,\"name\":\"七股区\",\"pid\":710500,\"level\":3},{\"id\":710524,\"name\":\"将军区\",\"pid\":710500,\"level\":3},{\"id\":710525,\"name\":\"北门区\",\"pid\":710500,\"level\":3},{\"id\":710526,\"name\":\"新化区\",\"pid\":710500,\"level\":3},{\"id\":710527,\"name\":\"善化区\",\"pid\":710500,\"level\":3},{\"id\":710528,\"name\":\"新市区\",\"pid\":710500,\"level\":3},{\"id\":710529,\"name\":\"安定区\",\"pid\":710500,\"level\":3},{\"id\":710530,\"name\":\"山上区\",\"pid\":710500,\"level\":3},{\"id\":710531,\"name\":\"玉井区\",\"pid\":710500,\"level\":3},{\"id\":710532,\"name\":\"楠西区\",\"pid\":710500,\"level\":3},{\"id\":710533,\"name\":\"南化区\",\"pid\":710500,\"level\":3},{\"id\":710534,\"name\":\"左镇区\",\"pid\":710500,\"level\":3},{\"id\":710535,\"name\":\"仁德区\",\"pid\":710500,\"level\":3},{\"id\":710536,\"name\":\"归仁区\",\"pid\":710500,\"level\":3},{\"id\":710537,\"name\":\"关庙区\",\"pid\":710500,\"level\":3},{\"id\":710538,\"name\":\"龙崎区\",\"pid\":710500,\"level\":3},{\"id\":710539,\"name\":\"永康区\",\"pid\":710500,\"level\":3}]},{\"id\":710600,\"name\":\"新竹市\",\"pid\":710000,\"level\":2,\"children\":[{\"id\":710601,\"name\":\"东区\",\"pid\":710600,\"level\":3},{\"id\":710602,\"name\":\"北区\",\"pid\":710600,\"level\":3},{\"id\":710603,\"name\":\"香山区\",\"pid\":710600,\"level\":3}]},{\"id\":710700,\"name\":\"嘉义市\",\"pid\":710000,\"level\":2,\"children\":[{\"id\":710701,\"name\":\"东区\",\"pid\":710700,\"level\":3},{\"id\":710702,\"name\":\"西区\",\"pid\":710700,\"level\":3}]},{\"id\":710800,\"name\":\"新北市\",\"pid\":710000,\"level\":2,\"children\":[{\"id\":710801,\"name\":\"板桥区\",\"pid\":710800,\"level\":3},{\"id\":710802,\"name\":\"三重区\",\"pid\":710800,\"level\":3},{\"id\":710803,\"name\":\"中和区\",\"pid\":710800,\"level\":3},{\"id\":710804,\"name\":\"永和区\",\"pid\":710800,\"level\":3},{\"id\":710805,\"name\":\"新庄区\",\"pid\":710800,\"level\":3},{\"id\":710806,\"name\":\"新店区\",\"pid\":710800,\"level\":3},{\"id\":710807,\"name\":\"树林区\",\"pid\":710800,\"level\":3},{\"id\":710808,\"name\":\"莺歌区\",\"pid\":710800,\"level\":3},{\"id\":710809,\"name\":\"三峡区\",\"pid\":710800,\"level\":3},{\"id\":710810,\"name\":\"淡水区\",\"pid\":710800,\"level\":3},{\"id\":710811,\"name\":\"汐止区\",\"pid\":710800,\"level\":3},{\"id\":710812,\"name\":\"瑞芳区\",\"pid\":710800,\"level\":3},{\"id\":710813,\"name\":\"土城区\",\"pid\":710800,\"level\":3},{\"id\":710814,\"name\":\"芦洲区\",\"pid\":710800,\"level\":3},{\"id\":710815,\"name\":\"五股区\",\"pid\":710800,\"level\":3},{\"id\":710816,\"name\":\"泰山区\",\"pid\":710800,\"level\":3},{\"id\":710817,\"name\":\"林口区\",\"pid\":710800,\"level\":3},{\"id\":710818,\"name\":\"深坑区\",\"pid\":710800,\"level\":3},{\"id\":710819,\"name\":\"石碇区\",\"pid\":710800,\"level\":3},{\"id\":710820,\"name\":\"坪林区\",\"pid\":710800,\"level\":3},{\"id\":710821,\"name\":\"三芝区\",\"pid\":710800,\"level\":3},{\"id\":710822,\"name\":\"石门区\",\"pid\":710800,\"level\":3},{\"id\":710823,\"name\":\"八里区\",\"pid\":710800,\"level\":3},{\"id\":710824,\"name\":\"平溪区\",\"pid\":710800,\"level\":3},{\"id\":710825,\"name\":\"双溪区\",\"pid\":710800,\"level\":3},{\"id\":710826,\"name\":\"贡寮区\",\"pid\":710800,\"level\":3},{\"id\":710827,\"name\":\"金山区\",\"pid\":710800,\"level\":3},{\"id\":710828,\"name\":\"万里区\",\"pid\":710800,\"level\":3},{\"id\":710829,\"name\":\"乌来区\",\"pid\":710800,\"level\":3}]},{\"id\":712200,\"name\":\"宜兰县\",\"pid\":710000,\"level\":2,\"children\":[{\"id\":712201,\"name\":\"宜兰市\",\"pid\":712200,\"level\":3},{\"id\":712221,\"name\":\"罗东镇\",\"pid\":712200,\"level\":3},{\"id\":712222,\"name\":\"苏澳镇\",\"pid\":712200,\"level\":3},{\"id\":712223,\"name\":\"头城镇\",\"pid\":712200,\"level\":3},{\"id\":712224,\"name\":\"礁溪乡\",\"pid\":712200,\"level\":3},{\"id\":712225,\"name\":\"壮围乡\",\"pid\":712200,\"level\":3},{\"id\":712226,\"name\":\"员山乡\",\"pid\":712200,\"level\":3},{\"id\":712227,\"name\":\"冬山乡\",\"pid\":712200,\"level\":3},{\"id\":712228,\"name\":\"五结乡\",\"pid\":712200,\"level\":3},{\"id\":712229,\"name\":\"三星乡\",\"pid\":712200,\"level\":3},{\"id\":712230,\"name\":\"大同乡\",\"pid\":712200,\"level\":3},{\"id\":712231,\"name\":\"南澳乡\",\"pid\":712200,\"level\":3}]},{\"id\":712300,\"name\":\"桃园县\",\"pid\":710000,\"level\":2,\"children\":[{\"id\":712301,\"name\":\"桃园市\",\"pid\":712300,\"level\":3},{\"id\":712302,\"name\":\"中坜市\",\"pid\":712300,\"level\":3},{\"id\":712303,\"name\":\"平镇市\",\"pid\":712300,\"level\":3},{\"id\":712304,\"name\":\"八德市\",\"pid\":712300,\"level\":3},{\"id\":712305,\"name\":\"杨梅市\",\"pid\":712300,\"level\":3},{\"id\":712306,\"name\":\"芦竹市\",\"pid\":712300,\"level\":3},{\"id\":712321,\"name\":\"大溪镇\",\"pid\":712300,\"level\":3},{\"id\":712324,\"name\":\"大园乡\",\"pid\":712300,\"level\":3},{\"id\":712325,\"name\":\"龟山乡\",\"pid\":712300,\"level\":3},{\"id\":712327,\"name\":\"龙潭乡\",\"pid\":712300,\"level\":3},{\"id\":712329,\"name\":\"新屋乡\",\"pid\":712300,\"level\":3},{\"id\":712330,\"name\":\"观音乡\",\"pid\":712300,\"level\":3},{\"id\":712331,\"name\":\"复兴乡\",\"pid\":712300,\"level\":3}]},{\"id\":712400,\"name\":\"新竹县\",\"pid\":710000,\"level\":2,\"children\":[{\"id\":712401,\"name\":\"竹北市\",\"pid\":712400,\"level\":3},{\"id\":712421,\"name\":\"竹东镇\",\"pid\":712400,\"level\":3},{\"id\":712422,\"name\":\"新埔镇\",\"pid\":712400,\"level\":3},{\"id\":712423,\"name\":\"关西镇\",\"pid\":712400,\"level\":3},{\"id\":712424,\"name\":\"湖口乡\",\"pid\":712400,\"level\":3},{\"id\":712425,\"name\":\"新丰乡\",\"pid\":712400,\"level\":3},{\"id\":712426,\"name\":\"芎林乡\",\"pid\":712400,\"level\":3},{\"id\":712427,\"name\":\"横山乡\",\"pid\":712400,\"level\":3},{\"id\":712428,\"name\":\"北埔乡\",\"pid\":712400,\"level\":3},{\"id\":712429,\"name\":\"宝山乡\",\"pid\":712400,\"level\":3},{\"id\":712430,\"name\":\"峨眉乡\",\"pid\":712400,\"level\":3},{\"id\":712431,\"name\":\"尖石乡\",\"pid\":712400,\"level\":3},{\"id\":712432,\"name\":\"五峰乡\",\"pid\":712400,\"level\":3}]},{\"id\":712500,\"name\":\"苗栗县\",\"pid\":710000,\"level\":2,\"children\":[{\"id\":712501,\"name\":\"苗栗市\",\"pid\":712500,\"level\":3},{\"id\":712521,\"name\":\"苑里镇\",\"pid\":712500,\"level\":3},{\"id\":712522,\"name\":\"通霄镇\",\"pid\":712500,\"level\":3},{\"id\":712523,\"name\":\"竹南镇\",\"pid\":712500,\"level\":3},{\"id\":712524,\"name\":\"头份镇\",\"pid\":712500,\"level\":3},{\"id\":712525,\"name\":\"后龙镇\",\"pid\":712500,\"level\":3},{\"id\":712526,\"name\":\"卓兰镇\",\"pid\":712500,\"level\":3},{\"id\":712527,\"name\":\"大湖乡\",\"pid\":712500,\"level\":3},{\"id\":712528,\"name\":\"公馆乡\",\"pid\":712500,\"level\":3},{\"id\":712529,\"name\":\"铜锣乡\",\"pid\":712500,\"level\":3},{\"id\":712530,\"name\":\"南庄乡\",\"pid\":712500,\"level\":3},{\"id\":712531,\"name\":\"头屋乡\",\"pid\":712500,\"level\":3},{\"id\":712532,\"name\":\"三义乡\",\"pid\":712500,\"level\":3},{\"id\":712533,\"name\":\"西湖乡\",\"pid\":712500,\"level\":3},{\"id\":712534,\"name\":\"造桥乡\",\"pid\":712500,\"level\":3},{\"id\":712535,\"name\":\"三湾乡\",\"pid\":712500,\"level\":3},{\"id\":712536,\"name\":\"狮潭乡\",\"pid\":712500,\"level\":3},{\"id\":712537,\"name\":\"泰安乡\",\"pid\":712500,\"level\":3}]},{\"id\":712700,\"name\":\"彰化县\",\"pid\":710000,\"level\":2,\"children\":[{\"id\":712701,\"name\":\"彰化市\",\"pid\":712700,\"level\":3},{\"id\":712721,\"name\":\"鹿港镇\",\"pid\":712700,\"level\":3},{\"id\":712722,\"name\":\"和美镇\",\"pid\":712700,\"level\":3},{\"id\":712723,\"name\":\"线西乡\",\"pid\":712700,\"level\":3},{\"id\":712724,\"name\":\"伸港乡\",\"pid\":712700,\"level\":3},{\"id\":712725,\"name\":\"福兴乡\",\"pid\":712700,\"level\":3},{\"id\":712726,\"name\":\"秀水乡\",\"pid\":712700,\"level\":3},{\"id\":712727,\"name\":\"花坛乡\",\"pid\":712700,\"level\":3},{\"id\":712728,\"name\":\"芬园乡\",\"pid\":712700,\"level\":3},{\"id\":712729,\"name\":\"员林镇\",\"pid\":712700,\"level\":3},{\"id\":712730,\"name\":\"溪湖镇\",\"pid\":712700,\"level\":3},{\"id\":712731,\"name\":\"田中镇\",\"pid\":712700,\"level\":3},{\"id\":712732,\"name\":\"大村乡\",\"pid\":712700,\"level\":3},{\"id\":712733,\"name\":\"埔盐乡\",\"pid\":712700,\"level\":3},{\"id\":712734,\"name\":\"埔心乡\",\"pid\":712700,\"level\":3},{\"id\":712735,\"name\":\"永靖乡\",\"pid\":712700,\"level\":3},{\"id\":712736,\"name\":\"社头乡\",\"pid\":712700,\"level\":3},{\"id\":712737,\"name\":\"二水乡\",\"pid\":712700,\"level\":3},{\"id\":712738,\"name\":\"北斗镇\",\"pid\":712700,\"level\":3},{\"id\":712739,\"name\":\"二林镇\",\"pid\":712700,\"level\":3},{\"id\":712740,\"name\":\"田尾乡\",\"pid\":712700,\"level\":3},{\"id\":712741,\"name\":\"埤头乡\",\"pid\":712700,\"level\":3},{\"id\":712742,\"name\":\"芳苑乡\",\"pid\":712700,\"level\":3},{\"id\":712743,\"name\":\"大城乡\",\"pid\":712700,\"level\":3},{\"id\":712744,\"name\":\"竹塘乡\",\"pid\":712700,\"level\":3},{\"id\":712745,\"name\":\"溪州乡\",\"pid\":712700,\"level\":3}]},{\"id\":712800,\"name\":\"南投县\",\"pid\":710000,\"level\":2,\"children\":[{\"id\":712801,\"name\":\"南投市\",\"pid\":712800,\"level\":3},{\"id\":712821,\"name\":\"埔里镇\",\"pid\":712800,\"level\":3},{\"id\":712822,\"name\":\"草屯镇\",\"pid\":712800,\"level\":3},{\"id\":712823,\"name\":\"竹山镇\",\"pid\":712800,\"level\":3},{\"id\":712824,\"name\":\"集集镇\",\"pid\":712800,\"level\":3},{\"id\":712825,\"name\":\"名间乡\",\"pid\":712800,\"level\":3},{\"id\":712826,\"name\":\"鹿谷乡\",\"pid\":712800,\"level\":3},{\"id\":712827,\"name\":\"中寮乡\",\"pid\":712800,\"level\":3},{\"id\":712828,\"name\":\"鱼池乡\",\"pid\":712800,\"level\":3},{\"id\":712829,\"name\":\"国姓乡\",\"pid\":712800,\"level\":3},{\"id\":712830,\"name\":\"水里乡\",\"pid\":712800,\"level\":3},{\"id\":712831,\"name\":\"信义乡\",\"pid\":712800,\"level\":3},{\"id\":712832,\"name\":\"仁爱乡\",\"pid\":712800,\"level\":3}]},{\"id\":712900,\"name\":\"云林县\",\"pid\":710000,\"level\":2,\"children\":[{\"id\":712901,\"name\":\"斗六市\",\"pid\":712900,\"level\":3},{\"id\":712921,\"name\":\"斗南镇\",\"pid\":712900,\"level\":3},{\"id\":712922,\"name\":\"虎尾镇\",\"pid\":712900,\"level\":3},{\"id\":712923,\"name\":\"西螺镇\",\"pid\":712900,\"level\":3},{\"id\":712924,\"name\":\"土库镇\",\"pid\":712900,\"level\":3},{\"id\":712925,\"name\":\"北港镇\",\"pid\":712900,\"level\":3},{\"id\":712926,\"name\":\"古坑乡\",\"pid\":712900,\"level\":3},{\"id\":712927,\"name\":\"大埤乡\",\"pid\":712900,\"level\":3},{\"id\":712928,\"name\":\"莿桐乡\",\"pid\":712900,\"level\":3},{\"id\":712929,\"name\":\"林内乡\",\"pid\":712900,\"level\":3},{\"id\":712930,\"name\":\"二仑乡\",\"pid\":712900,\"level\":3},{\"id\":712931,\"name\":\"仑背乡\",\"pid\":712900,\"level\":3},{\"id\":712932,\"name\":\"麦寮乡\",\"pid\":712900,\"level\":3},{\"id\":712933,\"name\":\"东势乡\",\"pid\":712900,\"level\":3},{\"id\":712934,\"name\":\"褒忠乡\",\"pid\":712900,\"level\":3},{\"id\":712935,\"name\":\"台西乡\",\"pid\":712900,\"level\":3},{\"id\":712936,\"name\":\"元长乡\",\"pid\":712900,\"level\":3},{\"id\":712937,\"name\":\"四湖乡\",\"pid\":712900,\"level\":3},{\"id\":712938,\"name\":\"口湖乡\",\"pid\":712900,\"level\":3},{\"id\":712939,\"name\":\"水林乡\",\"pid\":712900,\"level\":3}]},{\"id\":713000,\"name\":\"嘉义县\",\"pid\":710000,\"level\":2,\"children\":[{\"id\":713001,\"name\":\"太保市\",\"pid\":713000,\"level\":3},{\"id\":713002,\"name\":\"朴子市\",\"pid\":713000,\"level\":3},{\"id\":713023,\"name\":\"布袋镇\",\"pid\":713000,\"level\":3},{\"id\":713024,\"name\":\"大林镇\",\"pid\":713000,\"level\":3},{\"id\":713025,\"name\":\"民雄乡\",\"pid\":713000,\"level\":3},{\"id\":713026,\"name\":\"溪口乡\",\"pid\":713000,\"level\":3},{\"id\":713027,\"name\":\"新港乡\",\"pid\":713000,\"level\":3},{\"id\":713028,\"name\":\"六脚乡\",\"pid\":713000,\"level\":3},{\"id\":713029,\"name\":\"东石乡\",\"pid\":713000,\"level\":3},{\"id\":713030,\"name\":\"义竹乡\",\"pid\":713000,\"level\":3},{\"id\":713031,\"name\":\"鹿草乡\",\"pid\":713000,\"level\":3},{\"id\":713032,\"name\":\"水上乡\",\"pid\":713000,\"level\":3},{\"id\":713033,\"name\":\"中埔乡\",\"pid\":713000,\"level\":3},{\"id\":713034,\"name\":\"竹崎乡\",\"pid\":713000,\"level\":3},{\"id\":713035,\"name\":\"梅山乡\",\"pid\":713000,\"level\":3},{\"id\":713036,\"name\":\"番路乡\",\"pid\":713000,\"level\":3},{\"id\":713037,\"name\":\"大埔乡\",\"pid\":713000,\"level\":3},{\"id\":713038,\"name\":\"阿里山乡\",\"pid\":713000,\"level\":3}]},{\"id\":713300,\"name\":\"屏东县\",\"pid\":710000,\"level\":2,\"children\":[{\"id\":713301,\"name\":\"屏东市\",\"pid\":713300,\"level\":3},{\"id\":713321,\"name\":\"潮州镇\",\"pid\":713300,\"level\":3},{\"id\":713322,\"name\":\"东港镇\",\"pid\":713300,\"level\":3},{\"id\":713323,\"name\":\"恒春镇\",\"pid\":713300,\"level\":3},{\"id\":713324,\"name\":\"万丹乡\",\"pid\":713300,\"level\":3},{\"id\":713325,\"name\":\"长治乡\",\"pid\":713300,\"level\":3},{\"id\":713326,\"name\":\"麟洛乡\",\"pid\":713300,\"level\":3},{\"id\":713327,\"name\":\"九如乡\",\"pid\":713300,\"level\":3},{\"id\":713328,\"name\":\"里港乡\",\"pid\":713300,\"level\":3},{\"id\":713329,\"name\":\"盐埔乡\",\"pid\":713300,\"level\":3},{\"id\":713330,\"name\":\"高树乡\",\"pid\":713300,\"level\":3},{\"id\":713331,\"name\":\"万峦乡\",\"pid\":713300,\"level\":3},{\"id\":713332,\"name\":\"内埔乡\",\"pid\":713300,\"level\":3},{\"id\":713333,\"name\":\"竹田乡\",\"pid\":713300,\"level\":3},{\"id\":713334,\"name\":\"新埤乡\",\"pid\":713300,\"level\":3},{\"id\":713335,\"name\":\"枋寮乡\",\"pid\":713300,\"level\":3},{\"id\":713336,\"name\":\"新园乡\",\"pid\":713300,\"level\":3},{\"id\":713337,\"name\":\"崁顶乡\",\"pid\":713300,\"level\":3},{\"id\":713338,\"name\":\"林边乡\",\"pid\":713300,\"level\":3},{\"id\":713339,\"name\":\"南州乡\",\"pid\":713300,\"level\":3},{\"id\":713340,\"name\":\"佳冬乡\",\"pid\":713300,\"level\":3},{\"id\":713341,\"name\":\"琉球乡\",\"pid\":713300,\"level\":3},{\"id\":713342,\"name\":\"车城乡\",\"pid\":713300,\"level\":3},{\"id\":713343,\"name\":\"满州乡\",\"pid\":713300,\"level\":3},{\"id\":713344,\"name\":\"枋山乡\",\"pid\":713300,\"level\":3},{\"id\":713345,\"name\":\"三地门乡\",\"pid\":713300,\"level\":3},{\"id\":713346,\"name\":\"雾台乡\",\"pid\":713300,\"level\":3},{\"id\":713347,\"name\":\"玛家乡\",\"pid\":713300,\"level\":3},{\"id\":713348,\"name\":\"泰武乡\",\"pid\":713300,\"level\":3},{\"id\":713349,\"name\":\"来义乡\",\"pid\":713300,\"level\":3},{\"id\":713350,\"name\":\"春日乡\",\"pid\":713300,\"level\":3},{\"id\":713351,\"name\":\"狮子乡\",\"pid\":713300,\"level\":3},{\"id\":713352,\"name\":\"牡丹乡\",\"pid\":713300,\"level\":3}]},{\"id\":713400,\"name\":\"台东县\",\"pid\":710000,\"level\":2,\"children\":[{\"id\":713401,\"name\":\"台东市\",\"pid\":713400,\"level\":3},{\"id\":713421,\"name\":\"成功镇\",\"pid\":713400,\"level\":3},{\"id\":713422,\"name\":\"关山镇\",\"pid\":713400,\"level\":3},{\"id\":713423,\"name\":\"卑南乡\",\"pid\":713400,\"level\":3},{\"id\":713424,\"name\":\"鹿野乡\",\"pid\":713400,\"level\":3},{\"id\":713425,\"name\":\"池上乡\",\"pid\":713400,\"level\":3},{\"id\":713426,\"name\":\"东河乡\",\"pid\":713400,\"level\":3},{\"id\":713427,\"name\":\"长滨乡\",\"pid\":713400,\"level\":3},{\"id\":713428,\"name\":\"太麻里乡\",\"pid\":713400,\"level\":3},{\"id\":713429,\"name\":\"大武乡\",\"pid\":713400,\"level\":3},{\"id\":713430,\"name\":\"绿岛乡\",\"pid\":713400,\"level\":3},{\"id\":713431,\"name\":\"海端乡\",\"pid\":713400,\"level\":3},{\"id\":713432,\"name\":\"延平乡\",\"pid\":713400,\"level\":3},{\"id\":713433,\"name\":\"金峰乡\",\"pid\":713400,\"level\":3},{\"id\":713434,\"name\":\"达仁乡\",\"pid\":713400,\"level\":3},{\"id\":713435,\"name\":\"兰屿乡\",\"pid\":713400,\"level\":3}]},{\"id\":713500,\"name\":\"花莲县\",\"pid\":710000,\"level\":2,\"children\":[{\"id\":713501,\"name\":\"花莲市\",\"pid\":713500,\"level\":3},{\"id\":713521,\"name\":\"凤林镇\",\"pid\":713500,\"level\":3},{\"id\":713522,\"name\":\"玉里镇\",\"pid\":713500,\"level\":3},{\"id\":713523,\"name\":\"新城乡\",\"pid\":713500,\"level\":3},{\"id\":713524,\"name\":\"吉安乡\",\"pid\":713500,\"level\":3},{\"id\":713525,\"name\":\"寿丰乡\",\"pid\":713500,\"level\":3},{\"id\":713526,\"name\":\"光复乡\",\"pid\":713500,\"level\":3},{\"id\":713527,\"name\":\"丰滨乡\",\"pid\":713500,\"level\":3},{\"id\":713528,\"name\":\"瑞穗乡\",\"pid\":713500,\"level\":3},{\"id\":713529,\"name\":\"富里乡\",\"pid\":713500,\"level\":3},{\"id\":713530,\"name\":\"秀林乡\",\"pid\":713500,\"level\":3},{\"id\":713531,\"name\":\"万荣乡\",\"pid\":713500,\"level\":3},{\"id\":713532,\"name\":\"卓溪乡\",\"pid\":713500,\"level\":3}]},{\"id\":713600,\"name\":\"澎湖县\",\"pid\":710000,\"level\":2,\"children\":[{\"id\":713601,\"name\":\"马公市\",\"pid\":713600,\"level\":3},{\"id\":713621,\"name\":\"湖西乡\",\"pid\":713600,\"level\":3},{\"id\":713622,\"name\":\"白沙乡\",\"pid\":713600,\"level\":3},{\"id\":713623,\"name\":\"西屿乡\",\"pid\":713600,\"level\":3},{\"id\":713624,\"name\":\"望安乡\",\"pid\":713600,\"level\":3},{\"id\":713625,\"name\":\"七美乡\",\"pid\":713600,\"level\":3}]},{\"id\":713700,\"name\":\"金门县\",\"pid\":710000,\"level\":2,\"children\":[{\"id\":713701,\"name\":\"金城镇\",\"pid\":713700,\"level\":3},{\"id\":713702,\"name\":\"金湖镇\",\"pid\":713700,\"level\":3},{\"id\":713703,\"name\":\"金沙镇\",\"pid\":713700,\"level\":3},{\"id\":713704,\"name\":\"金宁乡\",\"pid\":713700,\"level\":3},{\"id\":713705,\"name\":\"烈屿乡\",\"pid\":713700,\"level\":3},{\"id\":713706,\"name\":\"乌丘乡\",\"pid\":713700,\"level\":3}]},{\"id\":713800,\"name\":\"连江县\",\"pid\":710000,\"level\":2,\"children\":[{\"id\":713801,\"name\":\"南竿乡\",\"pid\":713800,\"level\":3},{\"id\":713802,\"name\":\"北竿乡\",\"pid\":713800,\"level\":3},{\"id\":713803,\"name\":\"莒光乡\",\"pid\":713800,\"level\":3},{\"id\":713804,\"name\":\"东引乡\",\"pid\":713800,\"level\":3}]}]},{\"id\":810000,\"name\":\"香港特别行政区\",\"pid\":100000,\"level\":1,\"children\":[{\"id\":810100,\"name\":\"香港岛\",\"pid\":810000,\"level\":2,\"children\":[{\"id\":810101,\"name\":\"中西区\",\"pid\":810100,\"level\":3},{\"id\":810102,\"name\":\"湾仔区\",\"pid\":810100,\"level\":3},{\"id\":810103,\"name\":\"东区\",\"pid\":810100,\"level\":3},{\"id\":810104,\"name\":\"南区\",\"pid\":810100,\"level\":3}]},{\"id\":810200,\"name\":\"九龙\",\"pid\":810000,\"level\":2,\"children\":[{\"id\":810201,\"name\":\"油尖旺区\",\"pid\":810200,\"level\":3},{\"id\":810202,\"name\":\"深水埗区\",\"pid\":810200,\"level\":3},{\"id\":810203,\"name\":\"九龙城区\",\"pid\":810200,\"level\":3},{\"id\":810204,\"name\":\"黄大仙区\",\"pid\":810200,\"level\":3},{\"id\":810205,\"name\":\"观塘区\",\"pid\":810200,\"level\":3}]},{\"id\":810300,\"name\":\"新界\",\"pid\":810000,\"level\":2,\"children\":[{\"id\":810301,\"name\":\"荃湾区\",\"pid\":810300,\"level\":3},{\"id\":810302,\"name\":\"屯门区\",\"pid\":810300,\"level\":3},{\"id\":810303,\"name\":\"元朗区\",\"pid\":810300,\"level\":3},{\"id\":810304,\"name\":\"北区\",\"pid\":810300,\"level\":3},{\"id\":810305,\"name\":\"大埔区\",\"pid\":810300,\"level\":3},{\"id\":810306,\"name\":\"西贡区\",\"pid\":810300,\"level\":3},{\"id\":810307,\"name\":\"沙田区\",\"pid\":810300,\"level\":3},{\"id\":810308,\"name\":\"葵青区\",\"pid\":810300,\"level\":3},{\"id\":810309,\"name\":\"离岛区\",\"pid\":810300,\"level\":3}]}]},{\"id\":820000,\"name\":\"澳门特别行政区\",\"pid\":100000,\"level\":1,\"children\":[{\"id\":820100,\"name\":\"澳门半岛\",\"pid\":820000,\"level\":2,\"children\":[{\"id\":820101,\"name\":\"花地玛堂区\",\"pid\":820100,\"level\":3},{\"id\":820102,\"name\":\"圣安多尼堂区\",\"pid\":820100,\"level\":3},{\"id\":820103,\"name\":\"大堂区\",\"pid\":820100,\"level\":3},{\"id\":820104,\"name\":\"望德堂区\",\"pid\":820100,\"level\":3},{\"id\":820105,\"name\":\"风顺堂区\",\"pid\":820100,\"level\":3}]},{\"id\":820200,\"name\":\"氹仔岛\",\"pid\":820000,\"level\":2,\"children\":[{\"id\":820201,\"name\":\"嘉模堂区\",\"pid\":820200,\"level\":3}]},{\"id\":820300,\"name\":\"路环岛\",\"pid\":820000,\"level\":2,\"children\":[{\"id\":820301,\"name\":\"圣方济各堂区\",\"pid\":820300,\"level\":3}]}]},{\"id\":900000,\"name\":\"钓鱼岛\",\"pid\":100000,\"level\":1,\"children\":[{\"id\":900001,\"name\":\"钓鱼岛\",\"pid\":900000,\"level\":2,\"children\":[{\"id\":900002,\"name\":\"钓鱼岛\",\"pid\":900001,\"level\":3}]}]}]");

/***/ })
]]);
//# sourceMappingURL=../../.sourcemap/mp-weixin/common/vendor.js.map